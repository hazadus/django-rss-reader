[
{
  "model": "feeds.entry",
  "pk": 1,
  "fields": {
    "feed": 46,
    "title": "Понедельник начинается с дичи! Американец разбил римские статуи, потому что они оскорбляли «чувства верующего»",
    "author": "Владимир Бровин",
    "url": "https://disgustingmen.com/blog/monday-weird-news-new-379/",
    "image_url": "https://disgustingmen.com/wp-content/uploads/2023/10/statue-3.jpg",
    "description": "<p>Понедельник начинается с дичи! Понятное дело, настоящую дичь из новостей не переплюнет ни один мужчина из Флориды. Но смысл рубрики и не в этом. Наша задача — сделать так, чтобы вы отвлеклись от трудов, бахнули кофейка и отвлеклись от всей херни хотя бы на 5 минут. Эдакая рубрика-рехаб. Читайте в 379-м выпуске: — Американский турист [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/blog/monday-weird-news-new-379/\" rel=\"nofollow\">Понедельник начинается с дичи! Американец разбил римские статуи, потому что они оскорбляли «чувства верующего»</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "summary": "<p>Понедельник начинается с дичи! Понятное дело, настоящую дичь из новостей не переплюнет ни один мужчина из Флориды. Но смысл рубрики и не в этом. Наша задача — сделать так, чтобы вы отвлеклись от трудов, бахнули кофейка и отвлеклись от всей херни хотя бы на 5 минут. Эдакая рубрика-рехаб. Читайте в 379-м выпуске: — Американский турист [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/blog/monday-weird-news-new-379/\" rel=\"nofollow\">Понедельник начинается с дичи! Американец разбил римские статуи, потому что они оскорбляли «чувства верующего»</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "content": null,
    "pub_date": "2023-10-09T08:30:38Z",
    "upd_date": "2023-10-09T08:30:38Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:43.723Z",
    "updated": "2023-10-09T09:35:52.730Z",
    "tags": [
      1,
      2,
      3
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 2,
  "fields": {
    "feed": 46,
    "title": "Случайные обзоры: настольный киберпанковый PUBG, справочники по мирам Толкина и «рабочий» пуэр",
    "author": "Disgusting Men",
    "url": "https://disgustingmen.com/blog/random-reviews-08-10-2023/",
    "image_url": "https://disgustingmen.com/wp-content/uploads/2023/10/tolkien-books-2-e1696782058894.jpg",
    "description": "<p>«Случайные обзоры», наконец-то! В этом выпуске: Виктор Зуев советует настольную «королевскую битву» в киберпанковом сеттинге (да еще и от российских разработчиков), Владимир Бровин рекомендует хороший пуэр для изощренных кофеиновых торчков, а наш иррегулярный автор RCKTfngrs с энтузиазмом обозревает пару книг, посвященных мирам Толкина. «Неон» — настольный PUBG в сеттинге киберпанка, сделанный в России События настольной [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/blog/random-reviews-08-10-2023/\" rel=\"nofollow\">Случайные обзоры: настольный киберпанковый PUBG, справочники по мирам Толкина и «рабочий» пуэр</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "summary": "<p>«Случайные обзоры», наконец-то! В этом выпуске: Виктор Зуев советует настольную «королевскую битву» в киберпанковом сеттинге (да еще и от российских разработчиков), Владимир Бровин рекомендует хороший пуэр для изощренных кофеиновых торчков, а наш иррегулярный автор RCKTfngrs с энтузиазмом обозревает пару книг, посвященных мирам Толкина. «Неон» — настольный PUBG в сеттинге киберпанка, сделанный в России События настольной [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/blog/random-reviews-08-10-2023/\" rel=\"nofollow\">Случайные обзоры: настольный киберпанковый PUBG, справочники по мирам Толкина и «рабочий» пуэр</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "content": null,
    "pub_date": "2023-10-08T16:55:57Z",
    "upd_date": "2023-10-08T16:55:57Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:44.445Z",
    "updated": "2023-10-09T09:36:00.876Z",
    "tags": [
      1,
      4
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 3,
  "fields": {
    "feed": 46,
    "title": "Бриллиантовые руки: невероятная, но правдивая история о том, как анонимусы с Reddit победили Уолл-Стрит (а Голливуд снял про это фильм!)",
    "author": "Дмитрий Соколов",
    "url": "https://disgustingmen.com/kino/dumb-money/",
    "image_url": "https://disgustingmen.com/wp-content/uploads/2023/10/dumb-money-10.jpg",
    "description": "<p>В российский прокат выходит биографическая комедия «Дурные деньги» — о том, как никому не известный финансовый аналитик-ютубер спас целую сеть геймерских магазинов от разорения, обрушил несколько хедж-фондов и заодно сделал кучу простых людей богаче. Рассказываем о фильме и стоящей за ним великой биржевой панике 2021-го. Кит Гилл — рядовой аналитик в крупной компании, на досуге [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/kino/dumb-money/\" rel=\"nofollow\">Бриллиантовые руки: невероятная, но правдивая история о том, как анонимусы с Reddit победили Уолл-Стрит (а Голливуд снял про это фильм!)</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "summary": "<p>В российский прокат выходит биографическая комедия «Дурные деньги» — о том, как никому не известный финансовый аналитик-ютубер спас целую сеть геймерских магазинов от разорения, обрушил несколько хедж-фондов и заодно сделал кучу простых людей богаче. Рассказываем о фильме и стоящей за ним великой биржевой панике 2021-го. Кит Гилл — рядовой аналитик в крупной компании, на досуге [&#8230;]</p>\n<p>Сообщение <a href=\"https://disgustingmen.com/kino/dumb-money/\" rel=\"nofollow\">Бриллиантовые руки: невероятная, но правдивая история о том, как анонимусы с Reddit победили Уолл-Стрит (а Голливуд снял про это фильм!)</a> появились сначала на <a href=\"https://disgustingmen.com\" rel=\"nofollow\">DISGUSTING MEN. Отвратительные мужики</a>.</p>",
    "content": null,
    "pub_date": "2023-10-07T10:09:56Z",
    "upd_date": "2023-10-07T10:09:56Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:45.119Z",
    "updated": "2023-10-09T09:36:08.070Z",
    "tags": [
      6,
      7,
      5
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 4,
  "fields": {
    "feed": 45,
    "title": "Microsoft представил OneDrive 3.0 — новый дизайн, поддержка Copilot и многое другое",
    "author": "Денис",
    "url": "https://surface-pro.ru/2023/10/04/microsoft-predstavil-onedrive-3-0-novyj-dizajn-podderzhka-copilot-i-mnogoe-drugoe/",
    "image_url": "",
    "description": "Microsoft представил новую версию своего облачного хранилища OneDrive 3.0. Обновились функции для работы с документами, посвежел дизайн, появилась поддержка искусственного интеллекта Copilot. Теперь в веб версии OneDrive есть раздел «Для вас», который показывает рекомендованные файлы. Они могут быть не только в самом OneDrive, но и в Microsoft Teams. В разделе «Общие» теперь собраны все файлы, к &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/04/microsoft-predstavil-onedrive-3-0-novyj-dizajn-podderzhka-copilot-i-mnogoe-drugoe/\">Читать далее <span class=\"screen-reader-text\">Microsoft представил OneDrive 3.0 — новый дизайн, поддержка Copilot и многое другое</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "summary": "Microsoft представил новую версию своего облачного хранилища OneDrive 3.0. Обновились функции для работы с документами, посвежел дизайн, появилась поддержка искусственного интеллекта Copilot. Теперь в веб версии OneDrive есть раздел «Для вас», который показывает рекомендованные файлы. Они могут быть не только в самом OneDrive, но и в Microsoft Teams. В разделе «Общие» теперь собраны все файлы, к &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/04/microsoft-predstavil-onedrive-3-0-novyj-dizajn-podderzhka-copilot-i-mnogoe-drugoe/\">Читать далее <span class=\"screen-reader-text\">Microsoft представил OneDrive 3.0 — новый дизайн, поддержка Copilot и многое другое</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "content": "<p><img alt=\"\" class=\"alignnone size-full wp-image-15388\" height=\"960\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/onedrive3.jpg\" width=\"1440\" /></p>\n<p>Microsoft представил новую версию своего облачного хранилища OneDrive 3.0. Обновились функции для работы с документами, посвежел дизайн, появилась поддержка искусственного интеллекта Copilot.</p>\n<p><span id=\"more-15382\"></span></p>\n<p>Теперь в веб версии OneDrive есть раздел «Для вас», который показывает рекомендованные файлы. Они могут быть не только в самом OneDrive, но и в Microsoft Teams.</p>\n<p><img alt=\"\" class=\"alignnone size-full wp-image-15384\" height=\"1253\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/16.jpg\" width=\"2206\" /></p>\n<p>В разделе «Общие» теперь собраны все файлы, к которым вы предоставили доступ через Microsoft Teams или по электронной почте. Этот раздел стал удобнее для управления доступом к файлам.</p>\n<p>Для тех, кто работает с несколькими файлами одновременно, появился раздел «Люди». Здесь можно найти файлы нужного коллеги, просто введя его фамилию и выбрав аватарку. Можно отфильтровать список и закрепить в начале страницы коллег, с кем работаете чаще всего.</p>\n<p><img alt=\"\" class=\"alignnone size-full wp-image-15385\" height=\"1277\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/43.jpg\" width=\"2249\" /></p>\n<p>Также появилась возможность выбирать цвет папки в OneDrive для лучшего визуального восприятия.</p>\n<p><img alt=\"\" class=\"alignnone size-full wp-image-15386\" height=\"1064\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/f2qvqof.png\" width=\"1441\" /></p>\n<p>Microsoft заявляет, что веб-версия OneDrive теперь открывается в два раза быстрее и позволяет мгновенно сортировать файлы. Также улучшена прокрутка и поддержка автономного режима работы. Таким образом, вскоре вы сможете открывать OneDrive в своём браузере без подключения к интернету. Функция «Файлы по запросу» также появится в веб-версии OneDrive, а значит вы сможете сделать нужные вам файлы доступными в автономном режиме. Ранее автономный режим и «Файлы по запросу» были доступны только в настольном приложении OneDrive.</p>\n<p><img alt=\"\" class=\"alignnone size-full wp-image-15387\" height=\"1186\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/32.png\" width=\"2092\" /></p>\n<p>По просьбе бизнес-клиентов будет добавлена возможность открытия любых документов из OneDrive в установленных приложениях на устройстве. Например, можно будет открыть PDF и CAD в соответствующих приложениях.</p>\n<p>И, наконец, в декабре в OneDrive появится поддержка функции Copilot, правда для её использования потребуется подписка Microsoft 365 Copilot. Эта функция сможет отслеживать изменения в документах, которые вносите вы и ваши коллеги. Ежедневно пользователи будут получать краткую сводку, включающую в себя список важных изменений и краткие сведения о добавленных комментариях.</p>\n<p>Microsoft заявляет, что пользователи уже могут оценить большую часть изменений в интерфейсе OneDrive на сайте onedrive.com. Другие изменения появятся в начале 2024 года.</p>\n<p>Не забудьте <a href=\"https://t.me/microsoft_surface\">подписаться на наш канал в Telegram!</a></p>",
    "pub_date": "2023-10-04T14:39:19Z",
    "upd_date": "2023-10-04T14:39:19Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:45.930Z",
    "updated": "2023-10-09T09:33:45.930Z",
    "tags": [
      9,
      8,
      10,
      11,
      3
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 5,
  "fields": {
    "feed": 45,
    "title": "Microsoft инвестировал 100 млрд долларов в Bing",
    "author": "Денис",
    "url": "https://surface-pro.ru/2023/10/03/microsoft-investiroval-100-mlrd-dollarov-v-bing/",
    "image_url": "",
    "description": "Генеральный директор Microsoft Сатья Наделла дал показания в рамках антимонопольного расследования против Google, которое проводится Министерством юстиции США. Он раскритиковал главенствующее положение Google на рынке поисковых систем и поделился некоторыми инсайдами относительно Bing. Сатья Наделла был приглашен Министерством юстиции США для обсуждения вопроса доминирования Google на рынке поисковых систем. Материнская компания Google, Alphabet, обвиняется в поддержании монополии через незаконные действия, &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/03/microsoft-investiroval-100-mlrd-dollarov-v-bing/\">Читать далее <span class=\"screen-reader-text\">Microsoft инвестировал 100 млрд долларов в Bing</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "summary": "Генеральный директор Microsoft Сатья Наделла дал показания в рамках антимонопольного расследования против Google, которое проводится Министерством юстиции США. Он раскритиковал главенствующее положение Google на рынке поисковых систем и поделился некоторыми инсайдами относительно Bing. Сатья Наделла был приглашен Министерством юстиции США для обсуждения вопроса доминирования Google на рынке поисковых систем. Материнская компания Google, Alphabet, обвиняется в поддержании монополии через незаконные действия, &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/03/microsoft-investiroval-100-mlrd-dollarov-v-bing/\">Читать далее <span class=\"screen-reader-text\">Microsoft инвестировал 100 млрд долларов в Bing</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "content": "<p><img alt=\"\" class=\"alignnone size-full wp-image-15378\" height=\"720\" src=\"https://surface-pro.ru/wp-content/uploads/2023/10/XEFfyKGmMzzxDZpZrnh7VM-1920-80.jpg.jpg\" width=\"1280\" /></p>\n<p>Генеральный директор Microsoft Сатья Наделла дал показания в рамках антимонопольного расследования против Google, которое проводится Министерством юстиции США. Он раскритиковал главенствующее положение Google на рынке поисковых систем и поделился некоторыми инсайдами относительно Bing.</p>\n<p><span id=\"more-15377\"></span></p>\n<p>Сатья Наделла был приглашен Министерством юстиции США для обсуждения вопроса доминирования Google на рынке поисковых систем. Материнская компания Google, Alphabet, обвиняется в поддержании монополии через незаконные действия, в частности, выплату 10 миллиардов долларов в год мобильным операторам и производителям смартфонов за установку Google как поисковой системы по умолчанию.</p>\n<p>Наделла привел пример того, как Google стала неотъемлемой частью повседневной жизни: люди просыпаются, чистят зубы и ищут информацию в Google.</p>\n<p>Он также поделился, что Microsoft пытался установить Bing как поисковую систему по умолчанию на устройствах Apple, но не смог этого сделать из-за конкуренции с Google. По его мнению, Microsoft предложила лучшие условия, но Apple использовала это предложение, чтобы «поднять ставки» и заставить Google заплатить больше за сохранение своего статуса поисковой системы по умолчанию.</p>\n<p>Генеральный директор Microsoft также отметил инвестирование около 100 миллиардов долларов в разработку поисковой системы Bing, подчеркнув, что, несмотря на то, что их доля рынка крайне мала, они продолжают трудиться в этом направлении, считая интернет-поиск важной областью программного обеспечения, где они могут внести свой вклад.</p>\n<p>Не забудьте <a href=\"https://t.me/microsoft_surface\">подписаться на наш канал в Telegram!</a></p>",
    "pub_date": "2023-10-03T11:29:21Z",
    "upd_date": "2023-10-03T11:29:21Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:46.327Z",
    "updated": "2023-10-09T09:33:46.327Z",
    "tags": [
      13,
      14,
      9,
      15,
      12,
      3
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 6,
  "fields": {
    "feed": 45,
    "title": "Surface Duo 2 получил незначительное обновление прошивки",
    "author": "Денис",
    "url": "https://surface-pro.ru/2023/10/02/surface-duo-2-poluchil-neznachitelnoe-obnovlenie-proshivki/",
    "image_url": "",
    "description": "Для второго поколения Surface Duo стало доступно обновление прошивки от сентября 2023 года. Как и почти все другие обновления для Surface Duo 2, последнее обновление не несет в себе ничего, кроме исправлений безопасности Android. Крошечный размер в 56 МБ, который требуется для установки, также является еще одним признаком того, что после установки сентябрьского обновления прошивки &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/02/surface-duo-2-poluchil-neznachitelnoe-obnovlenie-proshivki/\">Читать далее <span class=\"screen-reader-text\">Surface Duo 2 получил незначительное обновление прошивки</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "summary": "Для второго поколения Surface Duo стало доступно обновление прошивки от сентября 2023 года. Как и почти все другие обновления для Surface Duo 2, последнее обновление не несет в себе ничего, кроме исправлений безопасности Android. Крошечный размер в 56 МБ, который требуется для установки, также является еще одним признаком того, что после установки сентябрьского обновления прошивки &#8230; <a class=\"more-link\" href=\"https://surface-pro.ru/2023/10/02/surface-duo-2-poluchil-neznachitelnoe-obnovlenie-proshivki/\">Читать далее <span class=\"screen-reader-text\">Surface Duo 2 получил незначительное обновление прошивки</span> <span class=\"meta-nav\">&#8594;</span></a>",
    "content": "<p><img alt=\"\" class=\"alignnone size-full wp-image-9496\" height=\"2000\" src=\"https://surface-pro.ru/wp-content/uploads/2021/11/Surface-Duo-2-Review-00850.jpg\" width=\"2998\" /></p>\n<p>Для второго поколения Surface Duo стало доступно обновление прошивки от сентября 2023 года. Как и почти все другие обновления для Surface Duo 2, последнее обновление не несет в себе ничего, кроме исправлений безопасности Android.</p>\n<p><span id=\"more-15370\"></span></p>\n<p>Крошечный размер в 56 МБ, который требуется для установки, также является еще одним признаком того, что после установки сентябрьского обновления прошивки 2023 для Surface Duo 2 вам будет сложно найти видимые изменения. Загрузить его можно через обновление системы в настройках смартфона.</p>\n<p>Напомним, что компания Microsoft <a href=\"https://surface-pro.ru/2023/09/11/prekrashhena-podderzhka-surface-duo-1/\">прекратила</a> поддержку оригинального Surface Duo 10 сентября 2023 года. Таким образом, Surface Duo 2 теперь является единственным Surface не на Windows, получающим ежемесячные обновления прошивки. Microsoft обещает продолжать поддерживать двухэкранный смартфон еще в течение года — окончание поддержки Surface Duo 2 запланировано на 21 октября 2024 года.</p>\n<p>Однако не стоит ожидать многого. Согласно последним сообщениям, Microsoft перевела большую часть команды Duo на другие проекты внутри компании, и обновление смартфона после текущей версии <a href=\"https://surface-pro.ru/2022/10/26/android-12l-nakonec-to-dostupen-dlya-surface-duo-i-surface-duo-2/\">Android 12L</a> не планируется.</p>\n<p>Установить Android 13 или 14 на Surface Duo первого или второго поколения, скорее всего, можно будет только с помощью неофициальных образов.</p>\n<p>Не забудьте <a href=\"https://t.me/microsoft_surface\">подписаться на наш канал в Telegram!</a></p>",
    "pub_date": "2023-10-02T13:12:33Z",
    "upd_date": "2023-10-02T13:12:33Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:46.709Z",
    "updated": "2023-10-09T09:33:46.709Z",
    "tags": [
      17,
      9,
      16,
      18,
      3
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 7,
  "fields": {
    "feed": 44,
    "title": "Avast Premium Security for Mac review: Excellent, but should you buy?",
    "author": null,
    "url": "https://www.macworld.com/article/234101/avast-premium-security-review.html",
    "image_url": "https://www.macworld.com/wp-content/uploads/2023/10/Avast-Premium-Security.jpg?quality=50&strip=all&w=1024",
    "description": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n<div class=\"review\" id=\"review-body\"><span class=\"review-title\">At a Glance</span><h3 class=\"review-subTitle\" id=\"experts-rating\">Expert's Rating</h3><div class=\"starRating\"></div>\n<div><div class=\"review-columns\"><div class=\"review-column\"><h3 class=\"review-subTitle\" id=\"pros\">Pros</h3><ul class=\"pros review-list\"><li>Impressive array of viral, malware detection, and network tools</li><li>Easy means of specifying antiviral scan types and target volumes</li><li>Reasonable price point for monthly subscription tiers</li></ul></div><div class=\"review-column\"><h3 class=\"review-subTitle\" id=\"cons\">Cons</h3><ul class=\"cons review-list\"><li>Slightly overt marketing/advertising to push users towards the &ldquo;Ultimate&rdquo; subscription tier and its additional toolset</li><li>Antiviral and malware removal tools could offer more detailed descriptions of suspect files once they&rsquo;ve been located</li></ul></div></div></div><h3 class=\"review-subTitle review-subTitle--borderTop\" id=\"our-verdict\">Our Verdict</h3><p class=\"verdict\">The suite offers a good suite of tools at a good price, but needs to better define its subscription tiers. Desirable functions such as VPN, disk cleanup, and anti-tracking tools come at a higher monthly subscription fee or as part of the &ldquo;Ultimate&rdquo; subscription tier. &nbsp;</p>\n</div>\n\t\t\t\t<h3 class=\"review-best-price\" id=\"best-prices-today-avast-premium-security\">\n\t\t\tBest Prices Today: Avast Premium Security\t\t</h3>\n\t\t\t\t<div class=\"wp-block-price-comparison price-comparison \">\n\t\t\n\t\t<div class=\"new_products_tab tabcontent\" id=\"New\">\n\n\t\t\t<div class=\"price-comparison__record price-comparison__record--header\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Retailer</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t<span>Price</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record\">\n\t\t\t\t\t\t\t<div class=\"price-comparison__image\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Avast Software &ndash; Avast Free Antivirus</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t\t\t\t<span>$0</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a class=\"price-comparison__view-button\" href=\"https://www.jdoqocy.com/click-100470607-13637464?sid=1-1-234101-2-664500-19570&amp;url=https://www.avast.com/en-us/free-antivirus-download\" rel=\"nofollow\" target=\"_blank\">View Deal</a>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record\">\n\t\t\t\t\t\t\t<div class=\"price-comparison__image\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Avast Software &ndash; Avast One Essential</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t\t\t\t<span>$0</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a class=\"price-comparison__view-button\" href=\"https://www.jdoqocy.com/click-100470607-13637464?sid=1-1-234101-2-664500-19570&amp;url=https://www.avast.com/en-us/avast-one\" rel=\"nofollow\" target=\"_blank\">View Deal</a>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record price-comparison__record--footer\">\n\t\t\t\t\t<span class=\"price-comparison__footer-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tPrice comparison from over 24,000 stores worldwide\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t<div class=\"refurbished_products_tab tabcontent\" id=\"Refurbished\">\n\t\t\t<div class=\"refurbished-padding price-comparison__record price-comparison__record--header\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Product</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t<span>Price</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__record price-comparison__record--footer\">\n\t\t\t\t\t<span class=\"price-comparison__footer-text\">\n\t\t\t\t\tPrice comparison from Backmarket\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t\n\n\n<p>In as much as Apple has improved its <a href=\"https://www.macworld.com/article/668710/how-secure-mac.html\">security focus</a> in recent years, including releasing more frequent macOS updates when significant exploits are found to be in the wild, there&rsquo;s still a place for good antiviral tools. To this end, Avast Premium Security for macOS (version 15.74 at the time of writing) does an excellent job, setting out to keep your Mac secure from viruses and malware, scanning network content, and only missing an occasional beat.</p>\n\n\n\n<p>Like a number of <a href=\"https://www.macworld.com/article/668850/best-mac-antivirus-software.html\">antiviral software packages for the Mac (click to see our Best Picks)</a>, Avast Premium Security divides itself into several modules (Virus Scans, Core Shields, Traffic Monitor, Network Inspector, Email Guardian, Ransomware Shield, Quarantine, and Store). The home screen offers easy access to these tools. Click on the &ldquo;Virus Scans&rdquo; button and Avast Premium Security will download the latest virus definitions prior to offering a choice of running a Smart Scan, Deep Scan, Targeted Scan, or External Storage Scan. The user interface here is as simple as you could ask for, and it&rsquo;s handy to be able to quickly focus a scan on an external drive without having to dig through options and menus. Once suspect files are found, they can be readily quarantined and/or deleted. An initial scan turned up some questionable Javascript files that had been installed on my Mac.</p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Quarantine\" class=\"wp-image-2097907\" height=\"803\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-quarantine.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>The other tools within the software suite round out its features, and the Traffic Monitor and Network Inspector modules deserve some attention, as the Traffic Monitor shows how much data you&rsquo;re using and where your bandwidth is going. The Network Inspector, for its own part, quickly scans the network you&rsquo;re on, gauges its safety, offers a list of which devices are on the same network, and alerts you as to when an unfamiliar device joins the network.</p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Trafic Monitor\" class=\"wp-image-2097905\" height=\"794\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-trafic-monitor.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>The Core Shields feature impressed me when I ran it through a fake/&ldquo;smishing&rdquo; website that spawned from a random text message I received claiming a package I hadn&rsquo;t ordered had been lost, but that clicking on a fake USPS website link would resolve the issue. Avast&rsquo;s Real Site feature prevented the site from loading and questionable software from being accessed, as the questionable website was written to do. While the text and its links were suspicious, to begin with, this can help avoid future mistakes.&nbsp;</p>\n\n\n\n<p>We dinged <a href=\"https://www.macworld.com/article/2005226/malware-protection-avast-security-antivirus-scanner-in-test.html\">Avast Free Antivirus and Avast One Essential</a> for their cumbersome installation earlier this year, and the same steps remain for Avast Premium Security. Even though it installs quickly and runs well on <a href=\"https://www.macworld.com/article/1670742/macos-14-release-date-features-compatibility-beta.html\">macOS Sonoma</a>, with no appreciable slowdowns in spite of the background tasks it installs. The user still needs to grant the program full hard disk access and permission to filter network content, which can lead to a longer installation process than you might be accustomed to. The Avast Security Uninstaller application works well and there were no issues here, so there have been a few improvements since we last looked at it.&nbsp;</p>\n\n\n\n<p>If there are any real points of contention, it&rsquo;s a question of marketing. Avast, like almost all of its competitors, is now running on a subscription-based business model, and its SecureLine VPN, Cleanup Premium, and AntiTrack privacy tools are either available to subscribe to individually or can be accessed as part of the more expensive Avast Ultimate subscription tier. </p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Subscription\" class=\"wp-image-2097904\" height=\"805\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-subscription.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>If there&rsquo;s one suggestion I&rsquo;d like to make in terms of quarantined files, I&rsquo;d like Avast Premium Security to bring up the viral definitions of the files when they&rsquo;re highlighted and offer a description of what&rsquo;s been located and how it could affect your data and privacy. An informed user is a better user down the line, and this could help the user understand what&rsquo;s been installed and how to remove it now and avoid it in the future.&nbsp;</p>\n\n\n\n<p>Outside of a few nitpicky elements in terms of viral definitions and subscription tier marketing and advertising, Avast Premium Security installs cleanly, runs well, offers handy insights as to network security and which devices are on your network, and was able to stop a web browser prior to its visiting an extremely questionable smishing site. These are all worthy features, the price is right, and aside from wanting the VPN features and other tools within the $4.19/&pound;3.33/month price point as of this writing, remains a first-class suite worthy of your consideration.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"verdict\">Verdict </h2>\n\n\n\n<p>The suite offers a good suite of tools at a good price, but needs to better define its subscription tiers. Desirable functions such as VPN, disk cleanup, and anti-tracking tools come at a higher monthly subscription fee or as part of the &ldquo;Ultimate&rdquo; subscription tier. While the program has some terrific functionalities such as network scanning, being able to prevent a web browser from downloading software from a questionable website, and overall prevention, it feels as if some of the most desirable features (especially for a road warrior) are just out of reach unless you pay a little bit more.</p>\n\nMac, MacOS, Personal Software, Professional Software, Security Software and Services</div>",
    "summary": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n<div class=\"review\" id=\"review-body\"><span class=\"review-title\">At a Glance</span><h3 class=\"review-subTitle\" id=\"experts-rating\">Expert's Rating</h3><div class=\"starRating\"></div>\n<div><div class=\"review-columns\"><div class=\"review-column\"><h3 class=\"review-subTitle\" id=\"pros\">Pros</h3><ul class=\"pros review-list\"><li>Impressive array of viral, malware detection, and network tools</li><li>Easy means of specifying antiviral scan types and target volumes</li><li>Reasonable price point for monthly subscription tiers</li></ul></div><div class=\"review-column\"><h3 class=\"review-subTitle\" id=\"cons\">Cons</h3><ul class=\"cons review-list\"><li>Slightly overt marketing/advertising to push users towards the &ldquo;Ultimate&rdquo; subscription tier and its additional toolset</li><li>Antiviral and malware removal tools could offer more detailed descriptions of suspect files once they&rsquo;ve been located</li></ul></div></div></div><h3 class=\"review-subTitle review-subTitle--borderTop\" id=\"our-verdict\">Our Verdict</h3><p class=\"verdict\">The suite offers a good suite of tools at a good price, but needs to better define its subscription tiers. Desirable functions such as VPN, disk cleanup, and anti-tracking tools come at a higher monthly subscription fee or as part of the &ldquo;Ultimate&rdquo; subscription tier. &nbsp;</p>\n</div>\n\t\t\t\t<h3 class=\"review-best-price\" id=\"best-prices-today-avast-premium-security\">\n\t\t\tBest Prices Today: Avast Premium Security\t\t</h3>\n\t\t\t\t<div class=\"wp-block-price-comparison price-comparison \">\n\t\t\n\t\t<div class=\"new_products_tab tabcontent\" id=\"New\">\n\n\t\t\t<div class=\"price-comparison__record price-comparison__record--header\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Retailer</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t<span>Price</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record\">\n\t\t\t\t\t\t\t<div class=\"price-comparison__image\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Avast Software &ndash; Avast Free Antivirus</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t\t\t\t<span>$0</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a class=\"price-comparison__view-button\" href=\"https://www.jdoqocy.com/click-100470607-13637464?sid=1-1-234101-2-664500-19570&amp;url=https://www.avast.com/en-us/free-antivirus-download\" rel=\"nofollow\" target=\"_blank\">View Deal</a>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record\">\n\t\t\t\t\t\t\t<div class=\"price-comparison__image\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Avast Software &ndash; Avast One Essential</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t\t\t\t<span>$0</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a class=\"price-comparison__view-button\" href=\"https://www.jdoqocy.com/click-100470607-13637464?sid=1-1-234101-2-664500-19570&amp;url=https://www.avast.com/en-us/avast-one\" rel=\"nofollow\" target=\"_blank\">View Deal</a>\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"price-comparison__record price-comparison__record--footer\">\n\t\t\t\t\t<span class=\"price-comparison__footer-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tPrice comparison from over 24,000 stores worldwide\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t<div class=\"refurbished_products_tab tabcontent\" id=\"Refurbished\">\n\t\t\t<div class=\"refurbished-padding price-comparison__record price-comparison__record--header\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Product</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"price-comparison__price\">\n\t\t\t\t\t<span>Price</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"price-comparison__record price-comparison__record--footer\">\n\t\t\t\t\t<span class=\"price-comparison__footer-text\">\n\t\t\t\t\tPrice comparison from Backmarket\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t\n\n\n<p>In as much as Apple has improved its <a href=\"https://www.macworld.com/article/668710/how-secure-mac.html\">security focus</a> in recent years, including releasing more frequent macOS updates when significant exploits are found to be in the wild, there&rsquo;s still a place for good antiviral tools. To this end, Avast Premium Security for macOS (version 15.74 at the time of writing) does an excellent job, setting out to keep your Mac secure from viruses and malware, scanning network content, and only missing an occasional beat.</p>\n\n\n\n<p>Like a number of <a href=\"https://www.macworld.com/article/668850/best-mac-antivirus-software.html\">antiviral software packages for the Mac (click to see our Best Picks)</a>, Avast Premium Security divides itself into several modules (Virus Scans, Core Shields, Traffic Monitor, Network Inspector, Email Guardian, Ransomware Shield, Quarantine, and Store). The home screen offers easy access to these tools. Click on the &ldquo;Virus Scans&rdquo; button and Avast Premium Security will download the latest virus definitions prior to offering a choice of running a Smart Scan, Deep Scan, Targeted Scan, or External Storage Scan. The user interface here is as simple as you could ask for, and it&rsquo;s handy to be able to quickly focus a scan on an external drive without having to dig through options and menus. Once suspect files are found, they can be readily quarantined and/or deleted. An initial scan turned up some questionable Javascript files that had been installed on my Mac.</p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Quarantine\" class=\"wp-image-2097907\" height=\"803\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-quarantine.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>The other tools within the software suite round out its features, and the Traffic Monitor and Network Inspector modules deserve some attention, as the Traffic Monitor shows how much data you&rsquo;re using and where your bandwidth is going. The Network Inspector, for its own part, quickly scans the network you&rsquo;re on, gauges its safety, offers a list of which devices are on the same network, and alerts you as to when an unfamiliar device joins the network.</p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Trafic Monitor\" class=\"wp-image-2097905\" height=\"794\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-trafic-monitor.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>The Core Shields feature impressed me when I ran it through a fake/&ldquo;smishing&rdquo; website that spawned from a random text message I received claiming a package I hadn&rsquo;t ordered had been lost, but that clicking on a fake USPS website link would resolve the issue. Avast&rsquo;s Real Site feature prevented the site from loading and questionable software from being accessed, as the questionable website was written to do. While the text and its links were suspicious, to begin with, this can help avoid future mistakes.&nbsp;</p>\n\n\n\n<p>We dinged <a href=\"https://www.macworld.com/article/2005226/malware-protection-avast-security-antivirus-scanner-in-test.html\">Avast Free Antivirus and Avast One Essential</a> for their cumbersome installation earlier this year, and the same steps remain for Avast Premium Security. Even though it installs quickly and runs well on <a href=\"https://www.macworld.com/article/1670742/macos-14-release-date-features-compatibility-beta.html\">macOS Sonoma</a>, with no appreciable slowdowns in spite of the background tasks it installs. The user still needs to grant the program full hard disk access and permission to filter network content, which can lead to a longer installation process than you might be accustomed to. The Avast Security Uninstaller application works well and there were no issues here, so there have been a few improvements since we last looked at it.&nbsp;</p>\n\n\n\n<p>If there are any real points of contention, it&rsquo;s a question of marketing. Avast, like almost all of its competitors, is now running on a subscription-based business model, and its SecureLine VPN, Cleanup Premium, and AntiTrack privacy tools are either available to subscribe to individually or can be accessed as part of the more expensive Avast Ultimate subscription tier. </p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image size-large\"><img alt=\"Avast Subscription\" class=\"wp-image-2097904\" height=\"805\" src=\"https://b2c-contenthub.com/wp-content/uploads/2023/10/Avast-subscription.jpeg?quality=50&amp;strip=all&amp;w=1200\" width=\"1200\" /></figure><p class=\"imageCredit\">Foundry</p></div>\n\n\n\n<p>If there&rsquo;s one suggestion I&rsquo;d like to make in terms of quarantined files, I&rsquo;d like Avast Premium Security to bring up the viral definitions of the files when they&rsquo;re highlighted and offer a description of what&rsquo;s been located and how it could affect your data and privacy. An informed user is a better user down the line, and this could help the user understand what&rsquo;s been installed and how to remove it now and avoid it in the future.&nbsp;</p>\n\n\n\n<p>Outside of a few nitpicky elements in terms of viral definitions and subscription tier marketing and advertising, Avast Premium Security installs cleanly, runs well, offers handy insights as to network security and which devices are on your network, and was able to stop a web browser prior to its visiting an extremely questionable smishing site. These are all worthy features, the price is right, and aside from wanting the VPN features and other tools within the $4.19/&pound;3.33/month price point as of this writing, remains a first-class suite worthy of your consideration.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"verdict\">Verdict </h2>\n\n\n\n<p>The suite offers a good suite of tools at a good price, but needs to better define its subscription tiers. Desirable functions such as VPN, disk cleanup, and anti-tracking tools come at a higher monthly subscription fee or as part of the &ldquo;Ultimate&rdquo; subscription tier. While the program has some terrific functionalities such as network scanning, being able to prevent a web browser from downloading software from a questionable website, and overall prevention, it feels as if some of the most desirable features (especially for a road warrior) are just out of reach unless you pay a little bit more.</p>\n\nMac, MacOS, Personal Software, Professional Software, Security Software and Services</div>",
    "content": null,
    "pub_date": "2023-10-09T09:18:03Z",
    "upd_date": "2023-10-09T09:18:03Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:47.076Z",
    "updated": "2023-10-09T09:35:50.711Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 8,
  "fields": {
    "feed": 44,
    "title": "Develop your programming skills with this Python bundle, now under $25 during Deal Days",
    "author": null,
    "url": "https://www.macworld.com/article/2097708/develop-your-programming-skills-with-this-python-bundle-now-under-25-during-deal-days.html",
    "image_url": "https://www.macworld.com/wp-content/uploads/2023/10/Macworld-The-Premium-Python-Programming-Certification-Bundle-.jpeg?quality=50&strip=all&w=1024",
    "description": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Python is the world&rsquo;s most popular programming language due to its general-purpose nature and scalability. It&rsquo;s also one of the easiest languages to learn, and if you want to open new career paths or move up in your current role, harnessing this skill may be crucial.</p>\n\n\n\n<p>Fortunately, you don&rsquo;t need to look further than here for a&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">comprehensive Python programming education</a>. During our version of Prime Day, Deal Days, this Python bundle is only $23.97 (reg. $120) with no coupon necessary.</p>\n\n\n\n<p>This extensive bundle includes ten courses from some of the web&rsquo;s top instructors, including Juan Galvan (4.5-star instructor rating), Edouard Renard (4.6-star rating), and Joe Rahl (4.6/5-star rating). Just hop on your&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/apple-macbook-pro-13-3-core-i5-2-3ghz-8gb-ram-256gb-ssd-refurb-grade-b-space-gray&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">Mac</a>, and you can start with the absolute basics, like learning to write basic code with Python.</p>\n\n\n\n<p>Then, you can delve into more complicated&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">subject matters like ZERO to GUI programming, other advanced-level Python programming, and more</a>. Eventually, you&rsquo;ll work towards projects like an automatic stock trader and real-time stream processing.</p>\n\n\n\n<p>Gain an immersive Python education with these courses.</p>\n\n\n\n<p>During Deal Days, get&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">The Premium Python Programming Certification Bundle</a>&nbsp;for just $23.97. No coupon is required, but this deal ends October 15th at 11:59pm Pacific!</p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">&nbsp;</a></p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image\"><img alt=\"\" src=\"https://cdnp3.stackassets.com/45b5948476e7c44fd27feb4345e79498cc5d46ae/store/e2ac4cc098b0431e25504362435deb534422a12006146d68a897b84e3c0c/sale_300466_primary_image.jpg\" /></figure></div>\n\n\n\n<p><strong>The Premium Python Programming Certification Bundle &ndash; $23.97</strong></p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">See Deal</a></p>\n\n\n\n<p><em>Prices are subject to change.</em></p>\n\nComputer Accessories</div>",
    "summary": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Python is the world&rsquo;s most popular programming language due to its general-purpose nature and scalability. It&rsquo;s also one of the easiest languages to learn, and if you want to open new career paths or move up in your current role, harnessing this skill may be crucial.</p>\n\n\n\n<p>Fortunately, you don&rsquo;t need to look further than here for a&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">comprehensive Python programming education</a>. During our version of Prime Day, Deal Days, this Python bundle is only $23.97 (reg. $120) with no coupon necessary.</p>\n\n\n\n<p>This extensive bundle includes ten courses from some of the web&rsquo;s top instructors, including Juan Galvan (4.5-star instructor rating), Edouard Renard (4.6-star rating), and Joe Rahl (4.6/5-star rating). Just hop on your&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/apple-macbook-pro-13-3-core-i5-2-3ghz-8gb-ram-256gb-ssd-refurb-grade-b-space-gray&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">Mac</a>, and you can start with the absolute basics, like learning to write basic code with Python.</p>\n\n\n\n<p>Then, you can delve into more complicated&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">subject matters like ZERO to GUI programming, other advanced-level Python programming, and more</a>. Eventually, you&rsquo;ll work towards projects like an automatic stock trader and real-time stream processing.</p>\n\n\n\n<p>Gain an immersive Python education with these courses.</p>\n\n\n\n<p>During Deal Days, get&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">The Premium Python Programming Certification Bundle</a>&nbsp;for just $23.97. No coupon is required, but this deal ends October 15th at 11:59pm Pacific!</p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">&nbsp;</a></p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image\"><img alt=\"\" src=\"https://cdnp3.stackassets.com/45b5948476e7c44fd27feb4345e79498cc5d46ae/store/e2ac4cc098b0431e25504362435deb534422a12006146d68a897b84e3c0c/sale_300466_primary_image.jpg\" /></figure></div>\n\n\n\n<p><strong>The Premium Python Programming Certification Bundle &ndash; $23.97</strong></p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/the-premium-python-programming-certification-bundle?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=the-premium-python-programming-certification-bundle&amp;utm_term=scsf-579491&amp;utm_content=a0xRn0000000hGHIAY&amp;scsonar=1&amp;xcust=1-1-2097708-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">See Deal</a></p>\n\n\n\n<p><em>Prices are subject to change.</em></p>\n\nComputer Accessories</div>",
    "content": null,
    "pub_date": "2023-10-09T08:00:00Z",
    "upd_date": "2023-10-09T08:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:48.642Z",
    "updated": "2023-10-09T09:35:53.595Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 9,
  "fields": {
    "feed": 44,
    "title": "These translation earbuds are under $100 during our version of Prime Day",
    "author": null,
    "url": "https://www.macworld.com/article/2093654/these-translation-earbuds-are-under-100-during-our-version-of-prime-day.html",
    "image_url": "https://www.macworld.com/wp-content/uploads/2023/10/Macworld-Mymanu-CLIK-S-Award-Winning-Translation-Earbuds.jpeg?quality=50&strip=all&w=1024",
    "description": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Nobody wants to be unable to communicate effectively when they&rsquo;re traveling abroad. One of the simplest ways to ensure your trip is more seamless is to try and&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">communicate in the native language</a>, and the Mymanu CLIK S makes that easier than ever.</p>\n\n\n\n<p>If you&rsquo;re&nbsp;<a href=\"https://www.macworld.com/article/227268/podcast-492-how-to-travel-like-an-international-superspy.html\" rel=\"noreferrer noopener\" target=\"_blank\">traveling</a>&nbsp;sometime soon, make sure you pack these translation earbuds, especially since they&rsquo;re nearly half off during our version of Prime Day &mdash; Deal Days. From October 2nd through October 15th, these translation earbuds are only $89.97 (reg. $157).</p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n\n<p>A 2019 CES Innovation Awards Honoree, the CLIK S offers&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">live voice translations in 37 languages, enabling you to communicate with more than two billion people worldwide</a>. With the proprietary translation app, MyJuno, you can understand and then write or speak in any of these languages in moments.&nbsp;</p>\n\n\n\n<p>And, of course, you can use the CLIK buttons to switch between HD music listening, answering calls, and reading texts as you travel around. They also boast water resistance, Aptx&reg; for a superior wireless experience, voice assistance, and an extended battery life of 30 hours when using the included charging case. No wonder these translation earbuds boast a 5-star rating!</p>\n\n\n\n<p>During Deal Days, grab the&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">Mymanu CLIK S Translation Earbuds</a>&nbsp;for just $89.97. No coupon is required, but this exclusive pricing only lasts until October 15th at 11:59pm Pacific!</p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">&nbsp;</a></p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image\"><img alt=\"\" src=\"https://cdnp2.stackassets.com/384200a07c3852a641959e95dcf3c0fae1d3c20f/store/dd452bd65980475e21be264d8e65c0361aaa243c6a63f3dbe178ca86c27c/sale_27171_primary_image.jpg\" /></figure></div>\n\n\n\n<p><strong>Mymanu CLIK S: Award-Winning Translation Earbuds &ndash; $89.97</strong></p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">See Deal</a></p>\n\n\n\n<p><em>Prices subject to change.</em></p>\n\nHeadphones</div>",
    "summary": "<p><a href=\"https://www.macworld.com\" rel=\"nofollow\">Macworld</a></p>\n\n<div id=\"link_wrapped_content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Nobody wants to be unable to communicate effectively when they&rsquo;re traveling abroad. One of the simplest ways to ensure your trip is more seamless is to try and&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">communicate in the native language</a>, and the Mymanu CLIK S makes that easier than ever.</p>\n\n\n\n<p>If you&rsquo;re&nbsp;<a href=\"https://www.macworld.com/article/227268/podcast-492-how-to-travel-like-an-international-superspy.html\" rel=\"noreferrer noopener\" target=\"_blank\">traveling</a>&nbsp;sometime soon, make sure you pack these translation earbuds, especially since they&rsquo;re nearly half off during our version of Prime Day &mdash; Deal Days. From October 2nd through October 15th, these translation earbuds are only $89.97 (reg. $157).</p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n\n<p>A 2019 CES Innovation Awards Honoree, the CLIK S offers&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">live voice translations in 37 languages, enabling you to communicate with more than two billion people worldwide</a>. With the proprietary translation app, MyJuno, you can understand and then write or speak in any of these languages in moments.&nbsp;</p>\n\n\n\n<p>And, of course, you can use the CLIK buttons to switch between HD music listening, answering calls, and reading texts as you travel around. They also boast water resistance, Aptx&reg; for a superior wireless experience, voice assistance, and an extended battery life of 30 hours when using the included charging case. No wonder these translation earbuds boast a 5-star rating!</p>\n\n\n\n<p>During Deal Days, grab the&nbsp;<a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">Mymanu CLIK S Translation Earbuds</a>&nbsp;for just $89.97. No coupon is required, but this exclusive pricing only lasts until October 15th at 11:59pm Pacific!</p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">&nbsp;</a></p>\n\n\n<div class=\"extendedBlock-wrapper block-coreImage undefined\"><figure class=\"wp-block-image\"><img alt=\"\" src=\"https://cdnp2.stackassets.com/384200a07c3852a641959e95dcf3c0fae1d3c20f/store/dd452bd65980475e21be264d8e65c0361aaa243c6a63f3dbe178ca86c27c/sale_27171_primary_image.jpg\" /></figure></div>\n\n\n\n<p><strong>Mymanu CLIK S: Award-Winning Translation Earbuds &ndash; $89.97</strong></p>\n\n\n\n<p><a href=\"https://go.redirectingat.com/?id=111346X1569486&amp;url=https://shop.macworld.com/sales/mymanu-clik-s-award-winning-translation-earbuds?utm_source=macworld.com&amp;utm_medium=referral-cta&amp;utm_campaign=mymanu-clik-s-award-winning-translation-earbuds&amp;utm_term=scsf-580433&amp;utm_content=a0xRn0000001CaDIAU&amp;scsonar=1&amp;xcust=1-1-2093654-1-0-0&amp;sref=https://www.macworld.com/feed\" rel=\"nofollow\" target=\"_blank\">See Deal</a></p>\n\n\n\n<p><em>Prices subject to change.</em></p>\n\nHeadphones</div>",
    "content": null,
    "pub_date": "2023-10-08T08:00:00Z",
    "upd_date": "2023-10-08T08:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:50.116Z",
    "updated": "2023-10-09T09:36:04.320Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 10,
  "fields": {
    "feed": 43,
    "title": "The 11th Hour",
    "author": "torick",
    "url": "https://torick.ru/the-11th-hour/",
    "image_url": "",
    "description": "В прошлом выпуске я рассказал о двух выдающихся джентльменах, которых судьба свела в эффективный дуэт. Результат их первой серьезной деятельности – одна-единственная игра, да к тому же адвенчура – ошеломил дельцов от игровой индустрии и подстегнул технический прогресс начала девяностых. Но, как и многим гениям в любой сфере искусств, им не суждено было творить вместе [&#8230;]",
    "summary": "В прошлом выпуске я рассказал о двух выдающихся джентльменах, которых судьба свела в эффективный дуэт. Результат их первой серьезной деятельности – одна-единственная игра, да к тому же адвенчура – ошеломил дельцов от игровой индустрии и подстегнул технический прогресс начала девяностых. Но, как и многим гениям в любой сфере искусств, им не суждено было творить вместе [&#8230;]",
    "content": null,
    "pub_date": "2023-08-24T07:26:01Z",
    "upd_date": "2023-08-24T07:26:01Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:50.544Z",
    "updated": "2023-10-09T09:33:50.544Z",
    "tags": [
      20,
      19,
      21,
      22,
      23,
      24
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 11,
  "fields": {
    "feed": 43,
    "title": "The 7th Guest",
    "author": "torick",
    "url": "https://torick.ru/the-7th-guest/",
    "image_url": "",
    "description": "Эта история о дуэте художника средних лет и программиста-самоучки по праву занимает свое место в ультимативной истории игровой индустрии. Удивительный союз творческого начала и математического гения продержался не так долго, как всем хотелось бы, но он пронесся стремительной кометой мимо прочих, более именитых и долгоживущих созвездий, оставив после себя яркий след из всего двух легендарных [&#8230;]",
    "summary": "Эта история о дуэте художника средних лет и программиста-самоучки по праву занимает свое место в ультимативной истории игровой индустрии. Удивительный союз творческого начала и математического гения продержался не так долго, как всем хотелось бы, но он пронесся стремительной кометой мимо прочих, более именитых и долгоживущих созвездий, оставив после себя яркий след из всего двух легендарных [&#8230;]",
    "content": null,
    "pub_date": "2023-08-23T07:01:35Z",
    "upd_date": "2023-08-23T07:01:35Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:50.784Z",
    "updated": "2023-10-09T09:33:50.784Z",
    "tags": [
      20,
      19,
      21,
      22,
      23
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 12,
  "fields": {
    "feed": 43,
    "title": "Портрет отечественного геймдизайнера (2023)",
    "author": "torick",
    "url": "https://torick.ru/portret-otechestvennogo-gejmdizajnera-2023/",
    "image_url": "",
    "description": "В 2018 году мы с коллегами из Wargaming R&#38;D разрабатывали методологию GameCraft, и у меня возник вопрос &#8212; а нужна ли она вообще геймдизайнерам? Может, они и сами могут справиться с задачей по быстрой отработке идеи в концепцию? Размышления привели меня к необходимости провести анонимный опрос на тему синдрома самозванца, способности самостоятельно разобраться с задачей [&#8230;]",
    "summary": "В 2018 году мы с коллегами из Wargaming R&#38;D разрабатывали методологию GameCraft, и у меня возник вопрос &#8212; а нужна ли она вообще геймдизайнерам? Может, они и сами могут справиться с задачей по быстрой отработке идеи в концепцию? Размышления привели меня к необходимости провести анонимный опрос на тему синдрома самозванца, способности самостоятельно разобраться с задачей [&#8230;]",
    "content": null,
    "pub_date": "2023-07-13T10:35:51Z",
    "upd_date": "2023-07-13T10:35:51Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:33:50.976Z",
    "updated": "2023-10-09T09:33:50.976Z",
    "tags": [
      27,
      28,
      25,
      26,
      29
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 13,
  "fields": {
    "feed": 42,
    "title": "Обзор Castlevania Nocturne. Vive la révolution",
    "author": "Валентин Сонин",
    "url": "https://www.igromania.ru/article/32415/obzor-castlevania-nocturne-vive-la-rvolution",
    "image_url": "https://newcdn.igromania.ru/articles/pics/tmp/images/2023/10/9/4c711bc9-43bf-c80c-5bfc-011ce15156b2.jpg",
    "description": "Когда оригинальная адаптация Castlevania вышла на Netflix в 2017 году, ожидать от неё можно было чего угодно. Хотя франшиза про борцов с вампирами существовала",
    "summary": "Когда оригинальная адаптация Castlevania вышла на Netflix в 2017 году, ожидать от неё можно было чего угодно. Хотя франшиза про борцов с вампирами существовала",
    "content": null,
    "pub_date": "2023-10-09T09:33:11Z",
    "upd_date": "2023-10-09T09:33:11Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:33:56.854Z",
    "updated": "2023-10-09T09:35:48.694Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 14,
  "fields": {
    "feed": 42,
    "title": "Осквернённый храм в Baldur’s Gate 3 — как открыть лунную дверь",
    "author": "Makarov Vladimir",
    "url": "https://www.igromania.ru/article/32414/oskvernyonnyij-hram-v-baldurs-gate-3-kak-otkryit-lunnuyu-dver",
    "image_url": "https://newcdn.igromania.ru/articles/pics/tmp/images/2023/10/8/be9e14a4-6df0-4929-6f1c-3d9f977cae04.jpg",
    "description": "В Baldur's Gate III игроки встретят множество загадок — их решение позволит добраться до уникальных предметов и узнать некоторые секреты. В этом гайде мы",
    "summary": "В Baldur's Gate III игроки встретят множество загадок — их решение позволит добраться до уникальных предметов и узнать некоторые секреты. В этом гайде мы",
    "content": null,
    "pub_date": "2023-10-08T19:41:15Z",
    "upd_date": "2023-10-08T19:41:15Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:01.973Z",
    "updated": "2023-10-09T09:35:59.642Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 15,
  "fields": {
    "feed": 42,
    "title": "Делимся впечатлениями от Total War Pharaoh. Египетские грабли",
    "author": "Makarov Vladimir",
    "url": "https://www.igromania.ru/article/32412/delimsya-vpechatleniyami-ot-total-war-pharaoh-egipetskie-grabli",
    "image_url": "https://newcdn.igromania.ru/articles/pics/tmp/images/2023/10/3/b37340ab-5581-d9cc-4115-28f4b913ef34.jpg",
    "description": "В рубрике «Особое мнение» авторы выражают исключительно собственное мнение, которое может не совпадать с мнением редакции (а может и совпадать). Они вольны",
    "summary": "В рубрике «Особое мнение» авторы выражают исключительно собственное мнение, которое может не совпадать с мнением редакции (а может и совпадать). Они вольны",
    "content": null,
    "pub_date": "2023-10-04T15:32:24Z",
    "upd_date": "2023-10-04T15:32:24Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:05.412Z",
    "updated": "2023-10-09T09:34:05.413Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 16,
  "fields": {
    "feed": 41,
    "title": "Play unique alt controller delights at EGX 2023 in London this week",
    "author": "Graham Smith",
    "url": "https://www.rockpapershotgun.com/play-unique-alt-controller-delights-at-egx-2023-in-london-this-week",
    "image_url": "https://assetsio.reedpopcdn.com/alt-controller-home-turf-header.jpg?width=1200&height=630&fit=crop&enable=upscale&auto=webp",
    "description": "<img src=\"https://assetsio.reedpopcdn.com/alt-controller-home-turf-header.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> <p>The custom controller space returns to EGX next week, offering a variety of strange, wonderful and one-of-a-kind ways of playing games - including cranks, wheels, a firelighter, a morse code tapper, and dozens of big, glowing buttons. Many of these games and controllers are only available to play at the show, so <a href=\"https://www.egx.net/london/en-gb.html\">grab your ticket for EGX now</a>.\n</p>\n<p>If you need more convincing, hop below for a list of the controllers and games we're featuring this year.\n</p>\n <p><a href=\"https://www.rockpapershotgun.com/play-unique-alt-controller-delights-at-egx-2023-in-london-this-week\">Read more</a></p>",
    "summary": "<img src=\"https://assetsio.reedpopcdn.com/alt-controller-home-turf-header.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> <p>The custom controller space returns to EGX next week, offering a variety of strange, wonderful and one-of-a-kind ways of playing games - including cranks, wheels, a firelighter, a morse code tapper, and dozens of big, glowing buttons. Many of these games and controllers are only available to play at the show, so <a href=\"https://www.egx.net/london/en-gb.html\">grab your ticket for EGX now</a>.\n</p>\n<p>If you need more convincing, hop below for a list of the controllers and games we're featuring this year.\n</p>\n <p><a href=\"https://www.rockpapershotgun.com/play-unique-alt-controller-delights-at-egx-2023-in-london-this-week\">Read more</a></p>",
    "content": null,
    "pub_date": "2023-10-08T12:29:30Z",
    "upd_date": "2023-10-08T12:29:30Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:06.344Z",
    "updated": "2023-10-09T09:36:02.059Z",
    "tags": [
      32,
      31,
      30
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 17,
  "fields": {
    "feed": 41,
    "title": "The Sunday Papers",
    "author": "Ed Thorn",
    "url": "https://www.rockpapershotgun.com/the-sunday-papers-693",
    "image_url": "https://assetsio.reedpopcdn.com/the-sunday-papers-big.jpg?width=1200&height=630&fit=crop&enable=upscale&auto=webp",
    "description": "<img src=\"https://assetsio.reedpopcdn.com/the-sunday-papers-big.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> \n<p>Sundays are for redeeming club card vouchers. Before you save two quid, let's read this week's best writing about games (and game related things).</p>\n <p><a href=\"https://www.rockpapershotgun.com/the-sunday-papers-693\">Read more</a></p>",
    "summary": "<img src=\"https://assetsio.reedpopcdn.com/the-sunday-papers-big.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> \n<p>Sundays are for redeeming club card vouchers. Before you save two quid, let's read this week's best writing about games (and game related things).</p>\n <p><a href=\"https://www.rockpapershotgun.com/the-sunday-papers-693\">Read more</a></p>",
    "content": null,
    "pub_date": "2023-10-08T10:00:00Z",
    "upd_date": "2023-10-08T10:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:06.593Z",
    "updated": "2023-10-09T09:36:03.738Z",
    "tags": [
      34,
      30,
      33
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 18,
  "fields": {
    "feed": 41,
    "title": "Redfall's second major patch continues to make its open world more alive with vampires",
    "author": "Graham Smith",
    "url": "https://www.rockpapershotgun.com/redfalls-second-major-patch-continues-to-make-its-open-world-more-alive-with-vampires",
    "image_url": "https://assetsio.reedpopcdn.com/Redfall_E3_Portraits_Jacob_1920x1280-01-crop.jpg?width=1200&height=630&fit=crop&enable=upscale&auto=webp",
    "description": "<img src=\"https://assetsio.reedpopcdn.com/Redfall_E3_Portraits_Jacob_1920x1280-01-crop.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> <p><a href=\"https://www.rockpapershotgun.com/games/redfall\">Redfall</a> was a disappointment upon release, thanks to its open world which felt - as Ed wrote in his <a href=\"https://www.rockpapershotgun.com/redfall-review\">Redfall review</a> - like \"playing through an already abandoned live service.\"\n</p>\n<p>Yet though its sparsely populated world made it feel that way, Arkane haven't abandoned Redfall. Yesterday they released its second major patch with a spate of fixes and attempted improvements.\n</p>\n <p><a href=\"https://www.rockpapershotgun.com/redfalls-second-major-patch-continues-to-make-its-open-world-more-alive-with-vampires\">Read more</a></p>",
    "summary": "<img src=\"https://assetsio.reedpopcdn.com/Redfall_E3_Portraits_Jacob_1920x1280-01-crop.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp\" /> <p><a href=\"https://www.rockpapershotgun.com/games/redfall\">Redfall</a> was a disappointment upon release, thanks to its open world which felt - as Ed wrote in his <a href=\"https://www.rockpapershotgun.com/redfall-review\">Redfall review</a> - like \"playing through an already abandoned live service.\"\n</p>\n<p>Yet though its sparsely populated world made it feel that way, Arkane haven't abandoned Redfall. Yesterday they released its second major patch with a spate of fixes and attempted improvements.\n</p>\n <p><a href=\"https://www.rockpapershotgun.com/redfalls-second-major-patch-continues-to-make-its-open-world-more-alive-with-vampires\">Read more</a></p>",
    "content": null,
    "pub_date": "2023-10-07T21:13:51Z",
    "upd_date": "2023-10-07T21:13:51Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:07.317Z",
    "updated": "2023-10-09T09:36:07.041Z",
    "tags": [
      36,
      38,
      39,
      42,
      41,
      43,
      44,
      35,
      45,
      40,
      37
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 19,
  "fields": {
    "feed": 40,
    "title": "В сети появилось изображение с большинством костюмов из Marvel’s Spider-Man 2",
    "author": "Никита Ентус",
    "url": "https://dtf.ru/games/2183700-v-seti-poyavilos-izobrazhenie-s-bolshinstvom-kostyumov-iz-marvel-s-spider-man-2?from=rss",
    "image_url": "https://dtf.ru/cover/fb/c/2183700/1696837265/cover.jpg",
    "description": "Судя по всему, многие из них будут выдавать после завершения квестов в игре.\n                                                    <img alt=\"alt\" height=\"900\" src=\"https://leonardo.osnova.io/24c906d4-7a6c-572c-93da-1014bb34a531/-/resize/1300/\" width=\"1280\" />",
    "summary": "Судя по всему, многие из них будут выдавать после завершения квестов в игре.\n                                                    <img alt=\"alt\" height=\"900\" src=\"https://leonardo.osnova.io/24c906d4-7a6c-572c-93da-1014bb34a531/-/resize/1300/\" width=\"1280\" />",
    "content": null,
    "pub_date": "2023-10-09T07:37:36Z",
    "upd_date": "2023-10-09T07:37:36Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:08.164Z",
    "updated": "2023-10-09T09:35:54.342Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 20,
  "fields": {
    "feed": 40,
    "title": "«Время пошло»: тизер-трейлер фильма «Майор Гром: Игра»",
    "author": "Никита Ентус",
    "url": "https://dtf.ru/cinema/2183918-vremya-poshlo-tizer-treyler-filma-mayor-grom-igra?from=rss",
    "image_url": "https://dtf.ru/cover/fb/c/2183918/1696843498/cover.jpg",
    "description": "Главному герою предстоит столкнуться с загадочным Призраком.\n                                                    <img alt=\"alt\" height=\"720\" src=\"https://leonardo.osnova.io/4a34b3c9-9d03-578a-8251-35fc0864a97c/-/resize/1300/\" width=\"1280\" />",
    "summary": "Главному герою предстоит столкнуться с загадочным Призраком.\n                                                    <img alt=\"alt\" height=\"720\" src=\"https://leonardo.osnova.io/4a34b3c9-9d03-578a-8251-35fc0864a97c/-/resize/1300/\" width=\"1280\" />",
    "content": null,
    "pub_date": "2023-10-09T09:11:16Z",
    "upd_date": "2023-10-09T09:11:16Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:08.310Z",
    "updated": "2023-10-09T09:35:51.661Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 21,
  "fields": {
    "feed": 40,
    "title": "Инсайдеры сообщили, что Ubisoft отметит запуск XDefiant 28 октября, а выпустить онлайн-шутер могут в тот же день",
    "author": "Никита Ентус",
    "url": "https://dtf.ru/games/2183575-insaydery-soobshchili-chto-ubisoft-otmetit-zapusk-xdefiant-28-oktyabrya-a-vypustit-onlayn-shuter-mogut-v-tot-zhe-den?from=rss",
    "image_url": "https://dtf.ru/cover/fb/c/2183575/1696834170/cover.jpg",
    "description": "Источники Insider Gaming подтвердили информацию по мероприятию.\n                                                    <img alt=\"alt\" height=\"900\" src=\"https://leonardo.osnova.io/db90a339-ba03-5069-8e70-235fb4461ef0/-/resize/1300/\" width=\"1280\" />",
    "summary": "Источники Insider Gaming подтвердили информацию по мероприятию.\n                                                    <img alt=\"alt\" height=\"900\" src=\"https://leonardo.osnova.io/db90a339-ba03-5069-8e70-235fb4461ef0/-/resize/1300/\" width=\"1280\" />",
    "content": null,
    "pub_date": "2023-10-09T06:44:57Z",
    "upd_date": "2023-10-09T06:44:57Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:08.773Z",
    "updated": "2023-10-09T09:35:56.424Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 22,
  "fields": {
    "feed": 39,
    "title": "Foamstars: Превью первого (и пенного) клона Splatoon",
    "author": null,
    "url": "https://stopgame.ru/show/136360/foamstars_preview_pervogo_i_pennogo_klona_splatoon",
    "image_url": "https://images.stopgame.ru/articles/2023/10/03/ctHEQaBZV.jpg",
    "description": "Те, кто хоть раз видел Foamstars, примерно понимают суть игры — это попытка Square Enix сделать свою Splatoon. Две команды игроков вооружены пушками, которыми раскрашивают окружение в разные цвета, — кажется, Nintendo легко могла бы подать в суд на японских коллег за нарушение авторских прав. На деле же между проектами есть одно фундаментальное различие и несколько мелких.… […]",
    "summary": "Те, кто хоть раз видел Foamstars, примерно понимают суть игры — это попытка Square Enix сделать свою Splatoon. Две команды игроков вооружены пушками, которыми раскрашивают окружение в разные цвета, — кажется, Nintendo легко могла бы подать в суд на японских коллег за нарушение авторских прав. На деле же между проектами есть одно фундаментальное различие и несколько мелких.… […]",
    "content": null,
    "pub_date": "2023-10-03T07:49:24Z",
    "upd_date": "2023-10-03T07:49:24Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:09.321Z",
    "updated": "2023-10-09T09:34:09.321Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 23,
  "fields": {
    "feed": 39,
    "title": "The First Descendant: Превью по бета-версии",
    "author": null,
    "url": "https://stopgame.ru/show/136254/the_first_descendant_preview_po_beta_versii",
    "image_url": "https://images.stopgame.ru/articles/2023/09/23/yW-2Bzh.jpg",
    "description": "В жанре мультиплеерных лутер-шутеров давно ничего не выходило — будто бы после провала Anthem издатели окончательно поняли, что тягаться с Destiny на этом поле очень трудно. Но некоторые компании всё же пытаются составить конкуренцию Bungie — к примеру, корейская Nexon. Её проект The First Descendant — один из первых крупных экшенов на движке Unreal Engine 5, и на днях все желающие могли опробовать его бета-версию. Нашлось ли в ней что-то помимо красивой графики?… […]",
    "summary": "В жанре мультиплеерных лутер-шутеров давно ничего не выходило — будто бы после провала Anthem издатели окончательно поняли, что тягаться с Destiny на этом поле очень трудно. Но некоторые компании всё же пытаются составить конкуренцию Bungie — к примеру, корейская Nexon. Её проект The First Descendant — один из первых крупных экшенов на движке Unreal Engine 5, и на днях все желающие могли опробовать его бета-версию. Нашлось ли в ней что-то помимо красивой графики?… […]",
    "content": null,
    "pub_date": "2023-09-24T12:23:02Z",
    "upd_date": "2023-09-24T12:23:02Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:09.576Z",
    "updated": "2023-10-09T09:34:09.576Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 24,
  "fields": {
    "feed": 39,
    "title": "Pathfinder: Gallowspire Survivors: Превью по ранней версии",
    "author": null,
    "url": "https://stopgame.ru/show/136188/pathfinder_gallowspire_survivors_preview_po_ranney_versii",
    "image_url": "https://images.stopgame.ru/articles/2023/09/19/-_MssGIv1.jpg",
    "description": "Когда видишь в описании проекта «рогалик» или rogue-lite, а сама игра выполнена в изометрии, да ещё и со словом Survivors в названии, не нужно быть Нострадамусом, чтобы предсказать — это очередной клон Vampire Survivors. Но если в названии есть ещё слово Pathfinder, то ждёшь уже не очередной клон, а что-то более интересное и самобытное. Насколько эти ожидания оправдываются в ранней версии Pathfinder: Gallowspire Survivors? Делюсь первыми впечатлениями.… […]",
    "summary": "Когда видишь в описании проекта «рогалик» или rogue-lite, а сама игра выполнена в изометрии, да ещё и со словом Survivors в названии, не нужно быть Нострадамусом, чтобы предсказать — это очередной клон Vampire Survivors. Но если в названии есть ещё слово Pathfinder, то ждёшь уже не очередной клон, а что-то более интересное и самобытное. Насколько эти ожидания оправдываются в ранней версии Pathfinder: Gallowspire Survivors? Делюсь первыми впечатлениями.… […]",
    "content": null,
    "pub_date": "2023-09-19T09:36:20Z",
    "upd_date": "2023-09-19T09:36:20Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:09.812Z",
    "updated": "2023-10-09T09:34:09.812Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 25,
  "fields": {
    "feed": 38,
    "title": "Cocoon: Обзор новой игры от автора Limbo",
    "author": null,
    "url": "https://stopgame.ru/show/136407/cocoon_review_novoy_igry_ot_avtora_limbo",
    "image_url": "https://images.stopgame.ru/articles/2023/10/09/xTCTW7z.jpg",
    "description": "По соседству находится обзор Torn Away, в котором я пишу, что игра по геймплею напоминает Limbo и Inside, — и это уже не первый случай, когда разработчики явно ориентируются на творчество студии Playdead. А сам Йеппе Карлсен (Jeppe Carlsen), ведущий гейм-дизайнер Limbo и Inside, тем временем выпустил свою новую игру — Cocoon, которая совершенно непохожа на его предыдущие работы, но точно возьмёт пару призов на предстоящ… […]",
    "summary": "По соседству находится обзор Torn Away, в котором я пишу, что игра по геймплею напоминает Limbo и Inside, — и это уже не первый случай, когда разработчики явно ориентируются на творчество студии Playdead. А сам Йеппе Карлсен (Jeppe Carlsen), ведущий гейм-дизайнер Limbo и Inside, тем временем выпустил свою новую игру — Cocoon, которая совершенно непохожа на его предыдущие работы, но точно возьмёт пару призов на предстоящ… […]",
    "content": null,
    "pub_date": "2023-10-09T07:30:50Z",
    "upd_date": "2023-10-09T07:30:50Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:10.440Z",
    "updated": "2023-10-09T09:35:55.076Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 26,
  "fields": {
    "feed": 38,
    "title": "Torn Away: Обзор русской Limbo про Великую Отечественную",
    "author": null,
    "url": "https://stopgame.ru/show/136402/torn_away_review_russkoy_limbo_pro_velikuyu_otechestvennuyu",
    "image_url": "https://images.stopgame.ru/articles/2023/10/07/S3aFAmD.jpg",
    "description": "Мы уже видели клоны Limbo и Inside. А вот Torn Away от наших соотечественников из студии perelesoq, при всей схожести геймплейных элементов, назвать клоном язык не поворачивается — прежде всего из-за тематики игры. С одной стороны, она знакомая и ожидаемая, с другой — про Великую Отечественную войну тут рассказывается глазами ребёнка, попавшего в плен, что, согласитесь, нечасто встречается в играх, фильмах и книгах.… […]",
    "summary": "Мы уже видели клоны Limbo и Inside. А вот Torn Away от наших соотечественников из студии perelesoq, при всей схожести геймплейных элементов, назвать клоном язык не поворачивается — прежде всего из-за тематики игры. С одной стороны, она знакомая и ожидаемая, с другой — про Великую Отечественную войну тут рассказывается глазами ребёнка, попавшего в плен, что, согласитесь, нечасто встречается в играх, фильмах и книгах.… […]",
    "content": null,
    "pub_date": "2023-10-07T16:26:10Z",
    "upd_date": "2023-10-07T16:26:10Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:10.724Z",
    "updated": "2023-10-09T09:36:07.589Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 27,
  "fields": {
    "feed": 38,
    "title": "Cyberpunk 2077: Phantom Liberty: Обзор",
    "author": null,
    "url": "https://stopgame.ru/show/136372/cyberpunk_2077_phantom_liberty_review",
    "image_url": "https://images.stopgame.ru/articles/2023/10/04/UgQWKu9Uc.jpg",
    "description": "CD Projekt RED — это уже не студия, а целое явление. Где вы найдёте таких же разработчиков, чтобы они вместе с геймерами смеялись над багами в своих релизах, принципиально игнорировали DRM и выпускали DLC, которые легко затыкают за пояс отдельные игры? Кто помнит успех «Крови и вина», тот возложил на «Призрачную свободу» большие надежды. Дело даже не в новой локации и не в участии Идриса Эльбы (Idris Elba), а в том, как радикально поляки способны переиначить своё произведение. Интриги добавляет и то, что Phantom Liberty решили сделать первым и последним сюжетным дополнением. Больше ничего не будет — настало время подвести итоги.… […]",
    "summary": "CD Projekt RED — это уже не студия, а целое явление. Где вы найдёте таких же разработчиков, чтобы они вместе с геймерами смеялись над багами в своих релизах, принципиально игнорировали DRM и выпускали DLC, которые легко затыкают за пояс отдельные игры? Кто помнит успех «Крови и вина», тот возложил на «Призрачную свободу» большие надежды. Дело даже не в новой локации и не в участии Идриса Эльбы (Idris Elba), а в том, как радикально поляки способны переиначить своё произведение. Интриги добавляет и то, что Phantom Liberty решили сделать первым и последним сюжетным дополнением. Больше ничего не будет — настало время подвести итоги.… […]",
    "content": null,
    "pub_date": "2023-10-04T14:10:16Z",
    "upd_date": "2023-10-04T14:10:16Z",
    "is_read": true,
    "is_favorite": true,
    "created": "2023-10-09T09:34:10.972Z",
    "updated": "2023-10-09T09:36:48.665Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 28,
  "fields": {
    "feed": 37,
    "title": "Почему разработчики оставляют так много подсказок для тупых? Отвечают сами разработчики",
    "author": null,
    "url": "https://stopgame.ru/newsdata/60190/pochemu_razrabotchiki_ostavlyayut_tak_mnogo_podskazok_dlya_tupyh_otvechayut_sami_razrabotchiki",
    "image_url": "https://images.stopgame.ru/news/2023/10/08/8i3v4ojIE.jpg",
    "description": "В играх последних лет появился новый дизайнерский шаблон: ключевые элементы окружения подсвечиваются так ярко, чтобы вы их точно не пропустили. Неужели разработчики видят игроков настолько тупыми, что считают необходимым оставлять такие жирные подсказки?… […]",
    "summary": "В играх последних лет появился новый дизайнерский шаблон: ключевые элементы окружения подсвечиваются так ярко, чтобы вы их точно не пропустили. Неужели разработчики видят игроков настолько тупыми, что считают необходимым оставлять такие жирные подсказки?… […]",
    "content": null,
    "pub_date": "2023-10-08T15:03:24Z",
    "upd_date": "2023-10-08T15:03:24Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:11.531Z",
    "updated": "2023-10-09T09:36:01.458Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 29,
  "fields": {
    "feed": 37,
    "title": "Инсайды: извинения за релиз «Голлума» писала нейросеть",
    "author": null,
    "url": "https://stopgame.ru/newsdata/60189/insaydy_izvineniya_za_reliz_golluma_pisala_neyroset",
    "image_url": "https://images.stopgame.ru/news/2023/10/08/141mfI1m.jpg",
    "description": "«Голлум» вышел, оказался чуть ли не худшей игрой года, и спустя день после релиза разработчики опубликовали извинения. Сценарий знакомый, но в этот раз есть нюанс: текст с извинениями писали через ChatGPT, а сами разработчики даже не знали, что конкретно будет в письме.… […]",
    "summary": "«Голлум» вышел, оказался чуть ли не худшей игрой года, и спустя день после релиза разработчики опубликовали извинения. Сценарий знакомый, но в этот раз есть нюанс: текст с извинениями писали через ChatGPT, а сами разработчики даже не знали, что конкретно будет в письме.… […]",
    "content": null,
    "pub_date": "2023-10-08T12:24:19Z",
    "upd_date": "2023-10-08T12:24:19Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:11.754Z",
    "updated": "2023-10-09T09:36:02.620Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 30,
  "fields": {
    "feed": 37,
    "title": "Для Lies of P готовят дополнение",
    "author": null,
    "url": "https://stopgame.ru/newsdata/60188/dlya_lies_of_p_gotovyat_dopolnenie",
    "image_url": "https://images.stopgame.ru/news/2023/10/08/W9M8EUg3.jpg",
    "description": "Как пишут очевидцы, создатели Lies of P на корейской версии своего сайта упомянули дополнение для игры. Официально его ещё не анонсировали, так что о содержании DLC можно только спекулировать.… […]",
    "summary": "Как пишут очевидцы, создатели Lies of P на корейской версии своего сайта упомянули дополнение для игры. Официально его ещё не анонсировали, так что о содержании DLC можно только спекулировать.… […]",
    "content": null,
    "pub_date": "2023-10-08T11:05:30Z",
    "upd_date": "2023-10-08T11:05:30Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:12.029Z",
    "updated": "2023-10-09T09:36:03.140Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 31,
  "fields": {
    "feed": 36,
    "title": "Комикс: Мир меняется",
    "author": "Александр Ремизов",
    "url": "https://www.mirf.ru/comics/komiks-mir-menyaetsya/",
    "image_url": "https://www.mirf.ru/wp-content/uploads/2023/10/229_Mir-menyaetsya-0-1.png",
    "description": "Последний комикс Александра Ремизова",
    "summary": "Последний комикс Александра Ремизова",
    "content": "<img alt=\"Мир меняется 1\" class=\"alignnone size-large wp-image-199196\" height=\"738\" src=\"https://www.mirf.ru/wp-content/uploads/2023/10/229_Mir-menyaetsya-1-1024x738.png\" width=\"1024\" /> <img alt=\"Мир меняется 2\" class=\"alignnone size-large wp-image-199197\" height=\"733\" src=\"https://www.mirf.ru/wp-content/uploads/2023/10/229_Mir-menyaetsya-2-1024x733.png\" width=\"1024\" />",
    "pub_date": "2023-10-09T07:00:20Z",
    "upd_date": "2023-10-09T07:00:20Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:12.570Z",
    "updated": "2023-10-09T09:35:55.755Z",
    "tags": [
      46,
      49,
      47,
      48,
      50
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 32,
  "fields": {
    "feed": 36,
    "title": "Комикс: Выпадение в осадок",
    "author": "Александр Ремизов",
    "url": "https://www.mirf.ru/comics/komiks-vypadenie-v-osadok/",
    "image_url": "https://www.mirf.ru/wp-content/uploads/2023/10/042_Vypadenie-v-osadok-0.jpg",
    "description": "А вы говорили, фантастика оторвана от жизни!",
    "summary": "А вы говорили, фантастика оторвана от жизни!",
    "content": "<img alt=\"Комикс: Выпадение в осадок 2\" class=\"alignnone size-large wp-image-199280\" height=\"734\" src=\"https://www.mirf.ru/wp-content/uploads/2023/10/042_Vypadenie-v-osadok-1-1024x734.jpg\" width=\"1024\" /> <img alt=\"Комикс: Выпадение в осадок 3\" class=\"alignnone size-large wp-image-199281\" height=\"746\" src=\"https://www.mirf.ru/wp-content/uploads/2023/10/042_Vypadenie-v-osadok-2-1024x746.jpg\" width=\"1024\" />",
    "pub_date": "2023-10-08T07:00:49Z",
    "upd_date": "2023-10-08T07:00:49Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:12.724Z",
    "updated": "2023-10-09T09:36:05.923Z",
    "tags": [
      51,
      46,
      49,
      52,
      48,
      53
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 33,
  "fields": {
    "feed": 36,
    "title": "Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня",
    "author": "Издательство fanzon",
    "url": "https://www.mirf.ru/book/fentezijnye-cikly-iz-80-h-na-kotorye-stoit-obratit-vnimanie-i-segodnya/",
    "image_url": "https://www.mirf.ru/wp-content/uploads/2023/10/cover.png",
    "description": "Постапокалиптическая фантастика, которое маскируется под фэнтези, вдохновитель Джордж Мартина, нестареющая классика о драконах и старый новый взгляд на историю Короля Артура.",
    "summary": "Постапокалиптическая фантастика, которое маскируется под фэнтези, вдохновитель Джордж Мартина, нестареющая классика о драконах и старый новый взгляд на историю Короля Артура.",
    "content": "<p>Среди поклонников фэнтези существует мнение, что 80-е годы были временем упадка жанра: писатели знай себе штамповали однотипные приключения героев меча и магии по лекалам великого Профессора, пока Джордж Мартин не пришел и не изменил все. Доля истины в этом есть, и все же в том десятилетии тоже появлялись достаточно оригинальные и влиятельные работы. Сегодня Галина Бельтюкова рассказывает про несколько циклов того времени, которые до сих пор заслуживают внимания.</p>\n<h2><b>Тэд Уильямс «Память, Скорбь и Шип»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня\" class=\"alignnone size-large wp-image-198236\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/2-64-675x1024.jpg\" width=\"675\" />\n<p>Этот масштабный цикл недаром считается переходным этапом от Толкина к Мартину: Тэд Уильямс был большим поклонником Профессора, но стремился внести что-то новое в современное ему фэнтези, а Мартин впоследствии вдохновился его циклом при создании «Песни льда и огня». «Память, Скорбь и Шип» — на первый взгляд кажется традиционным эпическим фэнтези о борьбе добра со злом, но Уильямс намного больше фокусируется на политике, дипломатии и устройстве придуманного им общества, чем на приключениях или поисках магических артефактов. Это придает его миру более мрачную атмосферу и позволяет показать всю его многоплановость — от жестокой борьбы за власть в высших слоях общества до нищеты и несправедливостей в нижних.</p>\n<p>Герои Уильямса также далеки от стандартов фэнтези: Саймон, которому суждено сыграть главную роль в судьбе Светлого Арда — вовсе не рыцарь без страха и упрека, а молодой человек, постоянно неуверенный в своих силах, жалующийся на жизнь и не пользующийся успехом у девушек. Принцесса Мириамель — не обычная «дева в беде», а умелый политик: она успешно складывает альянсы из совершенно противоположных группировок и вносит немалый вклад в победу над темными силами. Даже антагонисты цикла — могущественная раса норнов — в конце концов оказываются вовсе не исчадиями ада, вроде прислужников Саурона, и даже их лидер — Король бурь, стремившийся уничтожить человечество, получает если не искупление в глазах читателя, то хотя бы шанс рассказать историю со своей точки зрения.</p>\n<h2><b>Дэвид Геммел «Йон Шэддоу»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 1\" class=\"alignnone size-large wp-image-198237\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/3-60-679x1024.jpg\" width=\"679\" />\n<p>Дэвид Геммел — классик героического фэнтези, который прославился в частности благодаря тому, что выписывал глубоких и неоднозначных персонажей. На них часто влияла глубокая христианская вера самого Геммела, которая сочеталась у него с суровыми уроками, выученными им в детстве в подворотнях лондонских трущоб. Йон Шэддоу, главный герой одноименной трилогии, в каком-то смысле альтер эго самого писателя: несмотря на искреннюю веру, он совсем не из тех, кто станет подставлять вторую щеку.</p>\n<p>Йон, подобно одинокому ковбою, странствует по Среднему Западу в поисках святого града Иерусалима, лежащего где-то за постапокалиптической разрухой. И вскоре начинает казаться, что Апокалипсис в этом мире произошел в самом буквальном смысле: антагонисты романа — сектанты-дьяволопоклонники, убежденные, что Сатана во время последней битвы победил Бога и теперь земной мир полностью в его власти. Хотя Шэддоу часто приходится вставать на защиту беззащитных и бороться с сатанистами их же оружием, впоследствии он начнет все чаще рефлексировать над своими поступками, задумываясь, не умножает ли он сам насилие в мире.</p>\n<h2><b>Глен Кук «Черный отряд»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 2\" class=\"alignnone size-full wp-image-198238\" height=\"1000\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/4-53.jpg\" width=\"663\" />\n<p>Американец Глен Кук начинал писать фэнтези в качестве отдушины после работы на автозаводе. В цикле «Черный отряд», принесшем ему славу, он во многом вдохновлялся «Властелином колец», но перевернул классический сюжет так, что у него получилось одно из первых значительных темных фэнтези. За много лет до начала событий цикла могущественный маг Властелин выстроил империю террора и хаоса, опираясь на десять Взятых, самых сильных волшебников своего времени, порабощенных им — ничего не напоминает? Но в конце концов Властелин, его жена Госпожа и Взятые были повержены и заточены в курганы далеко на севере. Однажды по воле случая Госпоже удается вырваться на волю, но вместо того, чтобы пробудить Властелина, она освобождает только Взятых и заставляет их повиноваться ей, чтобы установить свою тиранию.</p>\n<p>В итоге мир погрязает в многолетней войне всех против всех, в которой особое значение приобретают отряды наемников — каждый со своей историей и своей гордостью. Цикл рассказывает историю Черного отряда — одной из самых опасных команд в мире, которой приходится встать на службу к Госпоже. Костоправу, летописцу отряда, предстоит узнать, и что Госпожа еще не так ужасна и жестока, как кажется, и что Властелин не дремлет и даже из загробной жизни пытается вернуться, чтобы уничтожить все сущее. Глену Куку удалось сделать своих героев настолько живыми и реалистичными, что в 80-е его цикл был одним из самых популярных фэнтези среди американских ветеранов: они видели в отряде наемников, брошенных в пекло кровавых магических битв, таких же простых вояк, какими были сами.</p>\n<h2><b>Кэролайн Черри «Древо сновидений»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 3\" class=\"alignnone size-large wp-image-198239\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/5-35-670x1024.jpg\" width=\"670\" />\n<p>Американская писательница Кэролайн Черри славится талантом создавать сложные и многомерные миры и с поразительной убедительностью писать от лица нечеловеческих персонажей. Она обычно использовала этот талант в создании научно-фантастических вселенных, но несколько раз обращалась и к фэнтези. Дилогия «Древо сновидений» одинаково много берет из «Властелина колец» и кельтской мифологии, а главной героиней Черри становится эльфийка и все события мы наблюдаем именно ее глазами.</p>\n<p>Арафель, последняя оставшаяся королева эльфов, живет в загадочном лесу, полном древней магии и волшебных существ. Но век волшебства подходит к закату, и в лес начинают вторгаться люди. Книга бедна на события: Арафель живет в лесу год за годом, наблюдает за сменой времен года, порой сталкивается с людьми, как добрыми, так и злыми, вольно или невольно принимает участие в их жизни, хоть до конца и не уверена, стоит ли ей им помогать. Неспешное повествование придает циклу особый шарм, позволяя по-настоящему прочувствовать мировосприятие бессмертной королевы эльфов: если бы события «Властелина колец» излагались от лица Галадриэль, возможно, получилось бы что-то похожее на «Древо сновидений».</p>\n<h2><b>Джин Вулф «Книга нового Солнца»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 4\" class=\"alignnone size-large wp-image-198240\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/6-26-607x1024.jpg\" width=\"607\" />\n<p>Вулф, поклонник экспериментов и литературных игр, написал свой цикл словно бы специально для тех, кто любит искать в прочитанном двойное дно: «Книга нового Солнца» их не разочарует. На первый взгляд это — обычная для фэнтези история о том, как молодой герой, ученик гильдии палачей, постепенно восходит на самый верх империи и становится правителем. Но за традиционным сюжетом скрываются серьезные размышления о вере и религии, свободе и необходимости, милосердии и морали, непривычные для фэнтези 80-х.</p>\n<p>Да и сюжет оказывается совсем не так прост: читатель вскоре замечает, что Севериан, главный герой, несмотря на то, что хвалится идеальной памятью, довольно избирательно подходит к воспоминаниям и является ненадежным рассказчиком. И сам мир цикла заставляет читателя дополнительно поразмыслить над происходящим: планета Урд, несмотря на присутствие магии и волшебных существ, подозрительно похожа на постапокалиптическую Землю, а по ходу сюжета появляются герои, более привычные для научной фантастики, а не для фэнтези. И хотя в финале всему этому найдется объяснение, оно окажется настолько неожиданным и мозголомным, что некоторые читатели сразу перечитывают цикл по второму разу, чтобы уловить все намеки, не замеченные поначалу.</p>\n<h2><b>Мэрион Брэдли «Туманы Авалона»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 7\" class=\"alignnone size-large wp-image-198243\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/cover1__w820-1-675x1024.jpg\" width=\"675\" />\n<p>В своем классическом цикле Мэрион Брэдли переосмысляет легенды о Камелоте с точки зрения антагонистки традиционной артурианы — волшебницы Морганы. Сочетая фэнтези с реальной историей, Брэдли создает мир древней Британии, в котором сражаются между собой завезенное римлянами христианство и язычество, адепткой которого и показана Моргана.</p>\n<p>В отличие от мейнстримного фэнтези 80-х годов «Туманы Авалона» представляют собой по-настоящему женский взгляд на жанр: жизнь героинь здесь вращается вокруг домашних дел, сплетен, родов, а мужчины, присутствующие в книге, сливаются в одну неразличимую массу, даже битв в книгах практически нет или они происходят где-то на периферии повествования. И тем не менее, цикл не назовешь скучным: стоит только привыкнуть к тому, как неторопливо Моргана рассказывает о своем детстве, и перед читателем открывается совершенно новый, непривычный мир, непохожий на традиционное «мужское» фэнтези.</p>\n<h2><b>Маргарет Уэйс, Трейси Хикмэн «Сага о Копье»</b></h2>\n<img alt=\"Фэнтезийные циклы из 80-х, на которые стоит обратить внимание и сегодня 6\" class=\"alignnone size-large wp-image-198242\" height=\"1024\" src=\"https://www.mirf.ru/wp-content/uploads/2023/09/7-20-653x1024.jpg\" width=\"653\" />\n<p>Этот многотомный межавторский цикл, известный также под оригинальным названием Dragonlance, появился почти случайно: супруги и начинающие писатели Трейси и Лора Хикмэн ехали подать резюме в компанию-производителя знаменитой настольной игры Dungeons &amp; Dragons, и идея нового мира пришла к ним прямо в машине. Получив работу, они смогли отполировать свои задумки в многочисленных игровых партиях, в которых участвовали и другие писатели-коллеги Хикмэнов: все они горячо обсуждали идеи друг друга и вносили таким образом свой вклад в создание вселенной. Первый роман в мире «Саги о Копье» появился в 1984 году и сразу же приобрел популярность, а всего с тех пор вышло более 190 романов от самых разных авторов.</p>\n<p>Разобраться во всей хронологии Dragonlance непросто даже хардкорным фанатам, но первые три романа, условно называемые «Хрониками Копья» легко можно читать и как введение во вселенную, и как законченный фэнтези-цикл. Громадный волшебный мир Кринн подвергается нападению армии Тьмы, состоящей из безжалостных драконидов, уничтожающих все на своем пути. Шестеро друзей, встретившиеся в таверне после долгой разлуки, решают, что только им под силу остановить вторжение, и отправляются в далекое странствие, полное приключений.</p>",
    "pub_date": "2023-10-07T22:43:00Z",
    "upd_date": "2023-10-07T22:43:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:12.902Z",
    "updated": "2023-10-09T09:36:06.488Z",
    "tags": [
      54,
      56,
      55,
      57,
      58
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 34,
  "fields": {
    "feed": 35,
    "title": "Обзор новых компонентов умного дома Sber: всем Салют!",
    "author": null,
    "url": "https://3dnews.ru/1092469",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/03/1092469/sm.00_logo.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/03/1092469.jpg\" width=\"120\" />«Дом, который построил Сбер» – именно так можно было бы озаглавить данный материал, поскольку количество, функциональность и разнообразие умных устройств Sber позволит регулировать и мониторить буквально все сферы жизнедеятельности в вашем доме или квартире, включая безопасность домочадцев",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/03/1092469.jpg\" width=\"120\" />«Дом, который построил Сбер» – именно так можно было бы озаглавить данный материал, поскольку количество, функциональность и разнообразие умных устройств Sber позволит регулировать и мониторить буквально все сферы жизнедеятельности в вашем доме или квартире, включая безопасность домочадцев",
    "content": null,
    "pub_date": "2023-09-14T21:00:00Z",
    "upd_date": "2023-09-14T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:14.640Z",
    "updated": "2023-10-09T09:34:14.640Z",
    "tags": [
      59
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 35,
  "fields": {
    "feed": 35,
    "title": "Обзор робота-уборщика Dreamebot L10s Ultra: он все видит! И чистит!",
    "author": null,
    "url": "https://3dnews.ru/1092076",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/08/25/1092076/sm.intro.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/25/1092076.jpg\" width=\"120\" />Возможности Dreamebot L10s Ultra не сводятся только лишь к сбору мусора и мойке полов. Умный робот-уборщик оснащен встроенной камерой, а также продвинутой станцией самоочистки. А значит, вам не придется самостоятельно чистить устройство и мыть швабры — система все сделает за вас",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/25/1092076.jpg\" width=\"120\" />Возможности Dreamebot L10s Ultra не сводятся только лишь к сбору мусора и мойке полов. Умный робот-уборщик оснащен встроенной камерой, а также продвинутой станцией самоочистки. А значит, вам не придется самостоятельно чистить устройство и мыть швабры — система все сделает за вас",
    "content": null,
    "pub_date": "2023-09-05T21:00:00Z",
    "upd_date": "2023-09-05T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:15.091Z",
    "updated": "2023-10-09T09:34:15.091Z",
    "tags": [
      59
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 36,
  "fields": {
    "feed": 35,
    "title": "Обзор робота-уборщика HOBOT LEGEE-D8: и пылесосит отлично, и моет хорошо",
    "author": null,
    "url": "https://3dnews.ru/1088983",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/06/26/1088983/sm.intro.800.JPG",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/06/26/1088983.jpg\" width=\"120\" />Многие современные роботы-пылесосы способны провести не только сухую, но и влажную уборку помещения. Однако в большинстве случаев функция мытья полов присутствует только для галочки и не особенно улучшает качество уборки. Но HOBOT LEGEE-D8 — другой случай, этот робот и пылесосит отлично, и моет хорошо",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/06/26/1088983.jpg\" width=\"120\" />Многие современные роботы-пылесосы способны провести не только сухую, но и влажную уборку помещения. Однако в большинстве случаев функция мытья полов присутствует только для галочки и не особенно улучшает качество уборки. Но HOBOT LEGEE-D8 — другой случай, этот робот и пылесосит отлично, и моет хорошо",
    "content": null,
    "pub_date": "2023-06-29T21:00:01Z",
    "upd_date": "2023-06-29T21:00:01Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:15.709Z",
    "updated": "2023-10-09T09:34:15.709Z",
    "tags": [
      59
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 37,
  "fields": {
    "feed": 34,
    "title": "Обзор ноутбука Maibenben P415: интересен, как ни крути",
    "author": null,
    "url": "https://3dnews.ru/1093793",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/29/1093793/sm.intro.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/29/1093793.jpg\" width=\"120\" />Новинка компании Maibenben — модель P415 — сразу привлекла наше внимание. Загибайте пальцы: нестандартный качественный дисплей, металлический корпус, компактность и легкость, современные интерфейсы, интересные возможности апгрейда. И все это — по вполне адекватной цене",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/29/1093793.jpg\" width=\"120\" />Новинка компании Maibenben — модель P415 — сразу привлекла наше внимание. Загибайте пальцы: нестандартный качественный дисплей, металлический корпус, компактность и легкость, современные интерфейсы, интересные возможности апгрейда. И все это — по вполне адекватной цене",
    "content": null,
    "pub_date": "2023-10-04T21:00:00Z",
    "upd_date": "2023-10-04T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:16.609Z",
    "updated": "2023-10-09T09:34:16.609Z",
    "tags": [
      60
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 38,
  "fields": {
    "feed": 34,
    "title": "Компьютер месяца — октябрь 2023 года",
    "author": null,
    "url": "https://3dnews.ru/1093844",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/10/01/1093844/sm.0.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/10/01/1093844.jpg\" width=\"120\" />Как-то незаметно 2023 год приблизился к своему закату. Из интересного ждем серию процессоров Core 14, которая никак не повлияет на расстановку сил на рынке. Прочие чипмейкеры, вероятнее всего, в этом году уже не порадуют новинками. Следовательно, в ближайшие несколько месяцев на рынке воцарится затишье — отличное время для того, чтобы определиться с новеньким игровым ПК",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/10/01/1093844.jpg\" width=\"120\" />Как-то незаметно 2023 год приблизился к своему закату. Из интересного ждем серию процессоров Core 14, которая никак не повлияет на расстановку сил на рынке. Прочие чипмейкеры, вероятнее всего, в этом году уже не порадуют новинками. Следовательно, в ближайшие несколько месяцев на рынке воцарится затишье — отличное время для того, чтобы определиться с новеньким игровым ПК",
    "content": null,
    "pub_date": "2023-10-01T21:00:00Z",
    "upd_date": "2023-10-01T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:17.008Z",
    "updated": "2023-10-09T09:34:17.008Z",
    "tags": [
      61
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 39,
  "fields": {
    "feed": 34,
    "title": "Обзор игрового ноутбука MSI Katana 17 B13VGK-471RU: я — твой Клинок Фронтира",
    "author": null,
    "url": "https://3dnews.ru/1093405",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/21/1093405/sm.intro.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/21/1093405.jpg\" width=\"120\" />«К современным играм готов!» — с таким девизом вас встретит MSI Katana 17 B13. А все потому, что в лэптопе нашлось место быстрой и современной GeForce RTX 4070",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/21/1093405.jpg\" width=\"120\" />«К современным играм готов!» — с таким девизом вас встретит MSI Katana 17 B13. А все потому, что в лэптопе нашлось место быстрой и современной GeForce RTX 4070",
    "content": null,
    "pub_date": "2023-09-27T21:00:00Z",
    "upd_date": "2023-09-27T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:17.436Z",
    "updated": "2023-10-09T09:34:17.436Z",
    "tags": [
      62
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 40,
  "fields": {
    "feed": 33,
    "title": "Обзор и тестирование моноблока DIGMA Pro AiO 27i (DM27P7): прокачай свой офис!",
    "author": null,
    "url": "https://3dnews.ru/1093389",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/21/1093389/sm.00_digAiO27_logo.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/21/1093389.jpg\" width=\"120\" />Яркий и сочный экран с разрешением 2,5K, производительная начинка, нестыдная веб-камера, лаконичный дизайн, беспроводные клавиатура и мышь в комплекте, возможности модернизации... Стоп! Мы сейчас точно про банальный офисный моноблок пишем? Ничего не перепутали?",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/21/1093389.jpg\" width=\"120\" />Яркий и сочный экран с разрешением 2,5K, производительная начинка, нестыдная веб-камера, лаконичный дизайн, беспроводные клавиатура и мышь в комплекте, возможности модернизации... Стоп! Мы сейчас точно про банальный офисный моноблок пишем? Ничего не перепутали?",
    "content": null,
    "pub_date": "2023-10-03T21:00:00Z",
    "upd_date": "2023-10-03T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:18.304Z",
    "updated": "2023-10-09T09:34:18.304Z",
    "tags": [
      63
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 41,
  "fields": {
    "feed": 33,
    "title": "Обзор 4K-монитора MSI Modern MD271UL: бизнес и ничего лишнего",
    "author": null,
    "url": "https://3dnews.ru/1091475",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/08/14/1091475/sm.photo06.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/14/1091475.jpg\" width=\"120\" />Стремление производителей к расширению своих продуктовых линеек всегда похвально, но ещё лучше, когда это не делают только из корыстных расчётов, а подходят с душой и предлагают действительно что-то интересное за адекватные деньги. Именно таким вышел новый монитор MSI из серии Modern",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/14/1091475.jpg\" width=\"120\" />Стремление производителей к расширению своих продуктовых линеек всегда похвально, но ещё лучше, когда это не делают только из корыстных расчётов, а подходят с душой и предлагают действительно что-то интересное за адекватные деньги. Именно таким вышел новый монитор MSI из серии Modern",
    "content": null,
    "pub_date": "2023-09-18T21:00:00Z",
    "upd_date": "2023-09-18T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:18.767Z",
    "updated": "2023-10-09T09:34:18.767Z",
    "tags": [
      63
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 42,
  "fields": {
    "feed": 33,
    "title": "Обзор игрового 4K-монитора DIGMA Gaming DM-MONG2740: 144 Гц, недорого, с фонариком",
    "author": null,
    "url": "https://3dnews.ru/1091761",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/08/20/1091761/sm.photo08.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/20/1091761.jpg\" width=\"120\" />Ещё совсем недавно мы и представить не могли, что мониторы от брендов не первой величины могут всерьёз конкурировать с устройствами лидеров рынка. Что уж говорить про сегмент игровых решений, где многие производители оттачивали свои навыки долгие годы, прежде чем смогли добраться до высокого уровня. А вот модель DIGMA MONG2740 уверенно взяла этот уровень без длительного разбега",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/08/20/1091761.jpg\" width=\"120\" />Ещё совсем недавно мы и представить не могли, что мониторы от брендов не первой величины могут всерьёз конкурировать с устройствами лидеров рынка. Что уж говорить про сегмент игровых решений, где многие производители оттачивали свои навыки долгие годы, прежде чем смогли добраться до высокого уровня. А вот модель DIGMA MONG2740 уверенно взяла этот уровень без длительного разбега",
    "content": null,
    "pub_date": "2023-08-31T20:50:03Z",
    "upd_date": "2023-08-31T20:50:03Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:19.490Z",
    "updated": "2023-10-09T09:34:19.490Z",
    "tags": [
      63
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 43,
  "fields": {
    "feed": 32,
    "title": "Обзор блока питания Chieftec Polaris 3.0 PPS-850FC-A3: в будущее без оглядки",
    "author": null,
    "url": "https://3dnews.ru/1093160",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/16/1093160/sm.cover.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/16/1093160.jpg\" width=\"120\" />Модернизированная серия Polaris совместима со стандартом ATX 3.0, имеет КПД на уровне 80 PLUS Gold и включает устройства с размахом мощности от 850 до 1 250 Вт. Посмотрим, на что способна младшая из новинок Chieftec",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/16/1093160.jpg\" width=\"120\" />Модернизированная серия Polaris совместима со стандартом ATX 3.0, имеет КПД на уровне 80 PLUS Gold и включает устройства с размахом мощности от 850 до 1 250 Вт. Посмотрим, на что способна младшая из новинок Chieftec",
    "content": null,
    "pub_date": "2023-09-26T21:00:00Z",
    "upd_date": "2023-09-26T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:20.523Z",
    "updated": "2023-10-09T09:34:20.523Z",
    "tags": [
      64
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 44,
  "fields": {
    "feed": 32,
    "title": "Обзор блока питания DeepCool PX1200G: к эпохе ATX 3.0 готов",
    "author": null,
    "url": "https://3dnews.ru/1093026",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/14/1093026/sm.cover.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/14/1093026.jpg\" width=\"120\" />Флагманский блок питания DeepCool собран на платформе Channel Well CSZ с полной поддержкой ATX 3.0 и выходом 12VHPWR. Устройство рассчитано на мощность вплоть до 1200 Вт и сертифицировано по стандарту 80 PLUS Gold",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/14/1093026.jpg\" width=\"120\" />Флагманский блок питания DeepCool собран на платформе Channel Well CSZ с полной поддержкой ATX 3.0 и выходом 12VHPWR. Устройство рассчитано на мощность вплоть до 1200 Вт и сертифицировано по стандарту 80 PLUS Gold",
    "content": null,
    "pub_date": "2023-09-20T21:00:00Z",
    "upd_date": "2023-09-20T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:20.949Z",
    "updated": "2023-10-09T09:34:20.949Z",
    "tags": [
      64
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 45,
  "fields": {
    "feed": 32,
    "title": "Компьютер месяца. Спецвыпуск: какой блок питания необходим современному игровому ПК",
    "author": null,
    "url": "https://3dnews.ru/1092860",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/11/1092860/sm.intro.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/11/1092860.jpg\" width=\"120\" />Вопрос выбора блока питания часто поднимается на нашем сайте. Отвечая на него, сталкиваешься как с вполне очевидными вещами, так и с определенными сложностями. Давайте еще раз — подробно и скрупулезно — разберем эту тему",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/11/1092860.jpg\" width=\"120\" />Вопрос выбора блока питания часто поднимается на нашем сайте. Отвечая на него, сталкиваешься как с вполне очевидными вещами, так и с определенными сложностями. Давайте еще раз — подробно и скрупулезно — разберем эту тему",
    "content": null,
    "pub_date": "2023-09-13T21:00:00Z",
    "upd_date": "2023-09-13T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:21.388Z",
    "updated": "2023-10-09T09:34:21.388Z",
    "tags": [
      65
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 46,
  "fields": {
    "feed": 31,
    "title": "Групповое тестирование 42 видеокарт в Starfield: красный свет «зеленым» GPU",
    "author": null,
    "url": "https://3dnews.ru/1094030",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/10/05/1094030/sm.cover.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/10/05/1094030.jpg\" width=\"120\" />Starfield успела прославиться не только тем, что стала первой IP от Bethesda за последние 25 лет, и богатой графикой, но и кусачими требованиями к производительности видеокарты, особенно если это видеокарта на чипе NVIDIA",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/10/05/1094030.jpg\" width=\"120\" />Starfield успела прославиться не только тем, что стала первой IP от Bethesda за последние 25 лет, и богатой графикой, но и кусачими требованиями к производительности видеокарты, особенно если это видеокарта на чипе NVIDIA",
    "content": null,
    "pub_date": "2023-10-08T21:00:00Z",
    "upd_date": "2023-10-08T21:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:23.235Z",
    "updated": "2023-10-09T09:35:59.060Z",
    "tags": [
      66
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 47,
  "fields": {
    "feed": 31,
    "title": "Обзор видеокарты MSI GeForce RTX 4060 GAMING X: подвиньтесь, старички!",
    "author": null,
    "url": "https://3dnews.ru/1093155",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/16/1093155/sm.intro.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/16/1093155.jpg\" width=\"120\" />Видеокарты GeForce с цифрой 6 в названии часто становятся хитами. Как правило, эти устройства обладают оптимальной игровой производительностью и умеренной ценой. Такие модели, как GeForce GTX 1060, GeForce GTX 1660 SUPER, GeForce RTX 2060 и GeForce RTX 3060, входят в топ-10 популярнейших 3D-ускорителей современности. Станет ли успешной GeForce RTX 4060?",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/16/1093155.jpg\" width=\"120\" />Видеокарты GeForce с цифрой 6 в названии часто становятся хитами. Как правило, эти устройства обладают оптимальной игровой производительностью и умеренной ценой. Такие модели, как GeForce GTX 1060, GeForce GTX 1660 SUPER, GeForce RTX 2060 и GeForce RTX 3060, входят в топ-10 популярнейших 3D-ускорителей современности. Станет ли успешной GeForce RTX 4060?",
    "content": null,
    "pub_date": "2023-09-25T21:00:00Z",
    "upd_date": "2023-09-25T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:24.656Z",
    "updated": "2023-10-09T09:34:24.656Z",
    "tags": [
      67
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 48,
  "fields": {
    "feed": 31,
    "title": "Обзор видеокарты AMD Radeon RX 7900 GRE: пока не для всех",
    "author": null,
    "url": "https://3dnews.ru/1092822",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/09/10/1092822/sm.cover.800.jpg",
    "description": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/10/1092822.jpg\" width=\"120\" />AMD отдала ценовой промежуток между Radeon RX 7800 XT и RX 7900 XT на откуп NVIDIA, однако «красная» альтернатива GeForce RTX 4070 Ti уже существует. Правда, только в Китае или в составе готовых ПК, но, если Radeon RX 7900 GRE откроют дорогу к мировой рознице, вы уже будете знать, на что способна эта видеокарта",
    "summary": "<img align=\"left\" border=\"0\" height=\"85\" hspace=\"10\" src=\"https://3dnews.ru/assets/external/icons/2023/09/10/1092822.jpg\" width=\"120\" />AMD отдала ценовой промежуток между Radeon RX 7800 XT и RX 7900 XT на откуп NVIDIA, однако «красная» альтернатива GeForce RTX 4070 Ti уже существует. Правда, только в Китае или в составе готовых ПК, но, если Radeon RX 7900 GRE откроют дорогу к мировой рознице, вы уже будете знать, на что способна эта видеокарта",
    "content": null,
    "pub_date": "2023-09-10T21:00:00Z",
    "upd_date": "2023-09-10T21:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:25.058Z",
    "updated": "2023-10-09T09:34:25.058Z",
    "tags": [
      68
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 49,
  "fields": {
    "feed": 30,
    "title": "Cyclotech представил электролёт на катушках вместо пропеллеров",
    "author": null,
    "url": "https://3dnews.ru/1094172",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/10/08/1094172/223.jpg",
    "description": "Компания Cyclotech представила электрический летательный аппарат с вертикальным взлётом и посадкой (eVTOL) под названием CruiseUp. Главная особенность новинки заключается в том, что в её конструкции вместо привычных винтов с несколькими лопастями используются двигательные установки CycloRotors. Они выглядят как барабаны или катушки, у которых проделаны отверстия в боковых сторонах, и которые вращаются вокруг горизонтальной оси. Источник изображений: Cyclotech",
    "summary": "Компания Cyclotech представила электрический летательный аппарат с вертикальным взлётом и посадкой (eVTOL) под названием CruiseUp. Главная особенность новинки заключается в том, что в её конструкции вместо привычных винтов с несколькими лопастями используются двигательные установки CycloRotors. Они выглядят как барабаны или катушки, у которых проделаны отверстия в боковых сторонах, и которые вращаются вокруг горизонтальной оси. Источник изображений: Cyclotech",
    "content": null,
    "pub_date": "2023-10-08T18:01:00Z",
    "upd_date": "2023-10-08T18:01:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:26.243Z",
    "updated": "2023-10-09T09:36:00.257Z",
    "tags": [
      69
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 50,
  "fields": {
    "feed": 30,
    "title": "В туманности Ориона нашли 40 пар юпитеров, и их существование невозможно объяснить",
    "author": null,
    "url": "https://3dnews.ru/1094125",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/10/06/1094125/orion-nebula_1.jpg",
    "description": "Двое астрономов из Нидерландов, Сэмюэл Пирсон (Samuel G. Pearson) и Марк МакКогрин (Mark J. McCaughrean), при изучении снимков туманности Ориона, полученных космическим телескопом &laquo;Джеймс Уэбб&raquo; (JWST), обнаружили несколько десятков пар объектов, сопоставимых с планетой Юпитер. Объяснить формирование таких пар в этой области современная наука не в силах. Туманность Ориона. Источник изображений: esa.int",
    "summary": "Двое астрономов из Нидерландов, Сэмюэл Пирсон (Samuel G. Pearson) и Марк МакКогрин (Mark J. McCaughrean), при изучении снимков туманности Ориона, полученных космическим телескопом &laquo;Джеймс Уэбб&raquo; (JWST), обнаружили несколько десятков пар объектов, сопоставимых с планетой Юпитер. Объяснить формирование таких пар в этой области современная наука не в силах. Туманность Ориона. Источник изображений: esa.int",
    "content": null,
    "pub_date": "2023-10-06T15:04:00Z",
    "upd_date": "2023-10-06T15:04:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:26.674Z",
    "updated": "2023-10-09T09:34:26.674Z",
    "tags": [
      70
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 51,
  "fields": {
    "feed": 30,
    "title": "Хакерский мультитул Flipper Zero вышел в спецверсии с прозрачным корпусом",
    "author": null,
    "url": "https://3dnews.ru/1094086",
    "image_url": "https://3dnews.ru/assets/external/illustrations/2023/10/05/1094086/209.jpg",
    "description": "Хакерское устройство Flipper Zero, которое позиционируется разработчиками как программируемый инструмент для тестирования различных интерфейсов и цифровых устройств, теперь доступно в версии с корпусом из прозрачного пластика. Желающим его приобрести следует поторопиться, поскольку будет выпущено всего 7500 единиц этой версии продукта. Источник изображений: Flipper Zero",
    "summary": "Хакерское устройство Flipper Zero, которое позиционируется разработчиками как программируемый инструмент для тестирования различных интерфейсов и цифровых устройств, теперь доступно в версии с корпусом из прозрачного пластика. Желающим его приобрести следует поторопиться, поскольку будет выпущено всего 7500 единиц этой версии продукта. Источник изображений: Flipper Zero",
    "content": null,
    "pub_date": "2023-10-05T21:39:00Z",
    "upd_date": "2023-10-05T21:39:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:27.120Z",
    "updated": "2023-10-09T09:34:27.120Z",
    "tags": [
      71
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 52,
  "fields": {
    "feed": 29,
    "title": "Kia K3 вместо Rio: теперь и хэтчбек",
    "author": "",
    "url": "https://autoreview.ru/news/kia-k3-vmesto-rio-teper-i-hetchbek",
    "image_url": "https://autoreview.ru/images/Article/1759/Article_175992_860_575.jpg",
    "description": "Kia K3 вместо Rio: теперь и хэтчбек",
    "summary": "Kia K3 вместо Rio: теперь и хэтчбек",
    "content": null,
    "pub_date": "2023-10-06T20:19:38Z",
    "upd_date": "2023-10-06T20:19:38Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:27.724Z",
    "updated": "2023-10-09T09:36:08.640Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 53,
  "fields": {
    "feed": 29,
    "title": "Анонсирована Лада Веста Sportline: седан и универсал",
    "author": "",
    "url": "https://autoreview.ru/news/anonsirovana-lada-vesta-sportline-sedan-i-universal",
    "image_url": "https://autoreview.ru/images/Article/1759/Article_175990_860_575.jpg",
    "description": "Анонсирована Лада Веста Sportline: седан и универсал",
    "summary": "Анонсирована Лада Веста Sportline: седан и универсал",
    "content": null,
    "pub_date": "2023-10-06T17:59:40Z",
    "upd_date": "2023-10-06T17:59:40Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:28.111Z",
    "updated": "2023-10-09T09:36:09.655Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 54,
  "fields": {
    "feed": 29,
    "title": "Пятидверная Toyota Crown Sport стала серийной",
    "author": "",
    "url": "https://autoreview.ru/news/pyatidvernaya-toyota-crown-sport-stala-seriynoy",
    "image_url": "https://autoreview.ru/images/Article/1759/Article_175989_860_575.jpg",
    "description": "Пятидверная Toyota Crown Sport стала серийной",
    "summary": "Пятидверная Toyota Crown Sport стала серийной",
    "content": null,
    "pub_date": "2023-10-06T15:07:16Z",
    "upd_date": "2023-10-06T15:07:16Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:28.486Z",
    "updated": "2023-10-09T09:34:28.486Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 55,
  "fields": {
    "feed": 28,
    "title": "Самомнение человечества",
    "author": "temalebedev",
    "url": "https://blog.tema.ru/GAL371uEbI9?utm_source=teletype&utm_medium=feed_rss&utm_campaign=temalebedev",
    "image_url": "https://img2.teletype.in/files/53/88/5388aee9-9bda-405c-b7aa-b6fff46d7e53.png",
    "description": "<img src=\"https://img1.teletype.in/files/42/f3/42f3ec5a-067d-4436-a536-a23d7890cf2b.jpeg\" />Решил я тут прикинуть, насколько человечество верит в то, как оно влияет на Землю. Мы же безответственные потребители, последнее поколение, вводим налоги на углеродный след, бездумно засираем планетушку и пр.",
    "summary": "<img src=\"https://img1.teletype.in/files/42/f3/42f3ec5a-067d-4436-a536-a23d7890cf2b.jpeg\" />Решил я тут прикинуть, насколько человечество верит в то, как оно влияет на Землю. Мы же безответственные потребители, последнее поколение, вводим налоги на углеродный след, бездумно засираем планетушку и пр.",
    "content": "<p id=\"M9fx\">Решил я тут прикинуть, насколько человечество верит в то, как оно влияет на Землю. Мы же безответственные потребители, последнее поколение, вводим налоги на углеродный след, бездумно засираем планетушку и пр.</p>\n  <p id=\"wIG7\">Нас уже 8 000 000 000 человек. Восемь миллиардов, ебать! А Земля-то не резиновая.</p>\n  <p id=\"BjIw\">Допустим, мы решим собрать всех-всех людей вместе. И поставить каждого на квадратик площадью 1х1 метр. Сколько это будет? Это будет 8000 квадратных километров. Для сравнения - площадь Абхазии - 8638 квадратных километров. То есть, абсолютно все люди за планете поместятся в Абхазии не толкаясь плечами, и еще немного останется запасик на полмиллиарда новых людей. Картинку прилагаю.</p>\n  <p id=\"cjHK\">А если мы решим быть щедрыми и каждому жителю Земли выделить по 100 квадратных метров площади собственной поверхности, то получится территория чуть больше Турции. И это при условии строго одноэтажного строительства.</p>\n  <p id=\"YENT\">Спрашивается, как это нам удается так влиять на климат? Правильный ответ: нам и не удается. Это зеленые уебаны и политики ссут нам в уши. Можно и дальше жить спокойно, места хватит.</p>\n  <p id=\"RYlb\">Лучше заняться делом, а не дрочить на Греточку. Развивать атомную энергетику, путешествовать в свое удовольствие и не воевать.</p>\n  <figure class=\"m_original\" id=\"2Kjz\">\n    <img src=\"https://img1.teletype.in/files/42/f3/42f3ec5a-067d-4436-a536-a23d7890cf2b.jpeg\" width=\"960\" />\n  </figure>",
    "pub_date": "2023-10-09T01:10:35Z",
    "upd_date": "2023-10-09T01:10:35Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:29.414Z",
    "updated": "2023-10-09T09:35:58.393Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 56,
  "fields": {
    "feed": 28,
    "title": "Прокладки",
    "author": "temalebedev",
    "url": "https://blog.tema.ru/Ru_xU-S6pbZ?utm_source=teletype&utm_medium=feed_rss&utm_campaign=temalebedev",
    "image_url": "https://img2.teletype.in/files/15/cb/15cbd2bc-60b3-4c53-9147-7450a2934efb.png",
    "description": "Дефчонки, а какими прокладками вы пользуетесь? Какие самые хорошие? Какие не брать? Цветные пробовали?",
    "summary": "Дефчонки, а какими прокладками вы пользуетесь? Какие самые хорошие? Какие не брать? Цветные пробовали?",
    "content": "<p id=\"rZus\">Дефчонки, а какими прокладками вы пользуетесь? Какие самые хорошие? Какие не брать? Цветные пробовали?</p>",
    "pub_date": "2023-10-08T07:29:41Z",
    "upd_date": "2023-10-08T07:29:41Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:29.639Z",
    "updated": "2023-10-09T09:36:04.876Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 57,
  "fields": {
    "feed": 28,
    "title": "Открытое письмо дизайнеру сайтов",
    "author": "temalebedev",
    "url": "https://blog.tema.ru/FvBPmTIoQtL?utm_source=teletype&utm_medium=feed_rss&utm_campaign=temalebedev",
    "image_url": "https://img4.teletype.in/files/3b/72/3b728c9c-92a3-409f-8279-c8f15cf7b83a.png",
    "description": "Дорогой дизайнер сайтов!",
    "summary": "Дорогой дизайнер сайтов!",
    "content": "<p id=\"BJ99\">Дорогой дизайнер сайтов!</p>\n  <p id=\"1Zqh\">Я знаю, тебе очень тяжело. Тебя не понимают знакомые. Тебя недооценивают на работе. Ты можешь больше, но не знаешь как. У тебя уже есть портфолио, которое ты собрал, но не торопился показать.</p>\n  <p id=\"IsV1\">Пришли ссылку на свои работы.</p>\n  <p id=\"2PIk\">Если ты действительно хорош, твоя жизнь изменится. У тебя будет охуенная работа в лучшей студии страны. Твой прошлый начальник обосрется от злости и собственной тупости, что недооценил тебя. Тебе дадут все знакомые бабы. О тебе будут говорить только хорошее на твоем городском форуме.</p>\n  <p id=\"cttv\">Пришли ссылку на портфолио с макетами сайтов.</p>\n  <p id=\"AJi4\">Если ты хуевый дизайнер, то все равно ничего не потеряешь - я просто не отвечу тебе.</p>\n  <p id=\"gaLr\">Но я уверен, что ты хорош. Пиши.</p>\n  <p id=\"HtpC\">tema@tema.ru</p>",
    "pub_date": "2023-10-08T07:29:29Z",
    "upd_date": "2023-10-08T07:29:29Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:29.870Z",
    "updated": "2023-10-09T09:36:05.409Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 58,
  "fields": {
    "feed": 27,
    "title": "Charlotte Bendiks - I'm Home, I'm OK",
    "author": null,
    "url": "https://ra.co/reviews/35733",
    "image_url": "",
    "description": "Around the corner from my place in London there's a social club that hosts movement classes—sessions where a DJ creates a soundscape for you to explore your \"ph..",
    "summary": "Around the corner from my place in London there's a social club that hosts movement classes—sessions where a DJ creates a soundscape for you to explore your \"ph..",
    "content": null,
    "pub_date": "2023-10-09T03:00:00Z",
    "upd_date": "2023-10-09T03:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:30.411Z",
    "updated": "2023-10-09T09:35:57.119Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 59,
  "fields": {
    "feed": 27,
    "title": "Flight Facilities - Clair de Lune (Dixon Remix)",
    "author": null,
    "url": "https://ra.co/reviews/35735",
    "image_url": "",
    "description": "Flight Facilities \"Clair de Lune,\" released a decade ago, is a classic in the world of chilled-out, slow-burning, sultry electronic music. The Australian duo (a..",
    "summary": "Flight Facilities \"Clair de Lune,\" released a decade ago, is a classic in the world of chilled-out, slow-burning, sultry electronic music. The Australian duo (a..",
    "content": null,
    "pub_date": "2023-10-06T03:00:00Z",
    "upd_date": "2023-10-06T03:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:30.485Z",
    "updated": "2023-10-09T09:34:30.485Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 60,
  "fields": {
    "feed": 27,
    "title": "Amy Dabbs - Only Breaks Can Love Your Heart",
    "author": null,
    "url": "https://ra.co/reviews/35731",
    "image_url": "",
    "description": "Since bursting onto the scene three years ago, Amy Dabbs has carved out a formidable niche. Oscillating between soulful four-four tunes (on labels like <a href=..",
    "summary": "Since bursting onto the scene three years ago, Amy Dabbs has carved out a formidable niche. Oscillating between soulful four-four tunes (on labels like <a href=..",
    "content": null,
    "pub_date": "2023-10-06T03:00:00Z",
    "upd_date": "2023-10-06T03:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:30.566Z",
    "updated": "2023-10-09T09:34:30.566Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 61,
  "fields": {
    "feed": 26,
    "title": "A Northern Sound: The Story Behind Bassline's Revival",
    "author": null,
    "url": "https://ra.co/features/3947",
    "image_url": "",
    "description": "Long marginalised outside the North of England, the genre is back en vogue thanks to a post-pandemic surge of interest. The scene's key players unpack the story so far.",
    "summary": "Long marginalised outside the North of England, the genre is back en vogue thanks to a post-pandemic surge of interest. The scene's key players unpack the story so far.",
    "content": null,
    "pub_date": "2023-10-05T11:00:00Z",
    "upd_date": "2023-10-05T11:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:31.128Z",
    "updated": "2023-10-09T09:34:31.128Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 62,
  "fields": {
    "feed": 26,
    "title": "RA Live: Mall Grab B2B Skin On Skin",
    "author": null,
    "url": "https://ra.co/features/4236",
    "image_url": "",
    "description": "Watch the Australian pair hugging, dancing and playing ecstatic bangers at this year's Junction 2 festival in London.",
    "summary": "Watch the Australian pair hugging, dancing and playing ecstatic bangers at this year's Junction 2 festival in London.",
    "content": null,
    "pub_date": "2023-10-04T08:00:00Z",
    "upd_date": "2023-10-04T08:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:31.209Z",
    "updated": "2023-10-09T09:34:31.209Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 63,
  "fields": {
    "feed": 26,
    "title": "For Alewya, Everything Starts With a Dance",
    "author": null,
    "url": "https://ra.co/features/4237",
    "image_url": "",
    "description": "The UK singer-songwriter and multidisciplinary artist talks about finding a new part of herself through music.",
    "summary": "The UK singer-songwriter and multidisciplinary artist talks about finding a new part of herself through music.",
    "content": null,
    "pub_date": "2023-10-03T08:00:00Z",
    "upd_date": "2023-10-03T08:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:31.310Z",
    "updated": "2023-10-09T09:34:31.310Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 64,
  "fields": {
    "feed": 25,
    "title": "Loraine James - Gentle Confrontation",
    "author": null,
    "url": "https://ra.co/reviews/35721",
    "image_url": "",
    "description": "Loraine James appeared like a bolt of lightning when she released <a href=\"/reviews/24288\" target=\"_blank\"><i>For You and I</i></a>, her debut Hyperdub album in 2..",
    "summary": "Loraine James appeared like a bolt of lightning when she released <a href=\"/reviews/24288\" target=\"_blank\"><i>For You and I</i></a>, her debut Hyperdub album in 2..",
    "content": null,
    "pub_date": "2023-10-09T03:00:00Z",
    "upd_date": "2023-10-09T03:00:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:32.101Z",
    "updated": "2023-10-09T09:35:57.762Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 65,
  "fields": {
    "feed": 25,
    "title": "Pangaea - Changing Channels",
    "author": null,
    "url": "https://ra.co/reviews/35736",
    "image_url": "",
    "description": "Be it deep, percussive dubstep or punchy techno, Kevin McAuley has always been the straight-shooting head of the Hessle Audio hydra. But \"<a href=/reviews/35483..",
    "summary": "Be it deep, percussive dubstep or punchy techno, Kevin McAuley has always been the straight-shooting head of the Hessle Audio hydra. But \"<a href=/reviews/35483..",
    "content": null,
    "pub_date": "2023-10-06T03:00:00Z",
    "upd_date": "2023-10-06T03:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:32.178Z",
    "updated": "2023-10-09T09:34:32.178Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 66,
  "fields": {
    "feed": 25,
    "title": "Laurel Halo - Atlas",
    "author": null,
    "url": "https://ra.co/reviews/35719",
    "image_url": "",
    "description": "In early 2020, Laurel Halo started working on <i>Atlas</i> during a residency in the Pacific Palisades. The program offered a chance to rekindle her childhood l..",
    "summary": "In early 2020, Laurel Halo started working on <i>Atlas</i> during a residency in the Pacific Palisades. The program offered a chance to rekindle her childhood l..",
    "content": null,
    "pub_date": "2023-10-05T03:00:00Z",
    "upd_date": "2023-10-05T03:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:32.264Z",
    "updated": "2023-10-09T09:34:32.264Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 67,
  "fields": {
    "feed": 24,
    "title": "If you think Bluesky is decentralized, you’ve been conned",
    "author": null,
    "url": "https://blog.wesleyac.com/posts/bluesky",
    "image_url": "",
    "description": "<p><a href=\"https://blueskyweb.xyz/\">Bluesky</a> is a purportedly-decentralized social media company that spun out of Twitter, beginning in 2019. It makes sense that people are hunting for new social media platforms right now — Elon Musk's disastrous takeover of Twitter has demonstrated how fragile relying on private VC-funded companies is for something so critical as communication infrastructure. BlueSky's answer to this is that they are decentralized — thanks to the <a href=\"https://atproto.com\">AT Protocol</a>, anyone can run a server. Unfortunately, it's decentralized in name only:</p>\n\n<ul>\n<li>The AT Protocol is entirely controlled by Bluesky the company, with no community governance structure or plans for a governance structure. Want to change how it works? Tough luck, buddy.</li>\n<li><s>Want to run a server yourself? Well, the server is closed-source, so you'd better enjoy reimplementing it all yourself</s>.<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup> (Edit: I'm told that this is not true, and that the <a href=\"https://github.com/bluesky-social/atproto\">atproto</a> has the server code. However, it's unclear to me how much of what's running on bsky.social is public — the identity parts appear to be, but not the web frontend, that I can find.)</li>\n<li>The apps? Also closed source, you don't have any control over them.<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup></li>\n</ul>\n\n<p>This isn't how you build a decentralized ecosystem, it's how you build a system that you can claim is decentralized while still holding all the power yourself.</p>\n\n<p>There's a lot more that's wrong with Bluesky that I'm not going to get into, since I honestly don't really care. But if you care about not giving more power in your life to a VC-funded company started by a guy who said that &quot;<a href=\"https://twitter.com/jack/status/1518772756069773313\">Elon is the singular solution I trust</a>&quot; to running Twitter, you probably want to stay away from Bluesky.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn1\">\n<p>You might reasonably be fooled into thinking that <a href=\"https://github.com/bluesky-social/indigo\">indigo</a> is the server, but a closer look reveals that this does not seem to be the case.&nbsp;<a href=\"#fnref1\">&#8617;</a></p>\n</li>\n\n<li id=\"fn2\">\n<p>There does appear to be one open-source Android app from a third-party, but there doesn't seem to be any plan to open-source the official apps.&nbsp;<a href=\"#fnref2\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>",
    "summary": "<p><a href=\"https://blueskyweb.xyz/\">Bluesky</a> is a purportedly-decentralized social media company that spun out of Twitter, beginning in 2019. It makes sense that people are hunting for new social media platforms right now — Elon Musk's disastrous takeover of Twitter has demonstrated how fragile relying on private VC-funded companies is for something so critical as communication infrastructure. BlueSky's answer to this is that they are decentralized — thanks to the <a href=\"https://atproto.com\">AT Protocol</a>, anyone can run a server. Unfortunately, it's decentralized in name only:</p>\n\n<ul>\n<li>The AT Protocol is entirely controlled by Bluesky the company, with no community governance structure or plans for a governance structure. Want to change how it works? Tough luck, buddy.</li>\n<li><s>Want to run a server yourself? Well, the server is closed-source, so you'd better enjoy reimplementing it all yourself</s>.<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup> (Edit: I'm told that this is not true, and that the <a href=\"https://github.com/bluesky-social/atproto\">atproto</a> has the server code. However, it's unclear to me how much of what's running on bsky.social is public — the identity parts appear to be, but not the web frontend, that I can find.)</li>\n<li>The apps? Also closed source, you don't have any control over them.<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup></li>\n</ul>\n\n<p>This isn't how you build a decentralized ecosystem, it's how you build a system that you can claim is decentralized while still holding all the power yourself.</p>\n\n<p>There's a lot more that's wrong with Bluesky that I'm not going to get into, since I honestly don't really care. But if you care about not giving more power in your life to a VC-funded company started by a guy who said that &quot;<a href=\"https://twitter.com/jack/status/1518772756069773313\">Elon is the singular solution I trust</a>&quot; to running Twitter, you probably want to stay away from Bluesky.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn1\">\n<p>You might reasonably be fooled into thinking that <a href=\"https://github.com/bluesky-social/indigo\">indigo</a> is the server, but a closer look reveals that this does not seem to be the case.&nbsp;<a href=\"#fnref1\">&#8617;</a></p>\n</li>\n\n<li id=\"fn2\">\n<p>There does appear to be one open-source Android app from a third-party, but there doesn't seem to be any plan to open-source the official apps.&nbsp;<a href=\"#fnref2\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>",
    "content": null,
    "pub_date": "2023-04-28T04:00:00Z",
    "upd_date": "2023-04-28T04:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:32.765Z",
    "updated": "2023-10-09T09:34:32.765Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 68,
  "fields": {
    "feed": 24,
    "title": "Storage Space PSA for Mastodon Admins",
    "author": null,
    "url": "https://blog.wesleyac.com/posts/mastodon-storage-psa",
    "image_url": "",
    "description": "<p>Do you administer a Mastodon instance? Is it falling over all the time now because it's running out of disk space because everyone is joining the network? Here is a quick PSA: <code>tootctl media remove</code> <strong>does not remove all the remote media</strong>. It removes all remote media more than 7 days old. It used to be that, on the server that I run, <a href=\"https://recurse.social\">recurse.social</a>, that would leave a handful of GB of media. Now it's more like 25GB of media. If you don't want to have to resize your server to deal with the peak of the influx of new users, consider changing your cronjob to something like <code>tootctl media remove --days=1</code>, to more aggressively delete remote media that's unlikely to be needed.</p>",
    "summary": "<p>Do you administer a Mastodon instance? Is it falling over all the time now because it's running out of disk space because everyone is joining the network? Here is a quick PSA: <code>tootctl media remove</code> <strong>does not remove all the remote media</strong>. It removes all remote media more than 7 days old. It used to be that, on the server that I run, <a href=\"https://recurse.social\">recurse.social</a>, that would leave a handful of GB of media. Now it's more like 25GB of media. If you don't want to have to resize your server to deal with the peak of the influx of new users, consider changing your cronjob to something like <code>tootctl media remove --days=1</code>, to more aggressively delete remote media that's unlikely to be needed.</p>",
    "content": null,
    "pub_date": "2022-11-12T05:00:00Z",
    "upd_date": "2022-11-12T05:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:33.013Z",
    "updated": "2023-10-09T09:34:33.013Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 69,
  "fields": {
    "feed": 24,
    "title": "Subdomains as identity",
    "author": null,
    "url": "https://blog.wesleyac.com/posts/subdomains-as-identity",
    "image_url": "",
    "description": "<p>A common identity scheme for websites is to give users pages like <code>example.com/username</code>. Twitter, Instagram, Twitch, Pinterest, and many other websites use this model. Reddit, TikTok, Mastodon, Lobsters, and several others use a slightly more conservative version of this, with a prefix (either <code>@</code> or <code>u/</code>) before the username.</p>\n\n<p>I think that in many cases, this is a mistake, and using subdomains, like <code>username.example.com</code> is better. Particularly, I think that the subdomain-based model is best for websites where there is minimal interaction between users (blogging, publishing, etc), or where that interaction happens via an open protocol.</p>\n\n<p>Using subdomains for identity offers a few advantages:</p>\n\n<ul>\n<li>It makes it easier for users to own their own identities, since you can very easily support using custom domains</li>\n<li>It makes it easy to securely allow users full control over the CSS/HTML on their page, without worrying about XSS</li>\n<li>It lets you cleanly have information about your website on the top-level domain, without adding the noise of a <code>u/</code> or <code>@</code> prefix to usernames</li>\n</ul>\n\n<p>This would be most advantageous for systems like Mastodon — one of the most fundamental mistakes that mastodon made was tying your identity to whoever happens to sysadmin the server you use, and using domains as identity would have almost entirely solved that<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup>. However, I think that there are notable advantages even for less explicitly federated systems as well.</p>\n\n<p>I personally think that these advantages are quite significant, and software that gives users control over their identity and expression is inherently worth building, but this blog post isn't about that. I figure if you're making this decision, you're capable of thinking through the tradeoffs yourself. This blog post is about concretely, how to implement a system that uses subdomains as identity, and how to extend that system to allow arbitrary custom domains. This is what I do for <a href=\"https://thoughts.page\">thoughts.page</a>, which has been running successfully like this for a year now.</p>\n\n<p>The first question is how to integrate subdomain information into whatever routing system you use. thoughts.page uses <a href=\"https://github.com/seanmonstar/warp\">warp</a>, which has out-of-the-box support for routing based on domain name, but you might not be so lucky in your framework of choice — searching &quot;[framework] wildcard subdomain routing&quot; should point you to relevant documentation. If you don't find a easy way to do this, a common alternative is to rewrite URLs internally, so that <code>username.example.com/foo</code> gets rewritten to <code>example.com/user/username/foo</code> before it's handed to your routing library. If your framework doesn't provide a way to do it, nginx can do the same thing with a <code>rewrite</code> command. However, I'd recommend doing it in your app if possible, since that will make development significantly easier.</p>\n\n<p>Speaking of development, you won't be able to just use <code>localhost</code> to see your server anymore, since it will require subdomains for routing. Some systems will allow URLs like <code>username.whatever.localhost</code> to work, but if not, you can use <code>lvh.me</code> or <code>vcap.me</code>, which both return <code>127.0.0.1</code> for all requests.</p>\n\n<p>When you deploy your app, you'll need to get a wildcard HTTPS certificate, instead of one that's restricted to a particular subdomain. If you use Let's Encrypt, this makes the process <a href=\"https://letsencrypt.org/docs/faq/#does-let-s-encrypt-issue-wildcard-certificates\">slightly more complicated</a>, but there are <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-let-s-encrypt-wildcard-certificates-with-certbot\">good instructions online</a> for doing so.</p>\n\n<p>That's all you need to use subdomains for identity. If you want to go the whole hog and allow users to use custom domains, though, you need to do a little bit more. The main problem here is HTTPS: you need to have a certificate for whatever domain they choose to use, and your web server needs to be able to dynamically pick which HTTPS cert to use based on the domain name. Nginx added support for this in 1.15.9, which is relatively recent — it's in the most recent Debian version as of this writing (bullseye), but not in the previous version (buster). You can set this up by using the <code>$ssl_server_name</code> variable in your <code>ssl_certificate</code> and <code>ssl_certificate_key</code> variables, like so (assuming the default certbot setup):</p>\n<div class=\"highlight\"><pre><code class=\"language-\">ssl_certificate /etc/letsencrypt/live/$ssl_server_name/fullchain.pem; \nssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;\n</code></pre></div>\n<p>That's not enough, though, since you also need to actually get the keys. I do this by having a small script<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup> that reads the database to look for users with custom domains, and attempts to renew their certificates:</p>\n<div class=\"highlight\"><pre><code class=\"language-bash\"><span class=\"c\">#!/usr/bin/env bash</span>\n\n<span class=\"nb\">cd</span> <span class=\"k\">$(</span>dirname <span class=\"s2\">\"</span><span class=\"nv\">$0</span><span class=\"s2\">\"</span><span class=\"k\">)</span>\n\ncertbot certonly --noninteractive --keep-until-expiring --dns-digitalocean --dns-digitalocean-credentials /root/digitalocean-secret.ini -d thoughts.page -d <span class=\"s1\">'*.thoughts.page'</span>\n\nsqlite3 thoughts.sqlite3 <span class=\"s2\">\"SELECT domain FROM domains\"</span> | grep -v <span class=\"s2\">\".thoughts.page$\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>DOMAIN\n<span class=\"k\">do\n    </span>certbot certonly --noninteractive --keep-until-expiring --webroot --webroot-path /var/cert-webroot/ --domain <span class=\"s2\">\"</span><span class=\"nv\">$DOMAIN</span><span class=\"s2\">\"</span>\n<span class=\"k\">done</span>\n\n<span class=\"c\"># Needed because nginx SNI doesn't run as root</span>\nchmod -R 755 /etc/letsencrypt/live/\nchmod -R 755 /etc/letsencrypt/archive/\n\n<span class=\"c\"># Nginx needs a reload to pick up new certs</span>\nsystemctl reload nginx\n</code></pre></div>\n<p>This is run every five minutes by a cron job. I could have the user adding a new custom domain trigger this, but so far, I haven't felt the need to do that.</p>\n\n<p>The <code>/var/cert-webroot/</code> directory referenced in that script is served by nginx, using the following snippet:</p>\n<div class=\"highlight\"><pre><code class=\"language-\">location /.well-known/acme-challenge/ {\n    root /var/cert-webroot/;\n}\n</code></pre></div>\n<p>This allows the app server to keep on running while the certs are being renewed, free of any interference from certbot.</p>\n\n<p>This relatively simple change makes it easy for people to own their own identities if that's important to them, without imposing any sort of burden on less technically-inclined users to think about it. It also creates a softer gradient towards self-hosting, allowing people who are comfortable setting up a DNS record but not administering a server to own their own identities. Next time you're making a website with users, I hope you'll consider using subdomains as identity.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn1\">\n<p>I say &quot;almost entirely&quot;, since there should still ideally be some way for clients to have cryptographic proof of their identity, which they can use to delegate the ability to manage their account to a particular server. Implementing this well is quite complex, but I think doable and important, as well. If you're working on this kind of thing and want to chat about it, please do drop me a line :)&nbsp;<a href=\"#fnref1\">&#8617;</a></p>\n</li>\n\n<li id=\"fn2\">\n<p>One of the <a href=\"/posts/consider-sqlite\">many advantages</a> to using SQLite is that it makes writing small scripts like this really easy&nbsp;<a href=\"#fnref2\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>",
    "summary": "<p>A common identity scheme for websites is to give users pages like <code>example.com/username</code>. Twitter, Instagram, Twitch, Pinterest, and many other websites use this model. Reddit, TikTok, Mastodon, Lobsters, and several others use a slightly more conservative version of this, with a prefix (either <code>@</code> or <code>u/</code>) before the username.</p>\n\n<p>I think that in many cases, this is a mistake, and using subdomains, like <code>username.example.com</code> is better. Particularly, I think that the subdomain-based model is best for websites where there is minimal interaction between users (blogging, publishing, etc), or where that interaction happens via an open protocol.</p>\n\n<p>Using subdomains for identity offers a few advantages:</p>\n\n<ul>\n<li>It makes it easier for users to own their own identities, since you can very easily support using custom domains</li>\n<li>It makes it easy to securely allow users full control over the CSS/HTML on their page, without worrying about XSS</li>\n<li>It lets you cleanly have information about your website on the top-level domain, without adding the noise of a <code>u/</code> or <code>@</code> prefix to usernames</li>\n</ul>\n\n<p>This would be most advantageous for systems like Mastodon — one of the most fundamental mistakes that mastodon made was tying your identity to whoever happens to sysadmin the server you use, and using domains as identity would have almost entirely solved that<sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup>. However, I think that there are notable advantages even for less explicitly federated systems as well.</p>\n\n<p>I personally think that these advantages are quite significant, and software that gives users control over their identity and expression is inherently worth building, but this blog post isn't about that. I figure if you're making this decision, you're capable of thinking through the tradeoffs yourself. This blog post is about concretely, how to implement a system that uses subdomains as identity, and how to extend that system to allow arbitrary custom domains. This is what I do for <a href=\"https://thoughts.page\">thoughts.page</a>, which has been running successfully like this for a year now.</p>\n\n<p>The first question is how to integrate subdomain information into whatever routing system you use. thoughts.page uses <a href=\"https://github.com/seanmonstar/warp\">warp</a>, which has out-of-the-box support for routing based on domain name, but you might not be so lucky in your framework of choice — searching &quot;[framework] wildcard subdomain routing&quot; should point you to relevant documentation. If you don't find a easy way to do this, a common alternative is to rewrite URLs internally, so that <code>username.example.com/foo</code> gets rewritten to <code>example.com/user/username/foo</code> before it's handed to your routing library. If your framework doesn't provide a way to do it, nginx can do the same thing with a <code>rewrite</code> command. However, I'd recommend doing it in your app if possible, since that will make development significantly easier.</p>\n\n<p>Speaking of development, you won't be able to just use <code>localhost</code> to see your server anymore, since it will require subdomains for routing. Some systems will allow URLs like <code>username.whatever.localhost</code> to work, but if not, you can use <code>lvh.me</code> or <code>vcap.me</code>, which both return <code>127.0.0.1</code> for all requests.</p>\n\n<p>When you deploy your app, you'll need to get a wildcard HTTPS certificate, instead of one that's restricted to a particular subdomain. If you use Let's Encrypt, this makes the process <a href=\"https://letsencrypt.org/docs/faq/#does-let-s-encrypt-issue-wildcard-certificates\">slightly more complicated</a>, but there are <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-let-s-encrypt-wildcard-certificates-with-certbot\">good instructions online</a> for doing so.</p>\n\n<p>That's all you need to use subdomains for identity. If you want to go the whole hog and allow users to use custom domains, though, you need to do a little bit more. The main problem here is HTTPS: you need to have a certificate for whatever domain they choose to use, and your web server needs to be able to dynamically pick which HTTPS cert to use based on the domain name. Nginx added support for this in 1.15.9, which is relatively recent — it's in the most recent Debian version as of this writing (bullseye), but not in the previous version (buster). You can set this up by using the <code>$ssl_server_name</code> variable in your <code>ssl_certificate</code> and <code>ssl_certificate_key</code> variables, like so (assuming the default certbot setup):</p>\n<div class=\"highlight\"><pre><code class=\"language-\">ssl_certificate /etc/letsencrypt/live/$ssl_server_name/fullchain.pem; \nssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;\n</code></pre></div>\n<p>That's not enough, though, since you also need to actually get the keys. I do this by having a small script<sup id=\"fnref2\"><a href=\"#fn2\">2</a></sup> that reads the database to look for users with custom domains, and attempts to renew their certificates:</p>\n<div class=\"highlight\"><pre><code class=\"language-bash\"><span class=\"c\">#!/usr/bin/env bash</span>\n\n<span class=\"nb\">cd</span> <span class=\"k\">$(</span>dirname <span class=\"s2\">\"</span><span class=\"nv\">$0</span><span class=\"s2\">\"</span><span class=\"k\">)</span>\n\ncertbot certonly --noninteractive --keep-until-expiring --dns-digitalocean --dns-digitalocean-credentials /root/digitalocean-secret.ini -d thoughts.page -d <span class=\"s1\">'*.thoughts.page'</span>\n\nsqlite3 thoughts.sqlite3 <span class=\"s2\">\"SELECT domain FROM domains\"</span> | grep -v <span class=\"s2\">\".thoughts.page$\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>DOMAIN\n<span class=\"k\">do\n    </span>certbot certonly --noninteractive --keep-until-expiring --webroot --webroot-path /var/cert-webroot/ --domain <span class=\"s2\">\"</span><span class=\"nv\">$DOMAIN</span><span class=\"s2\">\"</span>\n<span class=\"k\">done</span>\n\n<span class=\"c\"># Needed because nginx SNI doesn't run as root</span>\nchmod -R 755 /etc/letsencrypt/live/\nchmod -R 755 /etc/letsencrypt/archive/\n\n<span class=\"c\"># Nginx needs a reload to pick up new certs</span>\nsystemctl reload nginx\n</code></pre></div>\n<p>This is run every five minutes by a cron job. I could have the user adding a new custom domain trigger this, but so far, I haven't felt the need to do that.</p>\n\n<p>The <code>/var/cert-webroot/</code> directory referenced in that script is served by nginx, using the following snippet:</p>\n<div class=\"highlight\"><pre><code class=\"language-\">location /.well-known/acme-challenge/ {\n    root /var/cert-webroot/;\n}\n</code></pre></div>\n<p>This allows the app server to keep on running while the certs are being renewed, free of any interference from certbot.</p>\n\n<p>This relatively simple change makes it easy for people to own their own identities if that's important to them, without imposing any sort of burden on less technically-inclined users to think about it. It also creates a softer gradient towards self-hosting, allowing people who are comfortable setting up a DNS record but not administering a server to own their own identities. Next time you're making a website with users, I hope you'll consider using subdomains as identity.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn1\">\n<p>I say &quot;almost entirely&quot;, since there should still ideally be some way for clients to have cryptographic proof of their identity, which they can use to delegate the ability to manage their account to a particular server. Implementing this well is quite complex, but I think doable and important, as well. If you're working on this kind of thing and want to chat about it, please do drop me a line :)&nbsp;<a href=\"#fnref1\">&#8617;</a></p>\n</li>\n\n<li id=\"fn2\">\n<p>One of the <a href=\"/posts/consider-sqlite\">many advantages</a> to using SQLite is that it makes writing small scripts like this really easy&nbsp;<a href=\"#fnref2\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>",
    "content": null,
    "pub_date": "2022-04-07T04:00:00Z",
    "upd_date": "2022-04-07T04:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:33.265Z",
    "updated": "2023-10-09T09:34:33.265Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 70,
  "fields": {
    "feed": 23,
    "title": "This Week in Rust 515",
    "author": "TWiR Contributors",
    "url": "https://this-week-in-rust.org/blog/2023/10/04/this-week-in-rust-515/",
    "image_url": "",
    "description": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"foundation\"><a class=\"toclink\" href=\"#foundation\">Foundation</a></h3>\n<ul>\n<li><a href=\"https://foundation.rust-lang.org/news/rust-foundation-project-director-election-update/\">Rust Foundation Project Director Election Update</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-26\">Progress Report #26: rustc_codegen_gcc can now compile Rust for Linux!</a></li>\n<li><a href=\"https://github.com/leptos-rs/leptos/releases/tag/v0.5.0\">Leptos Release v0.5.0</a></li>\n<li><a href=\"https://yew.rs/blog/2023/09/23/release-0-21\">Announcing Yew 0.21</a></li>\n<li><a href=\"https://ambient.run/blog/platform\">Ambient Platform</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/ferrocene-open-source/\">Open Sourcing Ferrocene</a></li>\n<li><a href=\"https://rust-analyzer.github.io/thisweek/2023/10/02/changelog-201.html\">rust-analyzer changelog #201</a></li>\n<li><a href=\"https://zenoh.io/blog/2023-10-03-zenoh-dragonite/\">Zenoh 0.10.0, a pure Rust Pub/Sub/Query protocol for cloud-to-thing continuum, was released and it is packed with new features.</a></li>\n<li><a href=\"https://nikolaivazquez.com/blog/divan/\">Announcing Divan: Fast and Simple Benchmarking for Rust</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/29/polonius-part-2/\">Polonius revisited, part 2</a></li>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/30/profiles/\">Easing tradeoffs with profiles</a></li>\n<li><a href=\"https://blog.yoshuawuyts.com/async-iterator-trait/\">Async Iteration III: The Async Iterator Trait</a></li>\n<li><a href=\"https://blog.adamchalmers.com/rustconf-2023-recap/\">Rustconf 2023 recap</a></li>\n<li><a href=\"https://seanmonstar.com/post/66832922686/was-async-fn-a-mistake\">Was async fn a mistake?</a></li>\n<li><a href=\"https://www.shuttle.rs/blog/2023/09/27/rust-vs-go-comparison\">Rust Vs Go: A Hands-On Comparison</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=sZaAP4AS0hc\">The ultimate Rust IDE is here</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/ian-ker-sey/\">rb-sys with Ian Ker-Seymer</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/rust-1.70-1.71/\">What's New in Rust 1.70 and 1.71</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://benw.is/posts/rss-in-axum\">Create an RSS Feed in Axum or Leptos</a></li>\n<li><a href=\"https://peterprototypes.com/blog/rust-dockerfile-boilerplate/\">Rust Dockerfile Boilerplate</a></li>\n<li><a href=\"https://towardsdatascience.com/nine-rules-to-formally-validate-rust-algorithms-with-dafny-part-1-5cb8c8a0bb92\">Nine Rules to Formally Validate Rust Algorithms with Dafny (Part 1): Lessons from Verifying the range-set-blaze Crate</a></li>\n<li><a href=\"https://robertohuertas.com/2023/09/30/shuttle-datadog-logs/\">Send the logs of your Shuttle-powered backend to Datadog</a></li>\n<li><a href=\"https://hegdenu.net/posts/tracing-tokio-tasks/\">Tracing Tokio Tasks</a></li>\n<li>[series] <a href=\"https://heikoseeberger.de/2023-09-30-dist-tracing-4/\">Distributed Tracing in Rust, Episode 4: correlating logs and traces</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=wU8hQvU8aKM\">Two Ways To Do Dynamic Dispatch</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://harshil-jani.github.io/GSoC-Book-2.0/\">Writing the Matrix Bridge in Rust using matrix-rust-sdk</a></li>\n<li><a href=\"https://public-docs.ferrocene.dev/main/\">Ferrocene Open Source documentation</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://github.com/mahdi-shojaee/loole\">loole</a>, another multiple-producer multiple-consumer channel.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1243\">Mahdi Shojaee</a> for the self-suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<!-- CFPs go here, use this format: * [project name - title of issue](link to issue) -->\n<!-- * [ - ]() -->\n\n<ul>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2325\">Hyperswitch (Hacktoberfest)- Bitpay: Use connector_response_reference_id as reference to merchant</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2287\">Hyperswitch (Hacktoberfest)- Trustpay: Remove Default Case Handling</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2249\">Hyperswitch (Hacktoberfest)- Worldline: Currency Unit Conversion</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4011\">rust-libp2p - core: remove <code>upgrade::transfer</code> module</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/2591\">rust-libp2p - mdns: don't perform IO on main task</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/3395\">rust-libp2p - quic: don't support draft versions</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6060\">Ockam - Improve <code>ockam enroll</code> project configuration step by warning user not to exit process</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6125\">Ockam - Improve <code>ockam space create</code> by add missing argument <code>--identity</code> (<code>clap</code> command)</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6117\">Ockam - Improve <code>ockam enroll</code> argument <code>--identity</code> (<code>clap</code> command)</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>358 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-25..2023-10-02\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112123\">suggestion: insert projection to associated types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116340\"><code>skip_binder</code> to <code>instantiate_identity</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116176\">add \"integer square root\" method to integer primitive types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116241\">add Exclusive forwarding impls (FnOnce, FnMut, Generator)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116187\">add context to <code>let: Ty = loop { break };</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115986\">allow LTO on <code>proc-macro</code> crates with <code>-Zdylib-lto</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116149\">anonymize binders for <code>refining_impl_trait</code> check</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116254\">assorted improvements for <code>rustc_middle::mir::traversal</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115554\">build <code>rustc</code> with a single CGU on x64 Linux</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116281\">cleanup number handling in match exhaustiveness</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116125\">constParamTy: require Eq as supertrait</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116102\">correct codegen of <code>ConstValue::Indirect</code> scalar and scalar pair</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116163\">don't store lazyness in <code>DefKind::TyAlias</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116109\">don't use a thread to load the dep graph</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115819\">expose <code>try_destructure_mir_constant_for_diagnostics</code> directly to clippy</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116259\">factor out duplicated <code>entry_point_type</code> functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116201\">fix <code>noop_method_call</code> detection</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116162\">gate and validate <code>#[rustc_safe_intrinsic]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116024\">implement Region for smir</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/109597\">implement a global value numbering MIR optimization</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115893\">lint towards rejecting consts in patterns that do not implement PartialEq</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116253\">make <code>adt_const_params</code> feature suggestion consistent with other features and improve when it is emitted</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116093\">make <code>link_llvm_intrinsics</code> and <code>platform_intrinsics</code> features internal</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/102099\">mark drop calls in landing pads cold instead of noinline</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115821\">migrate <code>rustc_hir_analysis</code> to session diagnostic (Part 5)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116263\">more fixes for running the test suite on a bare metal target</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115843\">new solver: remove provisional cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116156\">only prevent field projections into opaque types, not types containing opaque types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116239\">only visit reachable nodes in SsaLocals</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116080\">point at more causes of expectation of break value when possible</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114453\">print GHA log groups to stdout instead of stderr</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115368\">promote loongarch64-unknown-none* to Tier 2</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116124\">properly print <code>cstr</code> literals in <code>proc_macro::Literal::to_string</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115933\">prototype using const generic for <code>simd_shuffle</code> IDX array</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116231\">remove <code>rustc_lint_defs::lint_array</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114454\">replace <code>HashMap</code> with <code>IndexMap</code> in pattern binding resolve</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116228\">resolve: skip underscore character during candidate lookup</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115759\">reveal opaque types before drop elaboration</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116030\">run abi/compatibility test against a whole bunch of targets</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116199\">simplify some of the logic in the <code>invalid_reference_casting</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116166\">skip MIR pass <code>UnreachablePropagation</code> when coverage is enabled</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115934\">split out the stable part of smir into its own crate to prevent accidental usage of forever unstable things</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115659\">stabilize <code>impl_trait_projections</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113301\">stabilize combining +bundle and +whole-archive link modifiers</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116154\">use <code>Vec::retain</code> in <code>remove_dead_blocks</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116204\">use absolute paths in <code>rustc_lint::passes</code> macros</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116072\">use placeholders to prevent using inferred RPITIT types to imply their own well-formedness</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116089\">when suggesting <code>self.x</code> for <code>S { x }</code>, use <code>S { x: self.x }</code></a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3086\">miri: implement SSE3 and SSSE3 intrinsics</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3093\">miri: implement the <code>llvm.x86.sse2.pmadd.wd</code> intrinsic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116207\">stdio support for UEFI</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/107651\">Build <code>rustc</code> with a single CGU on x64 Linux</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116224\"><code>rustc_arena</code> overhaul</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116325\">add <code>ptr::addr_eq</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116317\">add <code>track_caller</code> attribute to <code>Result::unwrap_or_else</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/98704\">implement <code>From&lt;OwnedFd/Handle&gt;</code> for <code>ChildStdin</code>/<code>out</code>/<code>err</code> object</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114041\">implement <code>From&lt;[T; N]&gt;</code> for <code>Rc&lt;[T]&gt;</code> and <code>Arc&lt;[T]&gt;</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/111278\">implement <code>From&lt;{&amp;,&amp;mut} [T; N]&gt;</code> for <code>Vec&lt;T&gt;</code> where <code>T: Clone</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115546\">weaken needlessly restrictive orderings on <code>Arc::*_count</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12723\">cargo: add better suggestion for the unsupported silent flag</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12748\">cargo: add missing <code>strip</code> entries in <code>dev</code> and <code>release</code> profiles</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12744\">cargo: fix corruption when cargo killed while writing</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12743\">cargo: use full target spec for <code>cargo rustc --print --target</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116195\">rustdoc: speed up processing of cross-crate fns to fix a perf regression</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11580\">clippy: <code>manual_let_else</code>: only omit block if span is from same ctxt</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11565\">clippy: <code>mir_to_const</code> improvements</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11576\">clippy: <code>write_literal</code>: Fix index of the remaining positional arguments</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11556\">clippy: add <code>manual_hash_one</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11587\">clippy: add lint: <code>into_iter_without_iter</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11527\">clippy: add lint: <code>iter_without_into_iter</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11569\">clippy: describe the type of string in <code>raw_strings</code> lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/10300\">clippy: do not lint <code>wildcard_imports</code> when imported item contains underscore</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11265\">clippy: don't escape unicode escape braces in <code>print_literal</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11590\">clippy: don't lint <code>manual_non_exhaustive</code> when <code>enum</code> is <code>#[non_exhaustive]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11574\">clippy: mention that <code>missing_assert_message</code> lint ignores test functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11596\">clippy: move <code>needless_pass_by_ref_mut: suspicious</code> → <code>nursery</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11415\">clippy: move <code>needless_raw_string_hashes</code> to <code>pedantic</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15698\">rust-analyzer: allow more kinds of if let patterns in guarded return assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15693\">rust-analyzer: downgrade <code>unused_variables</code> to experimental</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15667\">rust-analyzer: make <code>bool_to_enum</code> assist create <code>enum</code> at top-level</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15688\">rust-analyzer: make <code>rustc_layout_scalar_valid_range</code> attributes work for non-decimal literals</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15662\">rust-analyzer: panic with wrapping/unwrapping result return type assists</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15682\">rust-analyzer: recover better on missing parameter in param list</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15701\">rust-analyzer: strip base prefix in <code>layout_scalar_valid_range</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15692\">rust-analyzer: typing underscore should not trigger completions in types or patterns</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15633\">rust-analyzer: scip: allow customizing cargo config</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A week completely free of pure regressions! The compiler has definitely come out of this week a decent amount faster and less memory hungry than before with the large gain coming from building the compiler with a single CGU on x64 Linux. This not only allows LLVM to do more optimizations across the entire compiler, but should hopefully also result in less non-deterministic performance regressions in the future. This improvement largely comes only at the expense of a few more minutes spent when bootstrapping the compiler.</p>\n<p>Triage done by <strong>@rylev</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=27b4eb96d13106332d511be2ea6d0c008a57aa6e&amp;end=9998f4add08c3d09c82e00975cf3a293b30160ec&amp;absolute=false&amp;stat=instructions%3Au\">27b4eb..9998f4</a></p>\n<p><strong>Summary</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">(instructions:u)</th>\n<th align=\"center\">mean</th>\n<th align=\"center\">range</th>\n<th align=\"center\">count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (primary)</td>\n<td align=\"center\">1.0%</td>\n<td align=\"center\">[0.3%, 6.1%]</td>\n<td align=\"center\">41</td>\n</tr>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (secondary)</td>\n<td align=\"center\">2.0%</td>\n<td align=\"center\">[0.9%, 7.8%]</td>\n<td align=\"center\">21</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (primary)</td>\n<td align=\"center\">-1.3%</td>\n<td align=\"center\">[-5.1%, -0.2%]</td>\n<td align=\"center\">134</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (secondary)</td>\n<td align=\"center\">-1.8%</td>\n<td align=\"center\">[-6.9%, -0.2%]</td>\n<td align=\"center\">175</td>\n</tr>\n<tr>\n<td align=\"center\">All ❌✅ (primary)</td>\n<td align=\"center\">-0.8%</td>\n<td align=\"center\">[-5.1%, 6.1%]</td>\n<td align=\"center\">175</td>\n</tr>\n</tbody>\n</table>\n<p>0 Regressions, 2 Improvements, 4 Mixed; 0 of them in rollups\n74 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-10-03.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><em>No RFCs were approved this week.</em></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3491\">RFC: Remove implicit features in a new edition</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3453\">Add <code>f16</code> and <code>f128</code> float types</a></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/issues/96283\">Tracking Issue for pointer_bytes_offsets</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115719\">Stabilize <code>atomic_from_ptr</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115577\">document when atomic loads are guaranteed read-only</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/116015\">const_eval: allow function pointer signatures containing &amp;mut T in const contexts</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115524\">const-eval: make misalignment a hard error</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115822\">Stabilize <code>async fn</code> and <code>return-position impl</code> Trait in trait</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115439\">rustdoc: hide <code>#[repr(transparent)]</code> if it isn't part of the public ABI</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/116233\">Stabilize <code>const_maybe_uninit_assume_init_read</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115108\">Fix exit status / wait status on non-Unix cfg(unix) platforms</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/114589\">impl Default for ExitCode</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/109422\">rustdoc-search: add impl disambiguator to duplicate assoc items</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115948\">rustdoc: show crate name beside smaller logo</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/85528\">Implement iterator specialization traits on more adapters</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/100806\">Fix generic bound of <code>str::SplitInclusive</code>'s <code>DoubleEndedIterator</code> impl</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115583\">fix detecting references to packed unsized fields</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3505\">Move rustdoc-types to T-Rustdoc ownership.</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3503\">RFC: Syntax for embedding cargo-script manifests</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3502\">RFC: cargo-script</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3501\">2024 Edition</a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-10-04 - 2023-11-01 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/296278202/\"><strong>Understanding the Processor (Atomics &amp; Locks Chapter 7)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/ngnwftyfcnbzb/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-24 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679778/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-31 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/mvdtgtyfcnbpc/\"><strong>Last Tuesday</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-10-11 | Kuala Lumpur, MY | <a href=\"https://t.me/golangmalaysia\">GoLang Malaysia</a><ul>\n<li><a href=\"https://forms.gle/wwJAEipFgwQtEfJB9\"><strong>Rust Meetup Malaysia October 2023</strong></a> | <a href=\"https://t.me/+dF46Fly4A_BjOTJl\">Event updates Telegram</a> | <a href=\"https://t.me/golangmalaysia\">Event group chat</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-10-04 | Lyon, FR | <a href=\"https://www.meetup.com/fr-FR/rust-lyon/\">Rust Lyon</a><ul>\n<li><a href=\"https://www.meetup.com/fr-FR/rust-lyon/events/296186641/\"><strong>Rust Lyon Meetup #6</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Brussels, BE | <a href=\"https://www.eventbrite.be/e/becode-brussels-meetup-rust-on-web-tickets-728375238947\">BeCode Brussels Meetup</a><ul>\n<li><a href=\"https://rust-on-web.glitch.me/\"><strong>Rust on Web - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Brussels, BE | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Brussels, BE | <a href=\"https://www.meetup.com/rust-aarhus\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/295673220/\"><strong>Rust Aarhus - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Helsinki, FI | <a href=\"https://www.meetup.com/finland-rust-meetup/\">Finland Rust-lang Group</a><ul>\n<li><a href=\"https://www.meetup.com/finland-rust-meetup/events/295680333/\"><strong>Helsinki Rustaceans Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Amsterdam, NL | <a href=\"https://www.meetup.com/rust-amsterdam-group/\">Rust Developers Amsterdam Group</a><ul>\n<li><a href=\"https://www.meetup.com/rust-amsterdam-group/events/296495570/\"><strong>Rust Amsterdam Meetup @ Terraform</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Wrocław, PL | <a href=\"https://www.meetup.com/rust-wroclaw/\">Rust Wrocław</a><ul>\n<li><a href=\"https://www.meetup.com/rust-wroclaw/events/296507983/\"><strong>Rust Meetup #35</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Dublin, IE | <a href=\"https://www.meetup.com/rust-dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/rust-dublin/events/295179534/\"><strong>Biome, web development tooling with Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-26 | Augsburg, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/296183126/\"><strong>Augsburg Rust Meetup #3</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-10-05 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369949/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-09 | Chicago, IL, US | <a href=\"https://www.meetup.com/deep-dish-rust/\">Deep Dish Rust</a><ul>\n<li><a href=\"https://www.meetup.com/deep-dish-rust/events/296346749/\"><strong>Rust Hack Night</strong></a></li>\n</ul>\n</li>\n<li>2023-10-09 | Minneapolis, MN, US | <a href=\"https://www.meetup.com/minneapolis-rust-meetup/\">Minneapolis Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/minneapolis-rust-meetup/events/296497475/\"><strong>Minneapolis Rust Meetup Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Brookline, MA, US | <a href=\"https://www.meetup.com/bostonrust/\">Boston Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/bostonrust/events/296223807/\"><strong>Boston University Rust Lunch</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369976/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/296254420/\"><strong>Rust Goes Where It Pleases Pt2 - Rust on the front end!</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Seattle, WA, US | <a href=\"https://www.meetup.com/seattle-rust-user-group/\">Seattle Rust User Group</a><ul>\n<li><a href=\"https://www.meetup.com/seattle-rust-user-group/events/296110729\"><strong>Seattle Rust User Group - October Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/296495790\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>I've been writing Rust code everyday for years, and I used to say Rust wasn't great for writing prototypes because if forced you to ask yourself many questions that you may want to avoid at that time.</p>\n<p>I recently realized this is all wrong: you can write Rust pretty much as fast as you can write code in any other language, with a meaningful difference: with a little discipline it's easy to make the rough edges obvious so you can sort them out later. </p>\n</blockquote>\n<p>– <a href=\"https://www.reddit.com/r/rust/comments/16yljmi/realization_rust_lets_you_comfortably_leave/\">/u/moiaussi4213 on /r/rust</a></p>\n<p>There was no suggestion this week, but llogiq is pleased with his choice nonetheless!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/1708new/this_week_in_rust_515/\">Discuss on r/rust</a></small></p>",
    "summary": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"foundation\"><a class=\"toclink\" href=\"#foundation\">Foundation</a></h3>\n<ul>\n<li><a href=\"https://foundation.rust-lang.org/news/rust-foundation-project-director-election-update/\">Rust Foundation Project Director Election Update</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-26\">Progress Report #26: rustc_codegen_gcc can now compile Rust for Linux!</a></li>\n<li><a href=\"https://github.com/leptos-rs/leptos/releases/tag/v0.5.0\">Leptos Release v0.5.0</a></li>\n<li><a href=\"https://yew.rs/blog/2023/09/23/release-0-21\">Announcing Yew 0.21</a></li>\n<li><a href=\"https://ambient.run/blog/platform\">Ambient Platform</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/ferrocene-open-source/\">Open Sourcing Ferrocene</a></li>\n<li><a href=\"https://rust-analyzer.github.io/thisweek/2023/10/02/changelog-201.html\">rust-analyzer changelog #201</a></li>\n<li><a href=\"https://zenoh.io/blog/2023-10-03-zenoh-dragonite/\">Zenoh 0.10.0, a pure Rust Pub/Sub/Query protocol for cloud-to-thing continuum, was released and it is packed with new features.</a></li>\n<li><a href=\"https://nikolaivazquez.com/blog/divan/\">Announcing Divan: Fast and Simple Benchmarking for Rust</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/29/polonius-part-2/\">Polonius revisited, part 2</a></li>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/30/profiles/\">Easing tradeoffs with profiles</a></li>\n<li><a href=\"https://blog.yoshuawuyts.com/async-iterator-trait/\">Async Iteration III: The Async Iterator Trait</a></li>\n<li><a href=\"https://blog.adamchalmers.com/rustconf-2023-recap/\">Rustconf 2023 recap</a></li>\n<li><a href=\"https://seanmonstar.com/post/66832922686/was-async-fn-a-mistake\">Was async fn a mistake?</a></li>\n<li><a href=\"https://www.shuttle.rs/blog/2023/09/27/rust-vs-go-comparison\">Rust Vs Go: A Hands-On Comparison</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=sZaAP4AS0hc\">The ultimate Rust IDE is here</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/ian-ker-sey/\">rb-sys with Ian Ker-Seymer</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/rust-1.70-1.71/\">What's New in Rust 1.70 and 1.71</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://benw.is/posts/rss-in-axum\">Create an RSS Feed in Axum or Leptos</a></li>\n<li><a href=\"https://peterprototypes.com/blog/rust-dockerfile-boilerplate/\">Rust Dockerfile Boilerplate</a></li>\n<li><a href=\"https://towardsdatascience.com/nine-rules-to-formally-validate-rust-algorithms-with-dafny-part-1-5cb8c8a0bb92\">Nine Rules to Formally Validate Rust Algorithms with Dafny (Part 1): Lessons from Verifying the range-set-blaze Crate</a></li>\n<li><a href=\"https://robertohuertas.com/2023/09/30/shuttle-datadog-logs/\">Send the logs of your Shuttle-powered backend to Datadog</a></li>\n<li><a href=\"https://hegdenu.net/posts/tracing-tokio-tasks/\">Tracing Tokio Tasks</a></li>\n<li>[series] <a href=\"https://heikoseeberger.de/2023-09-30-dist-tracing-4/\">Distributed Tracing in Rust, Episode 4: correlating logs and traces</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=wU8hQvU8aKM\">Two Ways To Do Dynamic Dispatch</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://harshil-jani.github.io/GSoC-Book-2.0/\">Writing the Matrix Bridge in Rust using matrix-rust-sdk</a></li>\n<li><a href=\"https://public-docs.ferrocene.dev/main/\">Ferrocene Open Source documentation</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://github.com/mahdi-shojaee/loole\">loole</a>, another multiple-producer multiple-consumer channel.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1243\">Mahdi Shojaee</a> for the self-suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<!-- CFPs go here, use this format: * [project name - title of issue](link to issue) -->\n<!-- * [ - ]() -->\n\n<ul>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2325\">Hyperswitch (Hacktoberfest)- Bitpay: Use connector_response_reference_id as reference to merchant</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2287\">Hyperswitch (Hacktoberfest)- Trustpay: Remove Default Case Handling</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2249\">Hyperswitch (Hacktoberfest)- Worldline: Currency Unit Conversion</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4011\">rust-libp2p - core: remove <code>upgrade::transfer</code> module</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/2591\">rust-libp2p - mdns: don't perform IO on main task</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/3395\">rust-libp2p - quic: don't support draft versions</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6060\">Ockam - Improve <code>ockam enroll</code> project configuration step by warning user not to exit process</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6125\">Ockam - Improve <code>ockam space create</code> by add missing argument <code>--identity</code> (<code>clap</code> command)</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6117\">Ockam - Improve <code>ockam enroll</code> argument <code>--identity</code> (<code>clap</code> command)</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>358 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-25..2023-10-02\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112123\">suggestion: insert projection to associated types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116340\"><code>skip_binder</code> to <code>instantiate_identity</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116176\">add \"integer square root\" method to integer primitive types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116241\">add Exclusive forwarding impls (FnOnce, FnMut, Generator)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116187\">add context to <code>let: Ty = loop { break };</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115986\">allow LTO on <code>proc-macro</code> crates with <code>-Zdylib-lto</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116149\">anonymize binders for <code>refining_impl_trait</code> check</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116254\">assorted improvements for <code>rustc_middle::mir::traversal</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115554\">build <code>rustc</code> with a single CGU on x64 Linux</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116281\">cleanup number handling in match exhaustiveness</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116125\">constParamTy: require Eq as supertrait</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116102\">correct codegen of <code>ConstValue::Indirect</code> scalar and scalar pair</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116163\">don't store lazyness in <code>DefKind::TyAlias</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116109\">don't use a thread to load the dep graph</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115819\">expose <code>try_destructure_mir_constant_for_diagnostics</code> directly to clippy</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116259\">factor out duplicated <code>entry_point_type</code> functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116201\">fix <code>noop_method_call</code> detection</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116162\">gate and validate <code>#[rustc_safe_intrinsic]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116024\">implement Region for smir</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/109597\">implement a global value numbering MIR optimization</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115893\">lint towards rejecting consts in patterns that do not implement PartialEq</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116253\">make <code>adt_const_params</code> feature suggestion consistent with other features and improve when it is emitted</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116093\">make <code>link_llvm_intrinsics</code> and <code>platform_intrinsics</code> features internal</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/102099\">mark drop calls in landing pads cold instead of noinline</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115821\">migrate <code>rustc_hir_analysis</code> to session diagnostic (Part 5)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116263\">more fixes for running the test suite on a bare metal target</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115843\">new solver: remove provisional cache</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116156\">only prevent field projections into opaque types, not types containing opaque types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116239\">only visit reachable nodes in SsaLocals</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116080\">point at more causes of expectation of break value when possible</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114453\">print GHA log groups to stdout instead of stderr</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115368\">promote loongarch64-unknown-none* to Tier 2</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116124\">properly print <code>cstr</code> literals in <code>proc_macro::Literal::to_string</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115933\">prototype using const generic for <code>simd_shuffle</code> IDX array</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116231\">remove <code>rustc_lint_defs::lint_array</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114454\">replace <code>HashMap</code> with <code>IndexMap</code> in pattern binding resolve</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116228\">resolve: skip underscore character during candidate lookup</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115759\">reveal opaque types before drop elaboration</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116030\">run abi/compatibility test against a whole bunch of targets</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116199\">simplify some of the logic in the <code>invalid_reference_casting</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116166\">skip MIR pass <code>UnreachablePropagation</code> when coverage is enabled</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115934\">split out the stable part of smir into its own crate to prevent accidental usage of forever unstable things</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115659\">stabilize <code>impl_trait_projections</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113301\">stabilize combining +bundle and +whole-archive link modifiers</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116154\">use <code>Vec::retain</code> in <code>remove_dead_blocks</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116204\">use absolute paths in <code>rustc_lint::passes</code> macros</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116072\">use placeholders to prevent using inferred RPITIT types to imply their own well-formedness</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116089\">when suggesting <code>self.x</code> for <code>S { x }</code>, use <code>S { x: self.x }</code></a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3086\">miri: implement SSE3 and SSSE3 intrinsics</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3093\">miri: implement the <code>llvm.x86.sse2.pmadd.wd</code> intrinsic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116207\">stdio support for UEFI</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/107651\">Build <code>rustc</code> with a single CGU on x64 Linux</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116224\"><code>rustc_arena</code> overhaul</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116325\">add <code>ptr::addr_eq</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116317\">add <code>track_caller</code> attribute to <code>Result::unwrap_or_else</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/98704\">implement <code>From&lt;OwnedFd/Handle&gt;</code> for <code>ChildStdin</code>/<code>out</code>/<code>err</code> object</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114041\">implement <code>From&lt;[T; N]&gt;</code> for <code>Rc&lt;[T]&gt;</code> and <code>Arc&lt;[T]&gt;</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/111278\">implement <code>From&lt;{&amp;,&amp;mut} [T; N]&gt;</code> for <code>Vec&lt;T&gt;</code> where <code>T: Clone</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115546\">weaken needlessly restrictive orderings on <code>Arc::*_count</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12723\">cargo: add better suggestion for the unsupported silent flag</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12748\">cargo: add missing <code>strip</code> entries in <code>dev</code> and <code>release</code> profiles</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12744\">cargo: fix corruption when cargo killed while writing</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12743\">cargo: use full target spec for <code>cargo rustc --print --target</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116195\">rustdoc: speed up processing of cross-crate fns to fix a perf regression</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11580\">clippy: <code>manual_let_else</code>: only omit block if span is from same ctxt</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11565\">clippy: <code>mir_to_const</code> improvements</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11576\">clippy: <code>write_literal</code>: Fix index of the remaining positional arguments</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11556\">clippy: add <code>manual_hash_one</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11587\">clippy: add lint: <code>into_iter_without_iter</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11527\">clippy: add lint: <code>iter_without_into_iter</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11569\">clippy: describe the type of string in <code>raw_strings</code> lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/10300\">clippy: do not lint <code>wildcard_imports</code> when imported item contains underscore</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11265\">clippy: don't escape unicode escape braces in <code>print_literal</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11590\">clippy: don't lint <code>manual_non_exhaustive</code> when <code>enum</code> is <code>#[non_exhaustive]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11574\">clippy: mention that <code>missing_assert_message</code> lint ignores test functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11596\">clippy: move <code>needless_pass_by_ref_mut: suspicious</code> → <code>nursery</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11415\">clippy: move <code>needless_raw_string_hashes</code> to <code>pedantic</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15698\">rust-analyzer: allow more kinds of if let patterns in guarded return assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15693\">rust-analyzer: downgrade <code>unused_variables</code> to experimental</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15667\">rust-analyzer: make <code>bool_to_enum</code> assist create <code>enum</code> at top-level</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15688\">rust-analyzer: make <code>rustc_layout_scalar_valid_range</code> attributes work for non-decimal literals</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15662\">rust-analyzer: panic with wrapping/unwrapping result return type assists</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15682\">rust-analyzer: recover better on missing parameter in param list</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15701\">rust-analyzer: strip base prefix in <code>layout_scalar_valid_range</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15692\">rust-analyzer: typing underscore should not trigger completions in types or patterns</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15633\">rust-analyzer: scip: allow customizing cargo config</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A week completely free of pure regressions! The compiler has definitely come out of this week a decent amount faster and less memory hungry than before with the large gain coming from building the compiler with a single CGU on x64 Linux. This not only allows LLVM to do more optimizations across the entire compiler, but should hopefully also result in less non-deterministic performance regressions in the future. This improvement largely comes only at the expense of a few more minutes spent when bootstrapping the compiler.</p>\n<p>Triage done by <strong>@rylev</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=27b4eb96d13106332d511be2ea6d0c008a57aa6e&amp;end=9998f4add08c3d09c82e00975cf3a293b30160ec&amp;absolute=false&amp;stat=instructions%3Au\">27b4eb..9998f4</a></p>\n<p><strong>Summary</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">(instructions:u)</th>\n<th align=\"center\">mean</th>\n<th align=\"center\">range</th>\n<th align=\"center\">count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (primary)</td>\n<td align=\"center\">1.0%</td>\n<td align=\"center\">[0.3%, 6.1%]</td>\n<td align=\"center\">41</td>\n</tr>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (secondary)</td>\n<td align=\"center\">2.0%</td>\n<td align=\"center\">[0.9%, 7.8%]</td>\n<td align=\"center\">21</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (primary)</td>\n<td align=\"center\">-1.3%</td>\n<td align=\"center\">[-5.1%, -0.2%]</td>\n<td align=\"center\">134</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (secondary)</td>\n<td align=\"center\">-1.8%</td>\n<td align=\"center\">[-6.9%, -0.2%]</td>\n<td align=\"center\">175</td>\n</tr>\n<tr>\n<td align=\"center\">All ❌✅ (primary)</td>\n<td align=\"center\">-0.8%</td>\n<td align=\"center\">[-5.1%, 6.1%]</td>\n<td align=\"center\">175</td>\n</tr>\n</tbody>\n</table>\n<p>0 Regressions, 2 Improvements, 4 Mixed; 0 of them in rollups\n74 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-10-03.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><em>No RFCs were approved this week.</em></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3491\">RFC: Remove implicit features in a new edition</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3453\">Add <code>f16</code> and <code>f128</code> float types</a></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/issues/96283\">Tracking Issue for pointer_bytes_offsets</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115719\">Stabilize <code>atomic_from_ptr</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115577\">document when atomic loads are guaranteed read-only</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/116015\">const_eval: allow function pointer signatures containing &amp;mut T in const contexts</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115524\">const-eval: make misalignment a hard error</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115822\">Stabilize <code>async fn</code> and <code>return-position impl</code> Trait in trait</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115439\">rustdoc: hide <code>#[repr(transparent)]</code> if it isn't part of the public ABI</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/116233\">Stabilize <code>const_maybe_uninit_assume_init_read</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115108\">Fix exit status / wait status on non-Unix cfg(unix) platforms</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/114589\">impl Default for ExitCode</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/109422\">rustdoc-search: add impl disambiguator to duplicate assoc items</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115948\">rustdoc: show crate name beside smaller logo</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/85528\">Implement iterator specialization traits on more adapters</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/100806\">Fix generic bound of <code>str::SplitInclusive</code>'s <code>DoubleEndedIterator</code> impl</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115583\">fix detecting references to packed unsized fields</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3505\">Move rustdoc-types to T-Rustdoc ownership.</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3503\">RFC: Syntax for embedding cargo-script manifests</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3502\">RFC: cargo-script</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3501\">2024 Edition</a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-10-04 - 2023-11-01 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/296278202/\"><strong>Understanding the Processor (Atomics &amp; Locks Chapter 7)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/ngnwftyfcnbzb/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-24 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679778/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-31 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/mvdtgtyfcnbpc/\"><strong>Last Tuesday</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-10-11 | Kuala Lumpur, MY | <a href=\"https://t.me/golangmalaysia\">GoLang Malaysia</a><ul>\n<li><a href=\"https://forms.gle/wwJAEipFgwQtEfJB9\"><strong>Rust Meetup Malaysia October 2023</strong></a> | <a href=\"https://t.me/+dF46Fly4A_BjOTJl\">Event updates Telegram</a> | <a href=\"https://t.me/golangmalaysia\">Event group chat</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-10-04 | Lyon, FR | <a href=\"https://www.meetup.com/fr-FR/rust-lyon/\">Rust Lyon</a><ul>\n<li><a href=\"https://www.meetup.com/fr-FR/rust-lyon/events/296186641/\"><strong>Rust Lyon Meetup #6</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Brussels, BE | <a href=\"https://www.eventbrite.be/e/becode-brussels-meetup-rust-on-web-tickets-728375238947\">BeCode Brussels Meetup</a><ul>\n<li><a href=\"https://rust-on-web.glitch.me/\"><strong>Rust on Web - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Brussels, BE | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Brussels, BE | <a href=\"https://www.meetup.com/rust-aarhus\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/295673220/\"><strong>Rust Aarhus - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Helsinki, FI | <a href=\"https://www.meetup.com/finland-rust-meetup/\">Finland Rust-lang Group</a><ul>\n<li><a href=\"https://www.meetup.com/finland-rust-meetup/events/295680333/\"><strong>Helsinki Rustaceans Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Amsterdam, NL | <a href=\"https://www.meetup.com/rust-amsterdam-group/\">Rust Developers Amsterdam Group</a><ul>\n<li><a href=\"https://www.meetup.com/rust-amsterdam-group/events/296495570/\"><strong>Rust Amsterdam Meetup @ Terraform</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Wrocław, PL | <a href=\"https://www.meetup.com/rust-wroclaw/\">Rust Wrocław</a><ul>\n<li><a href=\"https://www.meetup.com/rust-wroclaw/events/296507983/\"><strong>Rust Meetup #35</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Dublin, IE | <a href=\"https://www.meetup.com/rust-dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/rust-dublin/events/295179534/\"><strong>Biome, web development tooling with Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-26 | Augsburg, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/296183126/\"><strong>Augsburg Rust Meetup #3</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-10-05 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369949/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-09 | Chicago, IL, US | <a href=\"https://www.meetup.com/deep-dish-rust/\">Deep Dish Rust</a><ul>\n<li><a href=\"https://www.meetup.com/deep-dish-rust/events/296346749/\"><strong>Rust Hack Night</strong></a></li>\n</ul>\n</li>\n<li>2023-10-09 | Minneapolis, MN, US | <a href=\"https://www.meetup.com/minneapolis-rust-meetup/\">Minneapolis Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/minneapolis-rust-meetup/events/296497475/\"><strong>Minneapolis Rust Meetup Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Brookline, MA, US | <a href=\"https://www.meetup.com/bostonrust/\">Boston Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/bostonrust/events/296223807/\"><strong>Boston University Rust Lunch</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369976/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/296254420/\"><strong>Rust Goes Where It Pleases Pt2 - Rust on the front end!</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Seattle, WA, US | <a href=\"https://www.meetup.com/seattle-rust-user-group/\">Seattle Rust User Group</a><ul>\n<li><a href=\"https://www.meetup.com/seattle-rust-user-group/events/296110729\"><strong>Seattle Rust User Group - October Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/296495790\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>I've been writing Rust code everyday for years, and I used to say Rust wasn't great for writing prototypes because if forced you to ask yourself many questions that you may want to avoid at that time.</p>\n<p>I recently realized this is all wrong: you can write Rust pretty much as fast as you can write code in any other language, with a meaningful difference: with a little discipline it's easy to make the rough edges obvious so you can sort them out later. </p>\n</blockquote>\n<p>– <a href=\"https://www.reddit.com/r/rust/comments/16yljmi/realization_rust_lets_you_comfortably_leave/\">/u/moiaussi4213 on /r/rust</a></p>\n<p>There was no suggestion this week, but llogiq is pleased with his choice nonetheless!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/1708new/this_week_in_rust_515/\">Discuss on r/rust</a></small></p>",
    "content": null,
    "pub_date": "2023-10-04T04:00:00Z",
    "upd_date": "2023-10-04T04:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:33.900Z",
    "updated": "2023-10-09T09:34:33.900Z",
    "tags": [
      72
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 71,
  "fields": {
    "feed": 23,
    "title": "This Week in Rust 514",
    "author": "TWiR Contributors",
    "url": "https://this-week-in-rust.org/blog/2023/09/27/this-week-in-rust-514/",
    "image_url": "",
    "description": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"official\"><a class=\"toclink\" href=\"#official\">Official</a></h3>\n<ul>\n<li><a href=\"https://blog.rust-lang.org/2023/09/25/Increasing-Apple-Version-Requirements.html\">Increasing the minimum supported Apple platform versions</a></li>\n<li><a href=\"https://blog.rust-lang.org/2023/09/22/crates-io-usage-policy-rfc.html\">crates.io Policy Update RFC</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://blog.meilisearch.com/v1-4-release/\">Meilisearch 1.4 - new features, including custom text separators, and user-definded dictionary</a></li>\n<li><a href=\"https://github.com/cargo-bins/cargo-binstall/releases/tag/v1.4.1\">cargo-binstall Release v1.4.1</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://sanjuvi.github.io/Blog/posts/Aws-Iam/\">Interacting with AWS IAM services using the Rust SDK and stand-alone CLI</a></li>\n<li><a href=\"https://gburghoorn.com/posts/pure-rust-wishlist/\">My Pure Rust Wishlist</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/qualifying-rust-without-forking/\">Qualifying Rust without forking</a></li>\n<li><a href=\"https://briansmith.org/why-not-rustcrypto\">Why Not Rust Crypto?</a></li>\n<li><a href=\"https://notgull.net/eyra/\">Eyra is an interesting Rust project</a></li>\n<li><a href=\"https://without.boats/blog/generic-trait-methods-and-new-auto-traits/\">Generic trait methods and new auto traits</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/rust-for-mission-critical-applications/\">Rust for Mission Critical Applications</a></li>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/22/polonius-part-1/\">Polonius revisited, part 1</a></li>\n<li><a href=\"https://security.googleblog.com/2023/09/scaling-rust-adoption-through-training.html\">Scaling Rust Adoption Through Training</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://ariel-miculas.github.io/Hello-Rust/\">Hello, Rust!</a></li>\n<li><a href=\"https://itnext.io/rust-the-joy-of-safe-zero-copy-parsers-8c8581db8ab2\">Rust: The joy of safe zero-copy parsers</a></li>\n<li><a href=\"https://blog.timhutt.co.uk/cross-compiling-rust/\">Cross-compiling Rust on Github Actions</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=E9SzRc9HkOg\">Build Your First Game in Bevy and Rust</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=Oq-3bOBrpeo\"><code>no_std: ?no_problem</code></a></li>\n</ul>\n<h3 id=\"research\"><a class=\"toclink\" href=\"#research\">Research</a></h3>\n<ul>\n<li><a href=\"https://cmu.ca1.qualtrics.com/jfe/form/SV_0k7naTSSk8jaaGi\">How do Rust developers use unsafe? - Survey</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://blog.logrocket.com/using-kani-write-validate-rust-code-chatgpt/\">Using Kani to write and validate Rust code with ChatGPT</a></li>\n<li><a href=\"https://www.shuttle.rs/blog/2023/09/20/logging-in-rust\">Logging in Rust - How to Get Started</a></li>\n<li><a href=\"https://www.justanotherdot.com/posts/profiling-with-perf-and-dhat-on-rust-code-in-linux.html\">Profiling with perf and DHAT on Rust code in Linux</a></li>\n<li><a href=\"https://kobzol.github.io/rust/rustc/2023/09/23/rustc-runtime-benchmarks.html\">Adding runtime benchmarks to the Rust compiler benchmark suite</a></li>\n<li><a href=\"https://apollolabsblog.hashnode.dev/esp-embedded-rust-multithreading-with-freertos-bindings\">ESP Embedded Rust: Multithreading with FreeRTOS Bindings</a></li>\n<li><a href=\"https://andreabergia.com/blog/2023/09/a-jvm-in-rust-part-6-methods-and-exceptions/\">A JVM in Rust part 6 - Methods and exceptions</a></li>\n<li>[audio] <a href=\"https://ieni.dev/2023/09/%EF%B8%8F-atuin-shell-history-sync-search-and-backup-ellie-huxtable-rustship-3/\">RustShip: Atuin - Shell history sync, search and backup with Ellie Huxtable</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://docs.rs/async_fn_traits\">async_fn_traits</a>, a crate with async function traits to enable using higher ranked trait bounds in async functions.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1239\">kornel</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<!-- CFPs go here, use this format: * [project name - title of issue](link to issue) -->\n<!-- * [ - ]() -->\n<ul>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2373\">Hyperswitch - add multiple insert and delete functionality for in-memory cache</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2377\">Hyperswitch - add metrics to cache invalidation miss</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/888\">Hyperswitch - separate payments_session from payments core</a></li>\n<li><a href=\"https://github.com/nix-rust/nix/issues/2132\">nix-rust - next generation maintainers</a></li>\n<li><a href=\"https://github.com/deepcausality-rs/deep_causality/issues/104\">DeepCausality - Increase Test Coverage</a></li>\n<li><a href=\"https://github.com/deepcausality-rs/sites/issues/71\">DeepCausality - Polish documentation</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4484\">rust-libp2p - replace <code>custom-clippy</code> alias with workspace-wide <code>[lints]</code> configuration</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4449\">rust-libp2p - Prefer tokio runtime everywhere</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4345\">rust-libp2p - misc: make <code>RwStreamSink</code> an implementation detail of the memory transport</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/623\">time - Missing panic condition on API docs</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/308\">time - Add comparison to chrono to the docs</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/327\">time - The Book is hardly readable</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6064\">Ockam - <code>ockam status</code> clap command should provide more user friendly information when a user is <em>not</em> enrolled</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6063\">Ockam - <code>ockam status</code> clap command should provide more user friendly information when a user is enrolled</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6055\">Ockam - Improve <code>ockam enroll ----help</code> clap command text by adding doc comment for <code>verbose</code> flag</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>402 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-18..2023-09-25\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116001\"><em>breaking change</em>: Validate crate name in <code>--extern</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115230\">add support for GNU/Hurd</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115644\">enable ASAN/LSAN/TSAN for *-apple-ios-macabi</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/104385\">raise minimum supported Apple OS versions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115987\"><code>rustc_target/loongarch</code>: Fix passing of transparent unions with only one non-ZST member</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115499\"><code>rustc_target/riscv</code>: Fix passing of transparent unions with only one non-ZST member</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115897\"><code>rustc_hir_analysis</code>: add a helper to check function the signature mismatches</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116039\">account for nested <code>impl Trait</code> in TAIT</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/105861\">add minimal std implementation for UEFI</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115911\">add OwnedTargetMachine to manage llvm:TargetMachine</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116076\">add Zba, Zbb, and Zbs as target features for riscv64-linux-android</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/104101\">add initial libstd support for Xous</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115870\">adjust <code>ConstValue::Slice</code> to work for arbitrary slice types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115696\">adjust how closure/generator types are printed</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115690\">allow <code>-Z treat-err-as-bug=0</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115990\">allow anyone to set llvm-fixed-upstream</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116073\">allow higher-ranked fn sigs in <code>ValuePairs</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115999\">capture scrutinee of if let guards correctly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116081\">check that closure/generator's interior/capture types are sized</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114379\">command: also print removed env vars</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115486\">correctly deny late-bound lifetimes from parent in anon consts and TAITs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114399\">coverage: don't bother renumbering expressions on the Rust side</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115930\">coverage: fix an unstable-sort inconsistency in coverage spans</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115962\">coverage: remove debug code from the instrumentor</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115975\">dependencies: reduce the amount of crates pulling in atty</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115801\">detect cycle errors hidden by opaques during monomorphization</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116045\">diagnostics: avoid mismatch between variance index and hir generic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115794\">do not create a DerefLen place for <code>Box&lt;[T]&gt;</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113396\">don't ICE when no bound vars found while doing closure hir type check</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115924\">don't complain on a single non-exhaustive 1-ZST</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115627\">don't modify libstd to dump rustc ICEs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114941\">don't resolve generic impls that may be shadowed by dyn built-in impls</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/107421\">enable -Zdrop-tracking-mir by default</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114776\">enable effects for libcore</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116038\">fall back to <code>_SC_NPROCESSORS_ONLN</code> if <code>sched_getaffinity</code> returns an empty mask</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115549\">fall back to the unoptimized implementation in <code>read_binary_file</code> if <code>File::metadata</code> lies</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116009\">fix <code>ui-fulldeps --stage=1</code> with <code>-Zignore-directory-in-diagnostics-source-blocks</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115983\">fix confusing let chain indentation in <code>rustc_resolve</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116069\">fix debug printing of tuple</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116049\">give FutureIncompatibilityReason variants more explicit names</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112711\">implement <code>Literal::byte_character</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115996\">implement <code>intercrate_ambiguity_causes</code> in the new solver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115257\">improve invalid UTF-8 lint by finding the expression initializer</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116010\">interpret: more consistently use ImmTy in operators and casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116056\">make unsized casts illegal</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115770\">match on elem first while building move paths</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116086\">more accurate suggestion for <code>self.</code> and <code>Self:</code>:</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115920\">move <code>DepKind</code> to <code>rustc_query_system</code> and define it as <code>u16</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115704\">pass name of object file to LLVM so it can correctly emit <code>S_OBJNAME</code> in pdb files on Windows</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116071\">point at cause of expectation of <code>break</code> value when possible</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115936\">prevent promotion of const fn calls in inline consts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115864\">suggest desugaring to return-position <code>impl Future</code> when an <code>async fn</code> in trait fails an auto trait bound</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116082\">tweak expected message to explain what it's actually signifying</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3083\">miri: GC the Stacked Borrows allocation history</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3071\">miri: deprecate -Zmiri-disable-abi-check</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3072\">miri: implement <code>llvm.ctpop.v*</code> intrinsics</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3054\">miri: issue discovered in TB: spurious reads are not (yet) possible in a concurrent setting</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3075\">miri: move <code>llvm.x86.*</code> shims into <code>shims::x86</code> and implement <code>_addcarry_u32</code> and <code>_subborrow_u{32,64}</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116067\">open the FileEncoder file for reading and writing</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115542\">simplify/Optimize FileEncoder</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116070\">avoid overflow in <code>IoSlice::advance_slices</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116007\">call <code>panic_display</code> directly in <code>const_panic_fmt</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114443\">implement <code>cstr_count_bytes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115946\">panic when encountering an illegal cpumask in <code>thread::available_parallelism</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115416\">add the <code>cfg_match!</code> macro</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12638\">cargo: add some enhancements to <code>cargo clean</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12693\">cargo: better suggestion for redundant mode in build and install commands</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12727\">cargo: buffer console status messages</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12702\">cargo: cargo add displays either feature list or summarized count</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12712\">cargo: doc: mention unstable flag <code>-Z asymmetric-token</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12726\">cargo: fix spurious errors with networking tests</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12688\">cargo: fix: copy PDBs for EFI targets</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12709\">cargo: fix: use channel-specific link for registry auth error</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12713\">cargo: infra: add auto-trigger rules for new labels</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12732\">cargo: more specific registry index not found msg</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12678\">cargo: shortest path</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112725\">rustdoc-search: add support for type parameters</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116084\">rustdoc: correctly render the return type of cross-crate async fns</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115947\">rustdoc: custom code classes in docs warning</a></li>\n<li><a href=\"https://github.com/rust-lang/rustfmt/pull/5913\">rustfmt: bugfix/comment duplication</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11522\">clippy: <code>redundant_guards</code>: lint if the pattern is on the left side</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11170\">clippy: change defaults of <code>accept-comment-above-statement</code> and <code>accept-comment-above-attributes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11518\">clippy: fix false positive with <code>needless_raw_string_hashes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11516\">clippy: fix <code>cast_lossless</code> with macro call</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11492\">clippy: fix mutably used async function argument in closure for <code>needless_pass_by_ref_mut</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11551\">clippy: fixed  caused by moving &amp;mut reference inside of a closure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11552\">clippy: prevent ice when threshold is 0 and <code>enum</code> has no variants</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11544\">clippy: remove most usage of <code>hir_ty_to_ty</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15659\">rust-analyzer: add <code>unused_variables</code> native diagnostic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15582\">rust-analyzer: add option to show full function signatures in completion docs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15594\">rust-analyzer: deunwrap <code>add_missing_match_arms</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15635\">rust-analyzer: do not resolve inlayHint.textEdit for VSCode client</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15484\">rust-analyzer: bool to <code>enum</code> assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15587\">rust-analyzer: fix autoimport does nothing when importing trait that is as <code>_</code> imports</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15651\">rust-analyzer: fix inlining closures from local variables and functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15621\">rust-analyzer: give <code>unmerge_use</code> a label explaining what it will affect</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A very quiet week with the only large change in performance being improvements brought on by @saethlin's work on cleaning up the <code>FileEncoder</code> used in various places like <code>rustc_metadata</code> and <code>rustc_serialize</code>.</p>\n<p>Triage done by <strong>@rylev</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=af78bae565e85b9c5698ee909af0652674eca6d4&amp;end=27b4eb96d13106332d511be2ea6d0c008a57aa6e&amp;absolute=false&amp;stat=instructions%3Au\">af78bae..27b4eb9</a></p>\n<p><strong>Summary</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">(instructions:u)</th>\n<th align=\"center\">mean</th>\n<th align=\"center\">range</th>\n<th align=\"center\">count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (primary)</td>\n<td align=\"center\">0.6%</td>\n<td align=\"center\">[0.3%, 1.1%]</td>\n<td align=\"center\">15</td>\n</tr>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (secondary)</td>\n<td align=\"center\">2.0%</td>\n<td align=\"center\">[0.2%, 7.1%]</td>\n<td align=\"center\">32</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (primary)</td>\n<td align=\"center\">-0.7%</td>\n<td align=\"center\">[-1.3%, -0.3%]</td>\n<td align=\"center\">70</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (secondary)</td>\n<td align=\"center\">-0.9%</td>\n<td align=\"center\">[-3.5%, -0.2%]</td>\n<td align=\"center\">31</td>\n</tr>\n<tr>\n<td align=\"center\">All ❌✅ (primary)</td>\n<td align=\"center\">-0.4%</td>\n<td align=\"center\">[-1.3%, 1.1%]</td>\n<td align=\"center\">85</td>\n</tr>\n</tbody>\n</table>\n<p>2 Regressions, 3 Improvements, 4 Mixed; 0 of them in rollups\n73 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-09-26.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3495\">Add Zulip notifications for cargo and crates-io</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3477\">Cargo Check T-lang Policy</a></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li><em>No RFCs entered Final Comment Period this week.</em></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/112875\">Rework negative coherence to properly consider impls that only partly overlap</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3498\">Lifetime Capture Rules 2024</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3496\">RFC: <code>typed-context-injection</code></a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3493\">RFC: Precise Pre-release <code>cargo update</code></a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-09-27 - 2023-10-25 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-10-03 | Virtual (Buffalo, NY, US) | <a href=\"https://www.meetup.com/buffalo-rust-meetup/\">Buffalo Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/buffalo-rust-meetup/events/295919493/\"><strong>Buffalo Rust User Group, First Tuesdays</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/296278202/\"><strong>Understanding the Processor (Atomics &amp; Locks Chapter 7)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/ngnwftyfcnbzb/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-24 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679778/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-10-03 | Taipei, TW | <a href=\"https://www.meetup.com/wasm-rust-meetup/\">WebAssembly and Rust Meetup (Wasm Empowering AI)</a><ul>\n<li><a href=\"https://www.meetup.com/wasm-rust-meetup/events/295672575/\"><strong>WebAssembly Meetup (Wasm Empowering AI) in Taipei</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-09-28 | Berlin, DE | <a href=\"https://www.meetup.com/react-berlin-meetup/\">React Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/react-berlin-meetup/events/295382108/\"><strong>React Berlin September Meetup: Creating Videos with React &amp; Remotion &amp; More: Integrating Rust with React Native – Gheorghe Pinzaru</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Madrid, ES | <a href=\"https://www.meetup.com/madrust/\">MadRust</a><ul>\n<li><a href=\"https://www.meetup.com/madrust/events/296063394/\"><strong>Primer evento Post COVID: ¡Cervezas MadRust!</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Paris, FR | <a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\">Paris Scala User Group (PSUG)</a><ul>\n<li><a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\"><strong>PSUG #114 Comparons Scala et Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Vienna, AT | <a href=\"https://www.meetup.com/rust-vienna/\">Rust Vienna</a><ul>\n<li><a href=\"https://www.meetup.com/rust-vienna/events/296254546/\"><strong>Rust Dojo 2</strong></a></li>\n</ul>\n</li>\n<li>2023-09-30 | Saint Petersburg, RU | <a href=\"https://t.me/ruRust_spb\">Rust Saint Petersburg meetups</a><ul>\n<li><a href=\"https://rurust-saint-petersburg-m.timepad.ru/event/2561864/\"><strong>Rust Community Meetup: A tale about how I tried to make my Blitz Basic - Vitaly; How to use nix to build projects on Rust – Danil; Getting to know tower middleware. General overview – Mikhail</strong></a> </li>\n</ul>\n</li>\n<li>2023-10-04 | Lyon, FR | <a href=\"https://www.meetup.com/fr-FR/rust-lyon/\">Rust Lyon</a><ul>\n<li><a href=\"https://www.meetup.com/fr-FR/rust-lyon/events/296186641/\"><strong>Rust Lyon Meetup #6</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Brussels, BE | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Brussels, BE | <a href=\"https://www.meetup.com/rust-aarhus\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/295673220/\"><strong>Rust Aarhus - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Helsinki, FI | <a href=\"https://www.meetup.com/finland-rust-meetup/\">Finland Rust-lang Group</a><ul>\n<li><a href=\"https://www.meetup.com/finland-rust-meetup/events/295680333/\"><strong>Helsinki Rustaceans Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Dublin, IE | <a href=\"https://www.meetup.com/rust-dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/rust-dublin/events/295179534/\"><strong>Biome, web development tooling with Rust</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-09-27 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/295466314\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Boulder, CO, US | <a href=\"https://www.meetup.com/solidstatedepot/\">Solid State Depot - The Boulder Makerspace</a><ul>\n<li><a href=\"https://www.meetup.com/solidstatedepot/events/295466122/\"><strong>Rust and ROS for Robotics + Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369949/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369976/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/296254420/\"><strong>Rust Meetup : Getting to Know search other</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Seattle, WA, US | <a href=\"https://www.meetup.com/seattle-rust-user-group/\">Seattle Rust User Group</a><ul>\n<li><a href=\"https://www.meetup.com/seattle-rust-user-group/events/296110729\"><strong>Seattle Rust User Group - October Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oceania\"><a class=\"toclink\" href=\"#oceania\">Oceania</a></h3>\n<ul>\n<li>2023-09-28 | Brisbane, QLD, AU | <a href=\"https://www.meetup.com/rust-brisbane/\">Rust Brisbane</a><ul>\n<li><a href=\"https://www.meetup.com/rust-brisbane/events/295946587/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>The problem with Rust it appears,<br />\nthat it leaves programmers in tears<br />\nif they have to go back<br />\nto languages that lack<br />\nin short they've got feature-arrears.</p>\n</blockquote>\n<p>– <a href=\"https://www.reddit.com/r/rust/comments/16mv8bb/comment/k1buhp0/\">llogiq on /r/rust</a></p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328/1468\">Frank Steffahn</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/16u2kba/this_week_in_rust_514/\">Discuss on r/rust</a></small></p>",
    "summary": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"official\"><a class=\"toclink\" href=\"#official\">Official</a></h3>\n<ul>\n<li><a href=\"https://blog.rust-lang.org/2023/09/25/Increasing-Apple-Version-Requirements.html\">Increasing the minimum supported Apple platform versions</a></li>\n<li><a href=\"https://blog.rust-lang.org/2023/09/22/crates-io-usage-policy-rfc.html\">crates.io Policy Update RFC</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://blog.meilisearch.com/v1-4-release/\">Meilisearch 1.4 - new features, including custom text separators, and user-definded dictionary</a></li>\n<li><a href=\"https://github.com/cargo-bins/cargo-binstall/releases/tag/v1.4.1\">cargo-binstall Release v1.4.1</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://sanjuvi.github.io/Blog/posts/Aws-Iam/\">Interacting with AWS IAM services using the Rust SDK and stand-alone CLI</a></li>\n<li><a href=\"https://gburghoorn.com/posts/pure-rust-wishlist/\">My Pure Rust Wishlist</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/qualifying-rust-without-forking/\">Qualifying Rust without forking</a></li>\n<li><a href=\"https://briansmith.org/why-not-rustcrypto\">Why Not Rust Crypto?</a></li>\n<li><a href=\"https://notgull.net/eyra/\">Eyra is an interesting Rust project</a></li>\n<li><a href=\"https://without.boats/blog/generic-trait-methods-and-new-auto-traits/\">Generic trait methods and new auto traits</a></li>\n<li><a href=\"https://ferrous-systems.com/blog/rust-for-mission-critical-applications/\">Rust for Mission Critical Applications</a></li>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/22/polonius-part-1/\">Polonius revisited, part 1</a></li>\n<li><a href=\"https://security.googleblog.com/2023/09/scaling-rust-adoption-through-training.html\">Scaling Rust Adoption Through Training</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://ariel-miculas.github.io/Hello-Rust/\">Hello, Rust!</a></li>\n<li><a href=\"https://itnext.io/rust-the-joy-of-safe-zero-copy-parsers-8c8581db8ab2\">Rust: The joy of safe zero-copy parsers</a></li>\n<li><a href=\"https://blog.timhutt.co.uk/cross-compiling-rust/\">Cross-compiling Rust on Github Actions</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=E9SzRc9HkOg\">Build Your First Game in Bevy and Rust</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=Oq-3bOBrpeo\"><code>no_std: ?no_problem</code></a></li>\n</ul>\n<h3 id=\"research\"><a class=\"toclink\" href=\"#research\">Research</a></h3>\n<ul>\n<li><a href=\"https://cmu.ca1.qualtrics.com/jfe/form/SV_0k7naTSSk8jaaGi\">How do Rust developers use unsafe? - Survey</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://blog.logrocket.com/using-kani-write-validate-rust-code-chatgpt/\">Using Kani to write and validate Rust code with ChatGPT</a></li>\n<li><a href=\"https://www.shuttle.rs/blog/2023/09/20/logging-in-rust\">Logging in Rust - How to Get Started</a></li>\n<li><a href=\"https://www.justanotherdot.com/posts/profiling-with-perf-and-dhat-on-rust-code-in-linux.html\">Profiling with perf and DHAT on Rust code in Linux</a></li>\n<li><a href=\"https://kobzol.github.io/rust/rustc/2023/09/23/rustc-runtime-benchmarks.html\">Adding runtime benchmarks to the Rust compiler benchmark suite</a></li>\n<li><a href=\"https://apollolabsblog.hashnode.dev/esp-embedded-rust-multithreading-with-freertos-bindings\">ESP Embedded Rust: Multithreading with FreeRTOS Bindings</a></li>\n<li><a href=\"https://andreabergia.com/blog/2023/09/a-jvm-in-rust-part-6-methods-and-exceptions/\">A JVM in Rust part 6 - Methods and exceptions</a></li>\n<li>[audio] <a href=\"https://ieni.dev/2023/09/%EF%B8%8F-atuin-shell-history-sync-search-and-backup-ellie-huxtable-rustship-3/\">RustShip: Atuin - Shell history sync, search and backup with Ellie Huxtable</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://docs.rs/async_fn_traits\">async_fn_traits</a>, a crate with async function traits to enable using higher ranked trait bounds in async functions.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1239\">kornel</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<!-- CFPs go here, use this format: * [project name - title of issue](link to issue) -->\n<!-- * [ - ]() -->\n<ul>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2373\">Hyperswitch - add multiple insert and delete functionality for in-memory cache</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/2377\">Hyperswitch - add metrics to cache invalidation miss</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/888\">Hyperswitch - separate payments_session from payments core</a></li>\n<li><a href=\"https://github.com/nix-rust/nix/issues/2132\">nix-rust - next generation maintainers</a></li>\n<li><a href=\"https://github.com/deepcausality-rs/deep_causality/issues/104\">DeepCausality - Increase Test Coverage</a></li>\n<li><a href=\"https://github.com/deepcausality-rs/sites/issues/71\">DeepCausality - Polish documentation</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4484\">rust-libp2p - replace <code>custom-clippy</code> alias with workspace-wide <code>[lints]</code> configuration</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4449\">rust-libp2p - Prefer tokio runtime everywhere</a></li>\n<li><a href=\"https://github.com/libp2p/rust-libp2p/issues/4345\">rust-libp2p - misc: make <code>RwStreamSink</code> an implementation detail of the memory transport</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/623\">time - Missing panic condition on API docs</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/308\">time - Add comparison to chrono to the docs</a></li>\n<li><a href=\"https://github.com/time-rs/time/issues/327\">time - The Book is hardly readable</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6064\">Ockam - <code>ockam status</code> clap command should provide more user friendly information when a user is <em>not</em> enrolled</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6063\">Ockam - <code>ockam status</code> clap command should provide more user friendly information when a user is enrolled</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/6055\">Ockam - Improve <code>ockam enroll ----help</code> clap command text by adding doc comment for <code>verbose</code> flag</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>402 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-18..2023-09-25\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116001\"><em>breaking change</em>: Validate crate name in <code>--extern</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115230\">add support for GNU/Hurd</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115644\">enable ASAN/LSAN/TSAN for *-apple-ios-macabi</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/104385\">raise minimum supported Apple OS versions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115987\"><code>rustc_target/loongarch</code>: Fix passing of transparent unions with only one non-ZST member</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115499\"><code>rustc_target/riscv</code>: Fix passing of transparent unions with only one non-ZST member</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115897\"><code>rustc_hir_analysis</code>: add a helper to check function the signature mismatches</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116039\">account for nested <code>impl Trait</code> in TAIT</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/105861\">add minimal std implementation for UEFI</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115911\">add OwnedTargetMachine to manage llvm:TargetMachine</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116076\">add Zba, Zbb, and Zbs as target features for riscv64-linux-android</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/104101\">add initial libstd support for Xous</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115870\">adjust <code>ConstValue::Slice</code> to work for arbitrary slice types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115696\">adjust how closure/generator types are printed</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115690\">allow <code>-Z treat-err-as-bug=0</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115990\">allow anyone to set llvm-fixed-upstream</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116073\">allow higher-ranked fn sigs in <code>ValuePairs</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115999\">capture scrutinee of if let guards correctly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116081\">check that closure/generator's interior/capture types are sized</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114379\">command: also print removed env vars</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115486\">correctly deny late-bound lifetimes from parent in anon consts and TAITs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114399\">coverage: don't bother renumbering expressions on the Rust side</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115930\">coverage: fix an unstable-sort inconsistency in coverage spans</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115962\">coverage: remove debug code from the instrumentor</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115975\">dependencies: reduce the amount of crates pulling in atty</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115801\">detect cycle errors hidden by opaques during monomorphization</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116045\">diagnostics: avoid mismatch between variance index and hir generic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115794\">do not create a DerefLen place for <code>Box&lt;[T]&gt;</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113396\">don't ICE when no bound vars found while doing closure hir type check</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115924\">don't complain on a single non-exhaustive 1-ZST</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115627\">don't modify libstd to dump rustc ICEs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114941\">don't resolve generic impls that may be shadowed by dyn built-in impls</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/107421\">enable -Zdrop-tracking-mir by default</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114776\">enable effects for libcore</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116038\">fall back to <code>_SC_NPROCESSORS_ONLN</code> if <code>sched_getaffinity</code> returns an empty mask</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115549\">fall back to the unoptimized implementation in <code>read_binary_file</code> if <code>File::metadata</code> lies</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116009\">fix <code>ui-fulldeps --stage=1</code> with <code>-Zignore-directory-in-diagnostics-source-blocks</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115983\">fix confusing let chain indentation in <code>rustc_resolve</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116069\">fix debug printing of tuple</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116049\">give FutureIncompatibilityReason variants more explicit names</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112711\">implement <code>Literal::byte_character</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115996\">implement <code>intercrate_ambiguity_causes</code> in the new solver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115257\">improve invalid UTF-8 lint by finding the expression initializer</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116010\">interpret: more consistently use ImmTy in operators and casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116056\">make unsized casts illegal</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115770\">match on elem first while building move paths</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116086\">more accurate suggestion for <code>self.</code> and <code>Self:</code>:</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115920\">move <code>DepKind</code> to <code>rustc_query_system</code> and define it as <code>u16</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115704\">pass name of object file to LLVM so it can correctly emit <code>S_OBJNAME</code> in pdb files on Windows</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116071\">point at cause of expectation of <code>break</code> value when possible</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115936\">prevent promotion of const fn calls in inline consts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115864\">suggest desugaring to return-position <code>impl Future</code> when an <code>async fn</code> in trait fails an auto trait bound</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116082\">tweak expected message to explain what it's actually signifying</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3083\">miri: GC the Stacked Borrows allocation history</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3071\">miri: deprecate -Zmiri-disable-abi-check</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3072\">miri: implement <code>llvm.ctpop.v*</code> intrinsics</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3054\">miri: issue discovered in TB: spurious reads are not (yet) possible in a concurrent setting</a></li>\n<li><a href=\"https://github.com/rust-lang/miri/pull/3075\">miri: move <code>llvm.x86.*</code> shims into <code>shims::x86</code> and implement <code>_addcarry_u32</code> and <code>_subborrow_u{32,64}</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116067\">open the FileEncoder file for reading and writing</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115542\">simplify/Optimize FileEncoder</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116070\">avoid overflow in <code>IoSlice::advance_slices</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116007\">call <code>panic_display</code> directly in <code>const_panic_fmt</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114443\">implement <code>cstr_count_bytes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115946\">panic when encountering an illegal cpumask in <code>thread::available_parallelism</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115416\">add the <code>cfg_match!</code> macro</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12638\">cargo: add some enhancements to <code>cargo clean</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12693\">cargo: better suggestion for redundant mode in build and install commands</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12727\">cargo: buffer console status messages</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12702\">cargo: cargo add displays either feature list or summarized count</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12712\">cargo: doc: mention unstable flag <code>-Z asymmetric-token</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12726\">cargo: fix spurious errors with networking tests</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12688\">cargo: fix: copy PDBs for EFI targets</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12709\">cargo: fix: use channel-specific link for registry auth error</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12713\">cargo: infra: add auto-trigger rules for new labels</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12732\">cargo: more specific registry index not found msg</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12678\">cargo: shortest path</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112725\">rustdoc-search: add support for type parameters</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/116084\">rustdoc: correctly render the return type of cross-crate async fns</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115947\">rustdoc: custom code classes in docs warning</a></li>\n<li><a href=\"https://github.com/rust-lang/rustfmt/pull/5913\">rustfmt: bugfix/comment duplication</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11522\">clippy: <code>redundant_guards</code>: lint if the pattern is on the left side</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11170\">clippy: change defaults of <code>accept-comment-above-statement</code> and <code>accept-comment-above-attributes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11518\">clippy: fix false positive with <code>needless_raw_string_hashes</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11516\">clippy: fix <code>cast_lossless</code> with macro call</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11492\">clippy: fix mutably used async function argument in closure for <code>needless_pass_by_ref_mut</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11551\">clippy: fixed  caused by moving &amp;mut reference inside of a closure</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11552\">clippy: prevent ice when threshold is 0 and <code>enum</code> has no variants</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11544\">clippy: remove most usage of <code>hir_ty_to_ty</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15659\">rust-analyzer: add <code>unused_variables</code> native diagnostic</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15582\">rust-analyzer: add option to show full function signatures in completion docs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15594\">rust-analyzer: deunwrap <code>add_missing_match_arms</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15635\">rust-analyzer: do not resolve inlayHint.textEdit for VSCode client</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15484\">rust-analyzer: bool to <code>enum</code> assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15587\">rust-analyzer: fix autoimport does nothing when importing trait that is as <code>_</code> imports</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15651\">rust-analyzer: fix inlining closures from local variables and functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15621\">rust-analyzer: give <code>unmerge_use</code> a label explaining what it will affect</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A very quiet week with the only large change in performance being improvements brought on by @saethlin's work on cleaning up the <code>FileEncoder</code> used in various places like <code>rustc_metadata</code> and <code>rustc_serialize</code>.</p>\n<p>Triage done by <strong>@rylev</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=af78bae565e85b9c5698ee909af0652674eca6d4&amp;end=27b4eb96d13106332d511be2ea6d0c008a57aa6e&amp;absolute=false&amp;stat=instructions%3Au\">af78bae..27b4eb9</a></p>\n<p><strong>Summary</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">(instructions:u)</th>\n<th align=\"center\">mean</th>\n<th align=\"center\">range</th>\n<th align=\"center\">count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (primary)</td>\n<td align=\"center\">0.6%</td>\n<td align=\"center\">[0.3%, 1.1%]</td>\n<td align=\"center\">15</td>\n</tr>\n<tr>\n<td align=\"center\">Regressions ❌ <br /> (secondary)</td>\n<td align=\"center\">2.0%</td>\n<td align=\"center\">[0.2%, 7.1%]</td>\n<td align=\"center\">32</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (primary)</td>\n<td align=\"center\">-0.7%</td>\n<td align=\"center\">[-1.3%, -0.3%]</td>\n<td align=\"center\">70</td>\n</tr>\n<tr>\n<td align=\"center\">Improvements ✅ <br /> (secondary)</td>\n<td align=\"center\">-0.9%</td>\n<td align=\"center\">[-3.5%, -0.2%]</td>\n<td align=\"center\">31</td>\n</tr>\n<tr>\n<td align=\"center\">All ❌✅ (primary)</td>\n<td align=\"center\">-0.4%</td>\n<td align=\"center\">[-1.3%, 1.1%]</td>\n<td align=\"center\">85</td>\n</tr>\n</tbody>\n</table>\n<p>2 Regressions, 3 Improvements, 4 Mixed; 0 of them in rollups\n73 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-09-26.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3495\">Add Zulip notifications for cargo and crates-io</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/3477\">Cargo Check T-lang Policy</a></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li><em>No RFCs entered Final Comment Period this week.</em></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/112875\">Rework negative coherence to properly consider impls that only partly overlap</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3498\">Lifetime Capture Rules 2024</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3496\">RFC: <code>typed-context-injection</code></a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3493\">RFC: Precise Pre-release <code>cargo update</code></a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-09-27 - 2023-10-25 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-10-03 | Virtual (Buffalo, NY, US) | <a href=\"https://www.meetup.com/buffalo-rust-meetup/\">Buffalo Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/buffalo-rust-meetup/events/295919493/\"><strong>Buffalo Rust User Group, First Tuesdays</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/296278202/\"><strong>Understanding the Processor (Atomics &amp; Locks Chapter 7)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/ngnwftyfcnbzb/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-24 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679778/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-10-03 | Taipei, TW | <a href=\"https://www.meetup.com/wasm-rust-meetup/\">WebAssembly and Rust Meetup (Wasm Empowering AI)</a><ul>\n<li><a href=\"https://www.meetup.com/wasm-rust-meetup/events/295672575/\"><strong>WebAssembly Meetup (Wasm Empowering AI) in Taipei</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-09-28 | Berlin, DE | <a href=\"https://www.meetup.com/react-berlin-meetup/\">React Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/react-berlin-meetup/events/295382108/\"><strong>React Berlin September Meetup: Creating Videos with React &amp; Remotion &amp; More: Integrating Rust with React Native – Gheorghe Pinzaru</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Madrid, ES | <a href=\"https://www.meetup.com/madrust/\">MadRust</a><ul>\n<li><a href=\"https://www.meetup.com/madrust/events/296063394/\"><strong>Primer evento Post COVID: ¡Cervezas MadRust!</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Paris, FR | <a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\">Paris Scala User Group (PSUG)</a><ul>\n<li><a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\"><strong>PSUG #114 Comparons Scala et Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Vienna, AT | <a href=\"https://www.meetup.com/rust-vienna/\">Rust Vienna</a><ul>\n<li><a href=\"https://www.meetup.com/rust-vienna/events/296254546/\"><strong>Rust Dojo 2</strong></a></li>\n</ul>\n</li>\n<li>2023-09-30 | Saint Petersburg, RU | <a href=\"https://t.me/ruRust_spb\">Rust Saint Petersburg meetups</a><ul>\n<li><a href=\"https://rurust-saint-petersburg-m.timepad.ru/event/2561864/\"><strong>Rust Community Meetup: A tale about how I tried to make my Blitz Basic - Vitaly; How to use nix to build projects on Rust – Danil; Getting to know tower middleware. General overview – Mikhail</strong></a> </li>\n</ul>\n</li>\n<li>2023-10-04 | Lyon, FR | <a href=\"https://www.meetup.com/fr-FR/rust-lyon/\">Rust Lyon</a><ul>\n<li><a href=\"https://www.meetup.com/fr-FR/rust-lyon/events/296186641/\"><strong>Rust Lyon Meetup #6</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 - 2023-10-13 | Brussels, BE | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Brussels, BE | <a href=\"https://www.meetup.com/rust-aarhus\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/295673220/\"><strong>Rust Aarhus - EuroRust Conference</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Helsinki, FI | <a href=\"https://www.meetup.com/finland-rust-meetup/\">Finland Rust-lang Group</a><ul>\n<li><a href=\"https://www.meetup.com/finland-rust-meetup/events/295680333/\"><strong>Helsinki Rustaceans Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-10-25 | Dublin, IE | <a href=\"https://www.meetup.com/rust-dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/rust-dublin/events/295179534/\"><strong>Biome, web development tooling with Rust</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-09-27 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/295466314\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Boulder, CO, US | <a href=\"https://www.meetup.com/solidstatedepot/\">Solid State Depot - The Boulder Makerspace</a><ul>\n<li><a href=\"https://www.meetup.com/solidstatedepot/events/295466122/\"><strong>Rust and ROS for Robotics + Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369949/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/296369976/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/296254420/\"><strong>Rust Meetup : Getting to Know search other</strong></a></li>\n</ul>\n</li>\n<li>2023-10-19 | Seattle, WA, US | <a href=\"https://www.meetup.com/seattle-rust-user-group/\">Seattle Rust User Group</a><ul>\n<li><a href=\"https://www.meetup.com/seattle-rust-user-group/events/296110729\"><strong>Seattle Rust User Group - October Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oceania\"><a class=\"toclink\" href=\"#oceania\">Oceania</a></h3>\n<ul>\n<li>2023-09-28 | Brisbane, QLD, AU | <a href=\"https://www.meetup.com/rust-brisbane/\">Rust Brisbane</a><ul>\n<li><a href=\"https://www.meetup.com/rust-brisbane/events/295946587/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>The problem with Rust it appears,<br />\nthat it leaves programmers in tears<br />\nif they have to go back<br />\nto languages that lack<br />\nin short they've got feature-arrears.</p>\n</blockquote>\n<p>– <a href=\"https://www.reddit.com/r/rust/comments/16mv8bb/comment/k1buhp0/\">llogiq on /r/rust</a></p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328/1468\">Frank Steffahn</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/16u2kba/this_week_in_rust_514/\">Discuss on r/rust</a></small></p>",
    "content": null,
    "pub_date": "2023-09-27T04:00:00Z",
    "upd_date": "2023-09-27T04:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:34.076Z",
    "updated": "2023-10-09T09:34:34.076Z",
    "tags": [
      72
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 72,
  "fields": {
    "feed": 23,
    "title": "This Week in Rust 513",
    "author": "TWiR Contributors",
    "url": "https://this-week-in-rust.org/blog/2023/09/20/this-week-in-rust-513/",
    "image_url": "",
    "description": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"official\"><a class=\"toclink\" href=\"#official\">Official</a></h3>\n<ul>\n<li><a href=\"https://blog.rust-lang.org/2023/09/19/Rust-1.72.1.html\">Announcing Rust 1.72.1</a></li>\n</ul>\n<h3 id=\"foundation\"><a class=\"toclink\" href=\"#foundation\">Foundation</a></h3>\n<ul>\n<li><a href=\"https://foundation.rust-lang.org/news/announcing-the-rust-foundation-s-associate-membership-with-openssf/\">Announcing the Rust Foundation’s Associate Membership with OpenSSF</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://servo.org/blog/2023/09/15/upcoming-events-and-new-browser-ui/\">This month in Servo: upcoming events, new browser UI, and more!</a></li>\n<li><a href=\"https://github.com/CloudCannon/pagefind/releases/tag/v1.0.0\">Pagefind v1.0.0 — Stable static search at scale</a></li>\n<li><a href=\"https://grafbase.com/blog/open-sourcing-the-grafbase-engine\">Open sourcing the Grafbase Engine</a></li>\n<li><a href=\"https://www.arroyo.dev/blog/arroyo-0-6-0\">Announcing Arroyo 0.6.0</a></li>\n<li><a href=\"https://rust-analyzer.github.io/thisweek/2023/09/18/changelog-199.html\">rust-analyzer changelog #199</a></li>\n<li><a href=\"https://github.com/bytebeamio/rumqtt/releases/tag/rumqttd-0.18.0\">rumqttd 0.18.0</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/18/stability-without-stressing-the-out/\">Stability without stressing the !@#! out</a></li>\n<li><a href=\"https://corrode.dev/blog/async/\">The State of Async Rust</a></li>\n<li><a href=\"https://about.xethub.com/blog/nfs-fuse-why-we-built-nfs-server-rust\">NFS &gt; FUSE: Why We Built our own NFS Server in Rust</a></li>\n<li><a href=\"https://medium.com/@otukof/breaking-tradition-why-rust-might-be-your-best-first-language-d10afc482ac1\">Breaking Tradition: Why Rust Might Be Your Best First Language</a></li>\n<li><a href=\"https://apollolabsblog.hashnode.dev/the-embedded-rust-esp-development-ecosystem\">The Embedded Rust ESP Development Ecosystem</a></li>\n<li><a href=\"http://www.williballenthin.com/post/sifting-through-crates.io-for-malware-with-ossf-package-analysis/\">Sifting through crates.io for malware with OSSF Package Analysis</a></li>\n<li><a href=\"https://swatinem.de/blog/optimized-strings/\">Choosing a more optimal <code>String</code> type</a></li>\n<li><a href=\"https://without.boats/blog/changing-the-rules-of-rust/\">Changing the rules of Rust</a></li>\n<li><a href=\"https://without.boats/blog/follow-up-to-changing-the-rules-of-rust/\">Follow up to \"Changing the rules of Rust\"</a></li>\n<li><a href=\"https://alic.dev/blog/dense-enums\">When Zig Outshines Rust - Memory Efficient Enum Arrays</a></li>\n<li><a href=\"https://trent.kiwi/bevy-three-years\">Three years of Bevy</a></li>\n<li><a href=\"https://kerkour.com/should-i-rust-or-should-i-go\">Should I Rust or should I go?</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/rust-1.68-1.69/\">What's New in Rust 1.68 and 1.69</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/joel-marcey-pitching-rust/\">Pitching Rust to decision-makers, with Joel Marcey</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://peterprototypes.com/blog/huggingface-from-rust/\">🤗 Calling Hugging Face models from Rust</a></li>\n<li><a href=\"https://reemus.dev/tldr/rust-cross-compilation-github-actions\">Rust Cross-Compilation With GitHub Actions</a></li>\n<li><a href=\"https://developerlife.com/2023/09/17/tuify-clap/\">tuify your clap CLI apps and make them more interactive</a></li>\n<li><a href=\"https://tech.marksblogg.com/clickhouse-gis-rust.html\">Enhancing ClickHouse's Geospatial Support</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=CpvzeyzgQdw\">All Rust string types explained</a></li>\n</ul>\n<h3 id=\"research\"><a class=\"toclink\" href=\"#research\">Research</a></h3>\n<ul>\n<li><a href=\"https://blog.brownplt.org/2023/09/17/rust-ownership.html\">A Grounded Conceptual Model for Ownership Types in Rust</a></li>\n<li><a href=\"https://arxiv.org/abs/2309.05137\">Debugging Trait Errors as Logic Programs</a></li>\n<li><a href=\"https://arxiv.org/abs/2309.06640\">REVIS: An Error Visualization Tool for Rust</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://chillfish8.ghost.io/jetbrains-youre-scaring-me/\">JetBrains, You're scaring me. The Rust plugin deprecation situation.</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://github.com/avhz/RustQuant\">RustQuant</a>, a crate for quantitative finance.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1238\">avhz</a> for the self-suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<ul>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/133\">r3bl_rs_utils - [tuify] Use nice ANSI symbols instead of \"&gt;\" to decorate what row is currently selected</a></li>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/120\">r3bl_rs_utils - [all] Use nu shell scripts (not just or fish) and add Github Actions to build &amp; test on mac &amp; linux</a></li>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/118\">r3bl_rs_utils - [tuify] Use offscreen buffer from r3bl_tui to make repaints smooth</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/5977\">Ockam - make building of <code>ockam_app</code> create behind a feature flag</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/5904\">Ockam - Use the Terminal to print out RPC response instead of printlns</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/1357\">Hyperswitch - add domain type for client secret</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/888\">Hyperswitch - separate payments_session from payments core</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/917\">Hyperswitch - move redis key creation to a common module</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>342 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-11..2023-09-18\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114452\"><code>#[diagnostic::on_unimplemented]</code> without filters</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115334\"><code>repr(transparent)</code>: it's fine if the one non-1-ZST field is a ZST</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/110800\">accept additional user-defined syntax classes in fenced code blocks</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115793\">add <code>explicit_predicates_of</code> to SMIR</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115687\">add <code>i686-pc-windows-gnullvm</code> triple</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115611\">add diagnostic for raw identifiers in format string</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115765\">add source type for invalid bool casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115740\">cache <code>reachable_set</code> on disk</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115850\">canonicalize effect vars in new solver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112038\">change <code>unsafe_op_in_unsafe_fn</code> to be <code>warn</code>-by-default from edition 2024</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115315\">closure field capturing: don't depend on alignment of packed fields</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115804\">consistently pass <code>ty::Const</code> through valtrees</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115867\">coverage: simplify internal representation of debug types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115816\">disabled socketpair for Vita</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115860\">enable varargs support for AAPCS calling convention</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115735\">extend rustc -Zls</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115859\">fallback effects even if types also fallback</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115329\">fix <code>std::primitive</code> doc: homogenous → homogeneous</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115832\">fix the error message for <code>#![feature(no_coverage)]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115815\">fix: return early when has tainted in mir pass</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115772\">improve Span in smir</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115782\">improve <code>PadAdapter::write_char</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115677\">improve invalid let expression handling</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115838\">inspect: closer to proof trees for coherence</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115871\">llvm-wrapper: adapt for LLVM API changes</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114750\">make <code>.rmeta</code> file in <code>dep-info</code> have correct name (<code>lib</code> prefix)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115884\">make <code>ty::Const</code> debug printing less verbose</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114494\">make <code>useless_ptr_null_checks</code> smarter about some std functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115748\">move <code>required_consts</code> check to general post-mono-check function</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115785\">only suggest turbofish in patterns if we may recover</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115834\">properly consider binder vars in <code>HasTypeFlagsVisitor</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115705\">read from non-scalar constants and statics in dataflow const-prop</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115736\">remove <code>verbose_generic_activity_with_arg</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115215\">remove assert that checks type equality</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115269\">resolve: mark binding is determined after all macros had been expanded</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114656\">rework <code>no_coverage</code> to <code>coverage(off)</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/108043\">small wins for formatting-related code</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115764\">some ConstValue refactoring</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115751\">some inspect improvements</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115817\">treat host effect params as erased in codegen</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115914\">turn custom code classes in docs into warning</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115825\">visit <code>ExprField</code> for lint levels</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115733\">store a index per dep node kind</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115477\">stabilize the <code>Saturating</code> type</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115520\">stabilize <code>const_transmute_copy</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115434\">make <code>Debug</code> impl for <code>ascii::Char</code> match that of <code>char</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/109409\">add <code>minmax{,_by,_by_key}</code> functions to <code>core::cmp</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112229\">specialize count for range iterators</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113748\">impl <code>Step</code> for IP addresses</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113753\">add implementation for <code>thread::sleep_until</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12660\">cargo: cli: Add '-n' to dry-run</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12614\">cargo: pkgid: Allow incomplete versions when unambigious</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12680\">cargo: doc: differentiate defaults for split-debuginfo</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12649\">cargo: stabilize credential-process and registry-auth</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12671\">cargo: emit a warning for <code>credential-alias</code> shadowing</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12685\">cargo: generalise suggestion on abiguous spec</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12662\">cargo: limit cargo add feature print</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12659\">cargo: prerelease candidates error message</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12655\">cargo: consolidate clap/shell styles</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12677\">cargo: use <code>RegistryOrIndex enum</code> to replace two booleans</a></li>\n<li><a href=\"https://github.com/rust-lang/rustfmt/pull/5908\">rustfmt: Style help like cargo nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115851\">clippy: ignore <code>#[doc(hidden)]</code> functions in clippy doc lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115689\">clippy: reuse rustdoc's doc comment handling in Clippy</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11484\">clippy: <code>extra_unused_type_parameters</code>: Fix edge case FP for parameters in where bounds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11515\">clippy: <code>filter_map_bool_then</code>: include multiple derefs from adjustments</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11452\">clippy: <code>len_without_is_empty</code>: follow type alias to find inherent <code>is_empty</code> method</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11523\">clippy: <code>used_underscore_bindings</code>: respect lint levels on the binding definition</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11301\">clippy: <code>useless_conversion</code>: don't lint if type parameter has unsatisfiable bounds for <code>.into_iter()</code> receiver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11509\">clippy: fix FP of <code>let_unit_value</code> on async fn args</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11517\">clippy: fix ICE by <code>u64::try_from(&lt;u128&gt;)</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11507\">clippy: trigger <code>transmute_null_to_fn</code> on chain of casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11506\">clippy: fix <code>filter_map_bool_then</code> with a bool reference</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11504\">clippy: ignore closures for some type lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11473\">clippy: ignore span's parents in <code>collect_ast_format_args</code>/<code>find_format_args</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11526\">clippy: add <code>redundant_as_str</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11468\">clippy: add extra <code>byref</code> checking for the guard's local</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11413\">clippy: new <code>unnecessary_map_on_constructor</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11483\">clippy: new lint: <code>path_ends_with_ext</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11511\">clippy: split <code>needless_borrow</code> into two lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15597\">rust-analyzer: field shorthand overwritten in promote local to const assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15625\">rust-analyzer: don't skip closure captures after let-else</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15606\">rust-analyzer: fix lens location <code>\"above_whole_item\"</code> breaking lenses</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15601\">rust-analyzer: temporarily skip decl check in derive expansions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15611\">rust-analyzer: prefer stable paths over unstable ones in import path calculation</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A pretty quiet week, with relatively few statistically significant changes, though some good improvements to a number of benchmarks, particularly in cycle counts rather than instructions.</p>\n<p>Triage done by <strong>@simulacrum</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=7e0261e7ea2085bdc0bc3d0fd6776bf343473858&amp;end=af78bae565e85b9c5698ee909af0652674eca6d4&amp;absolute=false&amp;stat=instructions%3Au\">7e0261e7ea..af78bae</a></p>\n<p>3 Regressions, 3 Improvements, 2 Mixed; 2 of them in rollups</p>\n<p>56 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-09-19.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><em>No RFCs were approved this week.</em></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rfcs/pull/3349\">RFC: Unicode and escape codes in literals</a></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/113301\">stabilize combining +bundle and +whole-archive link modifiers</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115659\">Stabilize <code>impl_trait_projections</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/issues/108545\">Tracking Issue for <code>option_as_slice</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/114901\">Amend style guide section for formatting where clauses in type aliases</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/112380\">Add allow-by-default lint for unit bindings</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3491\">RFC: Remove implicit features in a new edition</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3490\">RFC: const functions in traits</a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-09-20 - 2023-10-18 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-09-20 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/295826608/\"><strong>SurrealDB for Rustaceans</strong></a></li>\n</ul>\n</li>\n<li>2023-09-20 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057154/\"><strong>Nightly Night: Generators</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/295666673/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Cologne, DE) | <a href=\"https://www.meetup.com/aws-cologne/\">Cologne AWS User Group #AWSUGCGN</a><ul>\n<li><a href=\"https://www.meetup.com/aws-cologne/events/294594401/\"><strong>AWS User Group Cologne - September Edition: Stefan Willenbrock: Developer Preview: Discovering Rust on AWS</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Linz, AT) | <a href=\"https://www.meetup.com/rust-linz/\">Rust Linz</a><ul>\n<li><a href=\"https://www.meetup.com/rust-linz/events/295363887/\"><strong>Rust Meetup Linz - 33rd Edition</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/295828383/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-25 | Virtual (Dublin, IE) | <a href=\"https://www.meetup.com/Rust-Dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/Rust-Dublin/events/294908596/\"><strong>How we built the SurrealDB Python client in Rust.</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679767/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/295942051/\"><strong>Last Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Melbourne, VIC, AU) | <a href=\"https://www.meetup.com/rust-melbourne/\">Rust Melbourne</a><ul>\n<li><a href=\"https://www.meetup.com/rust-melbourne/events/296048213/\"><strong>(Hybrid - online &amp; in person) September 2023 Rust Melbourne Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-03 | Virtual (Buffalo, NY, US) | <a href=\"https://www.meetup.com/buffalo-rust-meetup/\">Buffalo Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/buffalo-rust-meetup/events/295919493/\"><strong>Buffalo Rust User Group, First Tuesdays</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-09-25 | Singapore, SG | <a href=\"https://www.meetup.com/singapore-web3-blockchain-meetup/\">Metacamp - Web3 Blockchain Community</a><ul>\n<li><a href=\"https://www.meetup.com/singapore-web3-blockchain-meetup/events/296156132/\"><strong>Introduction to Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Singapore, SG | <a href=\"https://www.meetup.com/rust-singapore/\">Rust Singapore</a><ul>\n<li><a href=\"https://www.meetup.com/rust-singapore/events/295505646/\"><strong>SG Rustaceans! Updated - Singapore First Rust Meetup!</strong></a></li>\n</ul>\n</li>\n<li>2023-10-03 | Taipei, TW | <a href=\"https://www.meetup.com/wasm-rust-meetup/\">WebAssembly and Rust Meetup (Wasm Empowering AI)</a><ul>\n<li><a href=\"https://www.meetup.com/wasm-rust-meetup/events/295672575/\"><strong>WebAssembly Meetup (Wasm Empowering AI) in Taipei</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-09-21 | Aarhus, DK | <a href=\"https://www.meetup.com/rust-aarhus/\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/294031975/\"><strong>Rust Aarhus - Rust and Talk at Concordium</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Bern, CH | <a href=\"https://www.meetup.com/de-DE/rust-bern/\">Rust Bern</a><ul>\n<li><a href=\"https://www.meetup.com/rust-bern/events/295503351/\"><strong>Rust Bern Meetup #3 2023 🦀</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Berlin, DE | <a href=\"https://www.meetup.com/react-berlin-meetup/\">React Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/react-berlin-meetup/events/295382108/\"><strong>React Berlin September Meetup: Creating Videos with React &amp; Remotion &amp; More: Integrating Rust with React Native – Gheorghe Pinzaru</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Madrid, ES | <a href=\"https://www.meetup.com/madrust/\">MadRust</a><ul>\n<li><a href=\"https://www.meetup.com/madrust/events/296063394/\"><strong>Primer evento Post COVID: ¡Cervezas MadRust!</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Paris, FR | <a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\">Paris Scala User Group (PSUG)</a><ul>\n<li><a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\"><strong>PSUG #114 Comparons Scala et Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-30 | Saint Petersburg, RU | <a href=\"https://t.me/ruRust_spb\">Rust Saint Petersburg meetups</a><ul>\n<li><a href=\"https://rurust-saint-petersburg-m.timepad.ru/event/2561864/\"><strong>Rust Community Meetup: A tale about how I tried to make my Blitz Basic - Vitaly; How to use nix to build projects on Rust – Danil; Getting to know tower middleware. General overview – Mikhail</strong></a> </li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-09-21 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/294972877/\"><strong>A Cargo Preview w/Ed Page, A Cargo Team Member</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/295747006/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/295587220/\"><strong>Rust on the web! Get started with Leptos</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Mountain View, CA, US | <a href=\"https://www.meetup.com/rust-breakfast-learn\">Rust Breakfast &amp; Learn</a><ul>\n<li><a href=\"https://www.meetup.com/rust-breakfast-learn/events/295579189/\"><strong>Rust: snacks &amp; learn</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Pasadena, CA, US | <a href=\"https://www.meetup.com/thursday-go/\">Pasadena Thursday Go/Rust</a><ul>\n<li><a href=\"https://www.meetup.com/thursday-go/events/295771515\"><strong>Monthly Rust group</strong></a></li>\n</ul>\n</li>\n<li>2023-09-27 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/295466314\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Boulder, CO, US | <a href=\"https://www.meetup.com/solidstatedepot/\">Solid State Depot - The Boulder Makerspace</a><ul>\n<li><a href=\"https://www.meetup.com/solidstatedepot/events/295466122/\"><strong>Rust and ROS for Robotics + Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oceania\"><a class=\"toclink\" href=\"#oceania\">Oceania</a></h3>\n<ul>\n<li>2023-09-26 | Canberra, ACT, AU | <a href=\"https://www.meetup.com/rust-canberra/\">Rust Canberra</a><ul>\n<li><a href=\"https://www.meetup.com/rust-canberra/events/295432237/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Melbourne, VIC, AU | <a href=\"https://www.meetup.com/rust-melbourne/\">Rust Melbourne</a><ul>\n<li><a href=\"https://www.meetup.com/rust-melbourne/events/296048213/\"><strong>(Hybrid - online &amp; in person) September 2023 Rust Melbourne Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Brisbane, QLD, AU | <a href=\"https://www.meetup.com/rust-brisbane/\">Rust Brisbane</a><ul>\n<li><a href=\"https://www.meetup.com/rust-brisbane/events/295946587/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>This is the first programming language I've learned that makes it so easy to make test cases! It's actually a pleasure to implement them.</p>\n</blockquote>\n<p>– <a href=\"https://users.rust-lang.org/t/published-first-library-looking-for-feedback/99856/7\">0xMB on rust-users</a></p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328/1467\">Moy2010</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/16o13k5/this_week_in_rust_513/\">Discuss on r/rust</a></small></p>",
    "summary": "<p>Hello and welcome to another issue of <em>This Week in Rust</em>!\n<a href=\"https://www.rust-lang.org/\">Rust</a> is a programming language empowering everyone to build reliable and efficient software.\nThis is a weekly summary of its progress and community.\nWant something mentioned? Tag us at <a href=\"https://twitter.com/ThisWeekInRust\">@ThisWeekInRust</a> on Twitter or <a href=\"https://mastodon.social/@thisweekinrust\">@ThisWeekinRust</a> on mastodon.social, or <a href=\"https://github.com/rust-lang/this-week-in-rust\">send us a pull request</a>.\nWant to get involved? <a href=\"https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\">We love contributions</a>.</p>\n<p><em>This Week in Rust</em> is openly developed <a href=\"https://github.com/rust-lang/this-week-in-rust\">on GitHub</a> and archives can be viewed at <a href=\"https://this-week-in-rust.org/\">this-week-in-rust.org</a>.\nIf you find any errors in this week's issue, <a href=\"https://github.com/rust-lang/this-week-in-rust/pulls\">please submit a PR</a>.</p>\n<h2 id=\"updates-from-rust-community\"><a class=\"toclink\" href=\"#updates-from-rust-community\">Updates from Rust Community</a></h2>\n<!--\n\nDear community contributors:\nPlease read README.md for guidance on submissions.\nEach submitted link should be of the form:\n\n* [Title of the Linked Page](https://example.com/my_article)\n\nIf you don't know which category to use, feel free to submit a PR anyway\nand just ask the editors to select the category.\n\n-->\n\n<h3 id=\"official\"><a class=\"toclink\" href=\"#official\">Official</a></h3>\n<ul>\n<li><a href=\"https://blog.rust-lang.org/2023/09/19/Rust-1.72.1.html\">Announcing Rust 1.72.1</a></li>\n</ul>\n<h3 id=\"foundation\"><a class=\"toclink\" href=\"#foundation\">Foundation</a></h3>\n<ul>\n<li><a href=\"https://foundation.rust-lang.org/news/announcing-the-rust-foundation-s-associate-membership-with-openssf/\">Announcing the Rust Foundation’s Associate Membership with OpenSSF</a></li>\n</ul>\n<h3 id=\"projecttooling-updates\"><a class=\"toclink\" href=\"#projecttooling-updates\">Project/Tooling Updates</a></h3>\n<ul>\n<li><a href=\"https://servo.org/blog/2023/09/15/upcoming-events-and-new-browser-ui/\">This month in Servo: upcoming events, new browser UI, and more!</a></li>\n<li><a href=\"https://github.com/CloudCannon/pagefind/releases/tag/v1.0.0\">Pagefind v1.0.0 — Stable static search at scale</a></li>\n<li><a href=\"https://grafbase.com/blog/open-sourcing-the-grafbase-engine\">Open sourcing the Grafbase Engine</a></li>\n<li><a href=\"https://www.arroyo.dev/blog/arroyo-0-6-0\">Announcing Arroyo 0.6.0</a></li>\n<li><a href=\"https://rust-analyzer.github.io/thisweek/2023/09/18/changelog-199.html\">rust-analyzer changelog #199</a></li>\n<li><a href=\"https://github.com/bytebeamio/rumqtt/releases/tag/rumqttd-0.18.0\">rumqttd 0.18.0</a></li>\n</ul>\n<h3 id=\"observationsthoughts\"><a class=\"toclink\" href=\"#observationsthoughts\">Observations/Thoughts</a></h3>\n<ul>\n<li><a href=\"https://smallcultfollowing.com/babysteps/blog/2023/09/18/stability-without-stressing-the-out/\">Stability without stressing the !@#! out</a></li>\n<li><a href=\"https://corrode.dev/blog/async/\">The State of Async Rust</a></li>\n<li><a href=\"https://about.xethub.com/blog/nfs-fuse-why-we-built-nfs-server-rust\">NFS &gt; FUSE: Why We Built our own NFS Server in Rust</a></li>\n<li><a href=\"https://medium.com/@otukof/breaking-tradition-why-rust-might-be-your-best-first-language-d10afc482ac1\">Breaking Tradition: Why Rust Might Be Your Best First Language</a></li>\n<li><a href=\"https://apollolabsblog.hashnode.dev/the-embedded-rust-esp-development-ecosystem\">The Embedded Rust ESP Development Ecosystem</a></li>\n<li><a href=\"http://www.williballenthin.com/post/sifting-through-crates.io-for-malware-with-ossf-package-analysis/\">Sifting through crates.io for malware with OSSF Package Analysis</a></li>\n<li><a href=\"https://swatinem.de/blog/optimized-strings/\">Choosing a more optimal <code>String</code> type</a></li>\n<li><a href=\"https://without.boats/blog/changing-the-rules-of-rust/\">Changing the rules of Rust</a></li>\n<li><a href=\"https://without.boats/blog/follow-up-to-changing-the-rules-of-rust/\">Follow up to \"Changing the rules of Rust\"</a></li>\n<li><a href=\"https://alic.dev/blog/dense-enums\">When Zig Outshines Rust - Memory Efficient Enum Arrays</a></li>\n<li><a href=\"https://trent.kiwi/bevy-three-years\">Three years of Bevy</a></li>\n<li><a href=\"https://kerkour.com/should-i-rust-or-should-i-go\">Should I Rust or should I go?</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/rust-1.68-1.69/\">What's New in Rust 1.68 and 1.69</a></li>\n<li>[audio] <a href=\"https://rustacean-station.org/episode/joel-marcey-pitching-rust/\">Pitching Rust to decision-makers, with Joel Marcey</a></li>\n</ul>\n<h3 id=\"rust-walkthroughs\"><a class=\"toclink\" href=\"#rust-walkthroughs\">Rust Walkthroughs</a></h3>\n<ul>\n<li><a href=\"https://peterprototypes.com/blog/huggingface-from-rust/\">🤗 Calling Hugging Face models from Rust</a></li>\n<li><a href=\"https://reemus.dev/tldr/rust-cross-compilation-github-actions\">Rust Cross-Compilation With GitHub Actions</a></li>\n<li><a href=\"https://developerlife.com/2023/09/17/tuify-clap/\">tuify your clap CLI apps and make them more interactive</a></li>\n<li><a href=\"https://tech.marksblogg.com/clickhouse-gis-rust.html\">Enhancing ClickHouse's Geospatial Support</a></li>\n<li>[video] <a href=\"https://www.youtube.com/watch?v=CpvzeyzgQdw\">All Rust string types explained</a></li>\n</ul>\n<h3 id=\"research\"><a class=\"toclink\" href=\"#research\">Research</a></h3>\n<ul>\n<li><a href=\"https://blog.brownplt.org/2023/09/17/rust-ownership.html\">A Grounded Conceptual Model for Ownership Types in Rust</a></li>\n<li><a href=\"https://arxiv.org/abs/2309.05137\">Debugging Trait Errors as Logic Programs</a></li>\n<li><a href=\"https://arxiv.org/abs/2309.06640\">REVIS: An Error Visualization Tool for Rust</a></li>\n</ul>\n<h3 id=\"miscellaneous\"><a class=\"toclink\" href=\"#miscellaneous\">Miscellaneous</a></h3>\n<ul>\n<li><a href=\"https://chillfish8.ghost.io/jetbrains-youre-scaring-me/\">JetBrains, You're scaring me. The Rust plugin deprecation situation.</a></li>\n</ul>\n<h2 id=\"crate-of-the-week\"><a class=\"toclink\" href=\"#crate-of-the-week\">Crate of the Week</a></h2>\n<p>This week's crate is <a href=\"https://github.com/avhz/RustQuant\">RustQuant</a>, a crate for quantitative finance.</p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704/1238\">avhz</a> for the self-suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/crate-of-the-week/2704\">Please submit your suggestions and votes for next week</a>!</p>\n<h2 id=\"call-for-participation\"><a class=\"toclink\" href=\"#call-for-participation\">Call for Participation</a></h2>\n<p>Always wanted to contribute to open-source projects but did not know where to start?\nEvery week we highlight some tasks from the Rust community for you to pick and get started!</p>\n<p>Some of these tasks may also have mentors available, visit the task page for more information.</p>\n<ul>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/133\">r3bl_rs_utils - [tuify] Use nice ANSI symbols instead of \"&gt;\" to decorate what row is currently selected</a></li>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/120\">r3bl_rs_utils - [all] Use nu shell scripts (not just or fish) and add Github Actions to build &amp; test on mac &amp; linux</a></li>\n<li><a href=\"https://github.com/r3bl-org/r3bl_rs_utils/issues/118\">r3bl_rs_utils - [tuify] Use offscreen buffer from r3bl_tui to make repaints smooth</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/5977\">Ockam - make building of <code>ockam_app</code> create behind a feature flag</a></li>\n<li><a href=\"https://github.com/build-trust/ockam/issues/5904\">Ockam - Use the Terminal to print out RPC response instead of printlns</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/1357\">Hyperswitch - add domain type for client secret</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/888\">Hyperswitch - separate payments_session from payments core</a></li>\n<li><a href=\"https://github.com/juspay/hyperswitch/issues/917\">Hyperswitch - move redis key creation to a common module</a></li>\n</ul>\n<p>If you are a Rust project owner and are looking for contributors, please submit tasks <a href=\"https://users.rust-lang.org/t/twir-call-for-participation/4821\">here</a>.</p>\n<h2 id=\"updates-from-the-rust-project\"><a class=\"toclink\" href=\"#updates-from-the-rust-project\">Updates from the Rust Project</a></h2>\n<p>342 pull requests were <a href=\"https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-09-11..2023-09-18\">merged in the last week</a></p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114452\"><code>#[diagnostic::on_unimplemented]</code> without filters</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115334\"><code>repr(transparent)</code>: it's fine if the one non-1-ZST field is a ZST</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/110800\">accept additional user-defined syntax classes in fenced code blocks</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115793\">add <code>explicit_predicates_of</code> to SMIR</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115687\">add <code>i686-pc-windows-gnullvm</code> triple</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115611\">add diagnostic for raw identifiers in format string</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115765\">add source type for invalid bool casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115740\">cache <code>reachable_set</code> on disk</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115850\">canonicalize effect vars in new solver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112038\">change <code>unsafe_op_in_unsafe_fn</code> to be <code>warn</code>-by-default from edition 2024</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115315\">closure field capturing: don't depend on alignment of packed fields</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115804\">consistently pass <code>ty::Const</code> through valtrees</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115867\">coverage: simplify internal representation of debug types</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115816\">disabled socketpair for Vita</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115860\">enable varargs support for AAPCS calling convention</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115735\">extend rustc -Zls</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115859\">fallback effects even if types also fallback</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115329\">fix <code>std::primitive</code> doc: homogenous → homogeneous</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115832\">fix the error message for <code>#![feature(no_coverage)]</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115815\">fix: return early when has tainted in mir pass</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115772\">improve Span in smir</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115782\">improve <code>PadAdapter::write_char</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115677\">improve invalid let expression handling</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115838\">inspect: closer to proof trees for coherence</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115871\">llvm-wrapper: adapt for LLVM API changes</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114750\">make <code>.rmeta</code> file in <code>dep-info</code> have correct name (<code>lib</code> prefix)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115884\">make <code>ty::Const</code> debug printing less verbose</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114494\">make <code>useless_ptr_null_checks</code> smarter about some std functions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115748\">move <code>required_consts</code> check to general post-mono-check function</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115785\">only suggest turbofish in patterns if we may recover</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115834\">properly consider binder vars in <code>HasTypeFlagsVisitor</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115705\">read from non-scalar constants and statics in dataflow const-prop</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115736\">remove <code>verbose_generic_activity_with_arg</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115215\">remove assert that checks type equality</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115269\">resolve: mark binding is determined after all macros had been expanded</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/114656\">rework <code>no_coverage</code> to <code>coverage(off)</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/108043\">small wins for formatting-related code</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115764\">some ConstValue refactoring</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115751\">some inspect improvements</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115817\">treat host effect params as erased in codegen</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115914\">turn custom code classes in docs into warning</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115825\">visit <code>ExprField</code> for lint levels</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115733\">store a index per dep node kind</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115477\">stabilize the <code>Saturating</code> type</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115520\">stabilize <code>const_transmute_copy</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115434\">make <code>Debug</code> impl for <code>ascii::Char</code> match that of <code>char</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/109409\">add <code>minmax{,_by,_by_key}</code> functions to <code>core::cmp</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/112229\">specialize count for range iterators</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113748\">impl <code>Step</code> for IP addresses</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/113753\">add implementation for <code>thread::sleep_until</code></a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12660\">cargo: cli: Add '-n' to dry-run</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12614\">cargo: pkgid: Allow incomplete versions when unambigious</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12680\">cargo: doc: differentiate defaults for split-debuginfo</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12649\">cargo: stabilize credential-process and registry-auth</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12671\">cargo: emit a warning for <code>credential-alias</code> shadowing</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12685\">cargo: generalise suggestion on abiguous spec</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12662\">cargo: limit cargo add feature print</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12659\">cargo: prerelease candidates error message</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12655\">cargo: consolidate clap/shell styles</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/12677\">cargo: use <code>RegistryOrIndex enum</code> to replace two booleans</a></li>\n<li><a href=\"https://github.com/rust-lang/rustfmt/pull/5908\">rustfmt: Style help like cargo nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115851\">clippy: ignore <code>#[doc(hidden)]</code> functions in clippy doc lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/115689\">clippy: reuse rustdoc's doc comment handling in Clippy</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11484\">clippy: <code>extra_unused_type_parameters</code>: Fix edge case FP for parameters in where bounds</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11515\">clippy: <code>filter_map_bool_then</code>: include multiple derefs from adjustments</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11452\">clippy: <code>len_without_is_empty</code>: follow type alias to find inherent <code>is_empty</code> method</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11523\">clippy: <code>used_underscore_bindings</code>: respect lint levels on the binding definition</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11301\">clippy: <code>useless_conversion</code>: don't lint if type parameter has unsatisfiable bounds for <code>.into_iter()</code> receiver</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11509\">clippy: fix FP of <code>let_unit_value</code> on async fn args</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11517\">clippy: fix ICE by <code>u64::try_from(&lt;u128&gt;)</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11507\">clippy: trigger <code>transmute_null_to_fn</code> on chain of casts</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11506\">clippy: fix <code>filter_map_bool_then</code> with a bool reference</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11504\">clippy: ignore closures for some type lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11473\">clippy: ignore span's parents in <code>collect_ast_format_args</code>/<code>find_format_args</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11526\">clippy: add <code>redundant_as_str</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11468\">clippy: add extra <code>byref</code> checking for the guard's local</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11413\">clippy: new <code>unnecessary_map_on_constructor</code> lint</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11483\">clippy: new lint: <code>path_ends_with_ext</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust-clippy/pull/11511\">clippy: split <code>needless_borrow</code> into two lints</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15597\">rust-analyzer: field shorthand overwritten in promote local to const assist</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15625\">rust-analyzer: don't skip closure captures after let-else</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15606\">rust-analyzer: fix lens location <code>\"above_whole_item\"</code> breaking lenses</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15601\">rust-analyzer: temporarily skip decl check in derive expansions</a></li>\n<li><a href=\"https://github.com/rust-lang/rust-analyzer/pull/15611\">rust-analyzer: prefer stable paths over unstable ones in import path calculation</a></li>\n</ul>\n<h3 id=\"rust-compiler-performance-triage\"><a class=\"toclink\" href=\"#rust-compiler-performance-triage\">Rust Compiler Performance Triage</a></h3>\n<p>A pretty quiet week, with relatively few statistically significant changes, though some good improvements to a number of benchmarks, particularly in cycle counts rather than instructions.</p>\n<p>Triage done by <strong>@simulacrum</strong>.\nRevision range: <a href=\"https://perf.rust-lang.org/?start=7e0261e7ea2085bdc0bc3d0fd6776bf343473858&amp;end=af78bae565e85b9c5698ee909af0652674eca6d4&amp;absolute=false&amp;stat=instructions%3Au\">7e0261e7ea..af78bae</a></p>\n<p>3 Regressions, 3 Improvements, 2 Mixed; 2 of them in rollups</p>\n<p>56 artifact comparisons made in total</p>\n<p><a href=\"https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-09-19.md\">Full report here</a></p>\n<h3 id=\"approved-rfcs\"><a class=\"toclink\" href=\"#approved-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/commits/master\">Approved RFCs</a></a></h3>\n<p>Changes to Rust follow the Rust <a href=\"https://github.com/rust-lang/rfcs#rust-rfcs\">RFC (request for comments) process</a>. These\nare the RFCs that were approved for implementation this week:</p>\n<ul>\n<li><em>No RFCs were approved this week.</em></li>\n</ul>\n<h3 id=\"final-comment-period\"><a class=\"toclink\" href=\"#final-comment-period\">Final Comment Period</a></h3>\n<p>Every week, <a href=\"https://www.rust-lang.org/team.html\">the team</a> announces the 'final comment period' for RFCs and key PRs\nwhich are reaching a decision. Express your opinions now.</p>\n<h4 id=\"rfcs\"><a class=\"toclink\" href=\"#rfcs\"><a href=\"https://github.com/rust-lang/rfcs/labels/final-comment-period\">RFCs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rfcs/pull/3349\">RFC: Unicode and escape codes in literals</a></li>\n</ul>\n<h4 id=\"tracking-issues-prs\"><a class=\"toclink\" href=\"#tracking-issues-prs\"><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc\">Tracking Issues &amp; PRs</a></a></h4>\n<ul>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/113301\">stabilize combining +bundle and +whole-archive link modifiers</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/115659\">Stabilize <code>impl_trait_projections</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/issues/108545\">Tracking Issue for <code>option_as_slice</code></a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/114901\">Amend style guide section for formatting where clauses in type aliases</a></li>\n<li>[disposition: merge] <a href=\"https://github.com/rust-lang/rust/pull/112380\">Add allow-by-default lint for unit bindings</a></li>\n</ul>\n<h3 id=\"new-and-updated-rfcs\"><a class=\"toclink\" href=\"#new-and-updated-rfcs\"><a href=\"https://github.com/rust-lang/rfcs/pulls\">New and Updated RFCs</a></a></h3>\n<ul>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3491\">RFC: Remove implicit features in a new edition</a></li>\n<li>[new] <a href=\"https://github.com/rust-lang/rfcs/pull/3490\">RFC: const functions in traits</a></li>\n</ul>\n<h3 id=\"call-for-testing\"><a class=\"toclink\" href=\"#call-for-testing\"><a href=\"https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing\">Call for Testing</a></a></h3>\n<p>An important step for RFC implementation is for people to experiment with the\nimplementation and give feedback, especially before stabilization.  The following\nRFCs would benefit from user testing before moving forward:</p>\n<ul>\n<li><em>No RFCs issued a call for testing this week.</em></li>\n</ul>\n<p>If you are a feature implementer and would like your RFC to appear on the above list, add the new <code>call-for-testing</code>\nlabel to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature\nneed testing.</p>\n<h2 id=\"upcoming-events\"><a class=\"toclink\" href=\"#upcoming-events\">Upcoming Events</a></h2>\n<p>Rusty Events between 2023-09-20 - 2023-10-18 🦀</p>\n<h3 id=\"virtual\"><a class=\"toclink\" href=\"#virtual\">Virtual</a></h3>\n<ul>\n<li>2023-09-20 | Virtual (Cardiff, UK)| <a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff\">Rust and C++ Cardiff</a><ul>\n<li><a href=\"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/295826608/\"><strong>SurrealDB for Rustaceans</strong></a></li>\n</ul>\n</li>\n<li>2023-09-20 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057154/\"><strong>Nightly Night: Generators</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/295666673/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Cologne, DE) | <a href=\"https://www.meetup.com/aws-cologne/\">Cologne AWS User Group #AWSUGCGN</a><ul>\n<li><a href=\"https://www.meetup.com/aws-cologne/events/294594401/\"><strong>AWS User Group Cologne - September Edition: Stefan Willenbrock: Developer Preview: Discovering Rust on AWS</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Linz, AT) | <a href=\"https://www.meetup.com/rust-linz/\">Rust Linz</a><ul>\n<li><a href=\"https://www.meetup.com/rust-linz/events/295363887/\"><strong>Rust Meetup Linz - 33rd Edition</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/295828383/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-25 | Virtual (Dublin, IE) | <a href=\"https://www.meetup.com/Rust-Dublin/\">Rust Dublin</a><ul>\n<li><a href=\"https://www.meetup.com/Rust-Dublin/events/294908596/\"><strong>How we built the SurrealDB Python client in Rust.</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679767/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/295942051/\"><strong>Last Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Virtual (Melbourne, VIC, AU) | <a href=\"https://www.meetup.com/rust-melbourne/\">Rust Melbourne</a><ul>\n<li><a href=\"https://www.meetup.com/rust-melbourne/events/296048213/\"><strong>(Hybrid - online &amp; in person) September 2023 Rust Melbourne Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-03 | Virtual (Buffalo, NY, US) | <a href=\"https://www.meetup.com/buffalo-rust-meetup/\">Buffalo Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/buffalo-rust-meetup/events/295919493/\"><strong>Buffalo Rust User Group, First Tuesdays</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Stuttgart, DE) | <a href=\"https://www.meetup.com/rust-community-stuttgart/\">Rust Community Stuttgart</a><ul>\n<li><a href=\"https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcnbgb/\"><strong>Rust-Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-04 | Virtual (Various) | <a href=\"https://www.eventbrite.com/o/ferrous-systems-gmbh-68735392123\">Ferrous Systems</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/a-decade-of-rust-with-ferrous-systems-tickets-680492891557?aff=ebdssbdestsearch\"><strong>A Decade of Rust with Ferrous Systems</strong></a></li>\n</ul>\n</li>\n<li>2023-10-05 | Virtual (Charlottesville, NC, US) | <a href=\"https://www.meetup.com/charlottesville-rust-meetup/\">Charlottesville Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/charlottesville-rust-meetup/events/296135640/\"><strong>Crafting Interpreters in Rust Collaboratively</strong></a></li>\n</ul>\n</li>\n<li>2023-10-07 | Virtual (Kampala, UG) | <a href=\"https://www.eventbrite.com/o/rust-circle-kampala-65249289033\">Rust Circle Kampala</a><ul>\n<li><a href=\"https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763617907?aff=erelpanelorg\"><strong>Rust Circle Meetup: Mentorship (First Saturday)</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Berlin, DE) | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a> | <a href=\"https://berline.rs/\"><strong>Mirror</strong></a></li>\n</ul>\n</li>\n<li>2023-10-10 | Virtual (Dallas, TX, US) | <a href=\"https://www.meetup.com/dallasrust/\">Dallas Rust</a><ul>\n<li><a href=\"https://www.meetup.com/dallasrust/events/fvdtgtyfcnbnb/\"><strong>Second Tuesday</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11| Virtual (Boulder, CO, US) | <a href=\"https://www.meetup.com/boulder-elixir-rust/\">Boulder Elixir and Rust</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcnbpb/\"><strong>Monthly Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 - 2023-10-13 | Virtual (Brussels, BE) | <a href=\"https://eurorust.eu\">EuroRust</a><ul>\n<li><a href=\"https://eurorust.eu\"><strong>EuroRust 2023</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Virtual (Nuremberg, DE) | <a href=\"https://www.meetup.com/rust-noris/\">Rust Nuremberg</a><ul>\n<li><a href=\"https://www.meetup.com/rust-noris/events/289732662/\"><strong>Rust Nürnberg online</strong></a></li>\n</ul>\n</li>\n<li>2023-10-18 | Virtual (Vancouver, BC, CA) | <a href=\"https://www.meetup.com/vancouver-rust/\">Vancouver Rust</a><ul>\n<li><a href=\"https://www.meetup.com/vancouver-rust/events/295057159/\"><strong>Rust Study/Hack/Hang-out</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asia\"><a class=\"toclink\" href=\"#asia\">Asia</a></h3>\n<ul>\n<li>2023-09-25 | Singapore, SG | <a href=\"https://www.meetup.com/singapore-web3-blockchain-meetup/\">Metacamp - Web3 Blockchain Community</a><ul>\n<li><a href=\"https://www.meetup.com/singapore-web3-blockchain-meetup/events/296156132/\"><strong>Introduction to Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Singapore, SG | <a href=\"https://www.meetup.com/rust-singapore/\">Rust Singapore</a><ul>\n<li><a href=\"https://www.meetup.com/rust-singapore/events/295505646/\"><strong>SG Rustaceans! Updated - Singapore First Rust Meetup!</strong></a></li>\n</ul>\n</li>\n<li>2023-10-03 | Taipei, TW | <a href=\"https://www.meetup.com/wasm-rust-meetup/\">WebAssembly and Rust Meetup (Wasm Empowering AI)</a><ul>\n<li><a href=\"https://www.meetup.com/wasm-rust-meetup/events/295672575/\"><strong>WebAssembly Meetup (Wasm Empowering AI) in Taipei</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"europe\"><a class=\"toclink\" href=\"#europe\">Europe</a></h3>\n<ul>\n<li>2023-09-21 | Aarhus, DK | <a href=\"https://www.meetup.com/rust-aarhus/\">Rust Aarhus</a><ul>\n<li><a href=\"https://www.meetup.com/rust-aarhus/events/294031975/\"><strong>Rust Aarhus - Rust and Talk at Concordium</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Bern, CH | <a href=\"https://www.meetup.com/de-DE/rust-bern/\">Rust Bern</a><ul>\n<li><a href=\"https://www.meetup.com/rust-bern/events/295503351/\"><strong>Rust Bern Meetup #3 2023 🦀</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Berlin, DE | <a href=\"https://www.meetup.com/react-berlin-meetup/\">React Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/react-berlin-meetup/events/295382108/\"><strong>React Berlin September Meetup: Creating Videos with React &amp; Remotion &amp; More: Integrating Rust with React Native – Gheorghe Pinzaru</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Madrid, ES | <a href=\"https://www.meetup.com/madrust/\">MadRust</a><ul>\n<li><a href=\"https://www.meetup.com/madrust/events/296063394/\"><strong>Primer evento Post COVID: ¡Cervezas MadRust!</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Paris, FR | <a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\">Paris Scala User Group (PSUG)</a><ul>\n<li><a href=\"https://www.meetup.com/paris-scala-user-group-psug/events/296025234/\"><strong>PSUG #114 Comparons Scala et Rust</strong></a></li>\n</ul>\n</li>\n<li>2023-09-30 | Saint Petersburg, RU | <a href=\"https://t.me/ruRust_spb\">Rust Saint Petersburg meetups</a><ul>\n<li><a href=\"https://rurust-saint-petersburg-m.timepad.ru/event/2561864/\"><strong>Rust Community Meetup: A tale about how I tried to make my Blitz Basic - Vitaly; How to use nix to build projects on Rust – Danil; Getting to know tower middleware. General overview – Mikhail</strong></a> </li>\n</ul>\n</li>\n<li>2023-10-10 | Berlin, DE | <a href=\"https://www.meetup.com/opentechschool-berlin/\">OpenTechSchool Berlin</a><ul>\n<li><a href=\"https://www.meetup.com/opentechschool-berlin/events/295679773/\"><strong>Rust Hack and Learn</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Reading, UK | <a href=\"https://www.meetup.com/reading-rust-workshop/\">Reading Rust Workshop</a><ul>\n<li><a href=\"https://www.meetup.com/reading-rust-workshop/events/295955356/\"><strong>Reading Rust Meetup at Browns</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | Leipzig, DE | <a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/\">Rust - Modern Systems Programming in Leipzig</a><ul>\n<li><a href=\"https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/295504251/\"><strong>SIMD in Rust</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"north-america\"><a class=\"toclink\" href=\"#north-america\">North America</a></h3>\n<ul>\n<li>2023-09-21 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/294972877/\"><strong>A Cargo Preview w/Ed Page, A Cargo Team Member</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Mountain View, CA, US | <a href=\"https://www.meetup.com/mv-rust-meetup/\">Mountain View Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/mv-rust-meetup/events/295747006/\"><strong>Rust Meetup at Hacker Dojo</strong></a></li>\n</ul>\n</li>\n<li>2023-09-21 | Nashville, TN, US | <a href=\"https://www.meetup.com/music-city-rust-developers/\">Music City Rust Developers</a><ul>\n<li><a href=\"https://www.meetup.com/music-city-rust-developers/events/295587220/\"><strong>Rust on the web! Get started with Leptos</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Mountain View, CA, US | <a href=\"https://www.meetup.com/rust-breakfast-learn\">Rust Breakfast &amp; Learn</a><ul>\n<li><a href=\"https://www.meetup.com/rust-breakfast-learn/events/295579189/\"><strong>Rust: snacks &amp; learn</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Pasadena, CA, US | <a href=\"https://www.meetup.com/thursday-go/\">Pasadena Thursday Go/Rust</a><ul>\n<li><a href=\"https://www.meetup.com/thursday-go/events/295771515\"><strong>Monthly Rust group</strong></a></li>\n</ul>\n</li>\n<li>2023-09-27 | Austin, TX, US | <a href=\"https://www.meetup.com/rust-atx/\">Rust ATX</a><ul>\n<li><a href=\"https://www.meetup.com/rust-atx/events/295466314\"><strong>Rust Lunch - Fareground</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Boulder, CO, US | <a href=\"https://www.meetup.com/solidstatedepot/\">Solid State Depot - The Boulder Makerspace</a><ul>\n<li><a href=\"https://www.meetup.com/solidstatedepot/events/295466122/\"><strong>Rust and ROS for Robotics + Happy Hour</strong></a></li>\n</ul>\n</li>\n<li>2023-10-11 | Boulder, CO, US | <a href=\"https://www.meetup.com/boulder-rust-meetup/\">Boulder Rust Meetup</a><ul>\n<li><a href=\"https://www.meetup.com/boulder-rust-meetup/events/296193722/\"><strong>First Meetup - Demo Day and Office Hours</strong></a></li>\n</ul>\n</li>\n<li>2023-10-12 | Lehi, UT, US | <a href=\"https://www.meetup.com/utah-rust/\">Utah Rust</a><ul>\n<li><a href=\"https://www.meetup.com/utah-rust/events/295771376/\"><strong>The Actor Model: Fearless Concurrency, Made Easy w/Chris Mena</strong></a></li>\n</ul>\n</li>\n<li>2023-10-17 | San Francisco, CA, US | <a href=\"https://www.meetup.com/san-francisco-rust-study-group\">San Francisco Rust Study Group</a><ul>\n<li><a href=\"https://www.meetup.com/san-francisco-rust-study-group/events/vwljctyfcnbwb/\"><strong>Rust Hacking in Person</strong></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"oceania\"><a class=\"toclink\" href=\"#oceania\">Oceania</a></h3>\n<ul>\n<li>2023-09-26 | Canberra, ACT, AU | <a href=\"https://www.meetup.com/rust-canberra/\">Rust Canberra</a><ul>\n<li><a href=\"https://www.meetup.com/rust-canberra/events/295432237/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-26 | Melbourne, VIC, AU | <a href=\"https://www.meetup.com/rust-melbourne/\">Rust Melbourne</a><ul>\n<li><a href=\"https://www.meetup.com/rust-melbourne/events/296048213/\"><strong>(Hybrid - online &amp; in person) September 2023 Rust Melbourne Meetup</strong></a></li>\n</ul>\n</li>\n<li>2023-09-28 | Brisbane, QLD, AU | <a href=\"https://www.meetup.com/rust-brisbane/\">Rust Brisbane</a><ul>\n<li><a href=\"https://www.meetup.com/rust-brisbane/events/295946587/\"><strong>September Meetup</strong></a></li>\n</ul>\n</li>\n</ul>\n<p>If you are running a Rust event please add it to the <a href=\"https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com\">calendar</a> to get\nit mentioned here. Please remember to add a link to the event too.\nEmail the <a href=\"mailto:community-team@rust-lang.org\">Rust Community Team</a> for access.</p>\n<h2 id=\"jobs\"><a class=\"toclink\" href=\"#jobs\">Jobs</a></h2>\n<!--\n\nRust Jobs:\n\nTWiR has stopped featuring individual job postings. You can read more about this change here:\n\nhttps://github.com/rust-lang/this-week-in-rust/issues/3412\n\n-->\n\n<p>Please see the latest <a href=\"https://www.reddit.com/r/rust/comments/163w6fl/official_rrust_whos_hiring_thread_for_jobseekers/\">Who's Hiring thread on r/rust</a></p>\n<h1 id=\"quote-of-the-week\"><a class=\"toclink\" href=\"#quote-of-the-week\">Quote of the Week</a></h1>\n<blockquote>\n<p>This is the first programming language I've learned that makes it so easy to make test cases! It's actually a pleasure to implement them.</p>\n</blockquote>\n<p>– <a href=\"https://users.rust-lang.org/t/published-first-library-looking-for-feedback/99856/7\">0xMB on rust-users</a></p>\n<p>Thanks to <a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328/1467\">Moy2010</a> for the suggestion!</p>\n<p><a href=\"https://users.rust-lang.org/t/twir-quote-of-the-week/328\">Please submit quotes and vote for next week!</a></p>\n<p><em>This Week in Rust is edited by: <a href=\"https://github.com/nellshamrell\">nellshamrell</a>, <a href=\"https://github.com/llogiq\">llogiq</a>, <a href=\"https://github.com/cdmistman\">cdmistman</a>, <a href=\"https://github.com/ericseppanen\">ericseppanen</a>, <a href=\"https://github.com/extrawurst\">extrawurst</a>, <a href=\"https://github.com/andrewpollack\">andrewpollack</a>, <a href=\"https://github.com/U007D\">U007D</a>, <a href=\"https://github.com/kolharsam\">kolharsam</a>, <a href=\"https://github.com/joelmarcey\">joelmarcey</a>, <a href=\"https://github.com/mariannegoldin\">mariannegoldin</a>, <a href=\"https://github.com/bennyvasquez\">bennyvasquez</a>.</em></p>\n<p><em>Email list hosting is sponsored by <a href=\"https://foundation.rust-lang.org/\">The Rust Foundation</a></em></p>\n<p><small><a href=\"https://www.reddit.com/r/rust/comments/16o13k5/this_week_in_rust_513/\">Discuss on r/rust</a></small></p>",
    "content": null,
    "pub_date": "2023-09-20T04:00:00Z",
    "upd_date": "2023-09-20T04:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:34.251Z",
    "updated": "2023-10-09T09:34:34.251Z",
    "tags": [
      72
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 73,
  "fields": {
    "feed": 22,
    "title": "Treat accessibility issues as bugs, not feature requests",
    "author": null,
    "url": "https://github.com/readme/guides/fix-accessibility-bugs",
    "image_url": "https://images.ctfassets.net/s5uo95nf6njh/2yBl988yFoeBkGvOYmVjJh/9ae9fc94fc466384d035e9843e63bbbe/1200x630-ReadMe-Twitter_LI_Mike_Gifford__1_.png",
    "description": "It takes leadership to treat accessibility issues as bugs, and prioritize them before a project is released. Learn how they do it at Drupal.",
    "summary": "It takes leadership to treat accessibility issues as bugs, and prioritize them before a project is released. Learn how they do it at Drupal.",
    "content": null,
    "pub_date": "2023-08-08T02:00:00Z",
    "upd_date": "2023-08-08T02:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:35.196Z",
    "updated": "2023-10-09T09:34:35.196Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 74,
  "fields": {
    "feed": 22,
    "title": "Provisioning self-hosted GitHub Actions runners on demand",
    "author": null,
    "url": "https://github.com/readme/guides/github-runners-philips",
    "image_url": "https://images.ctfassets.net/s5uo95nf6njh/5tCLrlCxYDHVFWFlBXFflX/684e8521207420dc3ec2dee61b23a2e7/1200x628-ReadMe-FB_Post-_Niek_Palm__1_.png",
    "description": "Unlock the secrets of scaling GitHub self-hosted runners in the enterprise cloud. Dive into Philips' method with Terraform and GitHub Actions to elevate your CI/CD game.",
    "summary": "Unlock the secrets of scaling GitHub self-hosted runners in the enterprise cloud. Dive into Philips' method with Terraform and GitHub Actions to elevate your CI/CD game.",
    "content": null,
    "pub_date": "2023-08-08T02:00:00Z",
    "upd_date": "2023-08-08T02:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:35.697Z",
    "updated": "2023-10-09T09:34:35.697Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 75,
  "fields": {
    "feed": 22,
    "title": "Is Laravel the happiest developer community on the planet?",
    "author": null,
    "url": "https://github.com/readme/featured/laravel-community",
    "image_url": "https://images.ctfassets.net/s5uo95nf6njh/3EnehOtfQ1iRMjUAXMx2hP/22e622c4b09ab7854d432b12317318cf/1200x630-ReadMe-Twitter_LI_Post-GitOps_Featured_Article__1_.png",
    "description": "How the PHP framework Laravel prioritizes developer experience by focusing on details and avoiding the hype cycle",
    "summary": "How the PHP framework Laravel prioritizes developer experience by focusing on details and avoiding the hype cycle",
    "content": null,
    "pub_date": "2023-08-08T02:00:00Z",
    "upd_date": "2023-08-08T02:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:36.190Z",
    "updated": "2023-10-09T09:34:36.190Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 76,
  "fields": {
    "feed": 21,
    "title": "A developer&#8217;s guide to open source LLMs and generative AI",
    "author": "Gwen Davis",
    "url": "https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/",
    "image_url": "https://github.blog/wp-content/uploads/2023/10/AI-DarkMode-2.png",
    "description": "<p>Open source generative AI projects are a great way to build new AI-powered features and apps.</p>\n<p>The post <a href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/\" rel=\"nofollow\">A developer&#8217;s guide to open source LLMs and generative AI</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "summary": "<p>Open source generative AI projects are a great way to build new AI-powered features and apps.</p>\n<p>The post <a href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/\" rel=\"nofollow\">A developer&#8217;s guide to open source LLMs and generative AI</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "content": "<p>We all know that AI is changing the world. But what happens when you combine AI with the power of open source?</p>\n<p>Over the past year, there has been <a href=\"https://github.blog/2023-06-27-the-economic-impact-of-the-ai-powered-developer-lifecycle-and-lessons-from-github-copilot/\">an explosion of open source generative AI projects on GitHub</a>: by our count, more than 8,000. They range from commercially backed large language models (LLMs) like Meta’s <a href=\"https://github.com/facebookresearch/llama\">LLaMA</a> to experimental open source applications.</p>\n<p>These projects offer many benefits to open source developers and the machine learning community—and are a great way to start building new AI-powered features and applications.</p>\n<p>In this article, we’ll explore:</p>\n<ul>\n<li>The differences between open source LLMs and closed source pre-trained models</li>\n<li>Best practices for fine-tuning LLMs</li>\n<li>The open source LLMs available today</li>\n<li>What the future holds for the rapidly evolving world of generative AI</li>\n</ul>\n<p>Let’s jump in.</p>\n<div class=\"content-table-wrap\"><table style=\"border: 1px black;\">\n<tbody>\n<tr>\n<td><strong>Interested in building with LLMs?</strong> <a href=\"https://github.blog/2023-07-17-prompt-engineering-guide-generative-ai-llms/\">Check out our guide on prompt engineering &gt;</a></td>\n</tr>\n</tbody>\n</table></div>\n<h2 id=\"open-source-vs-closed-source-llms\">Open source vs. closed source LLMs<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/#open-source-vs-closed-source-llms\"></a></h2>\n<p>By now, most of us are familiar with LLMs: <a href=\"https://github.blog/2023-04-14-how-generative-ai-is-changing-the-way-developers-work/\">neural network-based language models trained on vast quantities of data</a> to mimic human behavior by <a href=\"https://github.blog/2023-04-07-what-developers-need-to-know-about-generative-ai/#what-is-generative-ai-used-for\">performing various downstream tasks</a>, like question answering, translation, and summarization. LLMs have disrupted the world with the introduction of tools like ChatGPT and <a href=\"https://github.com/features/copilot\">GitHub Copilot</a>.</p>\n<p>Open source LLMs differ from their closed counterparts regarding the source code (and sometimes other components, as well). With closed LLMs, the source code—which explains how the model is structured and how the training algorithms work—isn’t published.</p>\n<p>“When you’re doing research, you want access to the source code so you can fine-tune some of the pieces of the algorithm itself,” says <a href=\"https://github.com/whatsinfinitum\">Alireza Goudarzi</a>, a senior researcher of machine learning at GitHub. “With closed models, it’s harder to do that.”</p>\n<p>Open source LLMs help the industry at large: because so many people contribute, they can be developed faster than closed models. They can also be more effective for edge cases or specific applications (like local language support), can <span style=\"font-weight: 400;\">contain bespoke security controls, and can run on local models.</span></p>\n<p>But closed models—often built by larger companies—have advantages, too. For one, they’re embedded in systems with filters for biased information, inappropriate language, and other questionable content. They also frequently have security measures baked in. Plus, they don’t need fine-tuning, a specialized skill set requiring dedicated people and teams.</p>\n<p>“Closed, off-the-shelf LLMs are high quality,” notes <a href=\"https://github.com/eaftan\">Eddie Aftandilian</a>, a principal researcher at GitHub. “They’re often far more accessible to the average developer.”</p>\n<h2 id=\"how-to-fine-tune-open-source-llms\">How to fine-tune open source LLMs<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/#how-to-fine-tune-open-source-llms\"></a></h2>\n<p>Fine-tuning open source models is done on the large cloud provider hosted by the LLM, such as AWS, Google Cloud, or Microsoft Azure. Fine-tuning allows you to optimize the model by creating more advanced language interactions in applications like virtual assistants and chatbots. This can improve model accuracy anywhere from five to 10 percent.</p>\n<p>As for best practices? Goudarzi recommends being careful about data sampling and being clear about the specific needs of the application you’re trying to build. <span style=\"font-weight: 400;\">The curated data should match your needs exactly since the models are pre-trained on anything you can find online.</span></p>\n<p>“You need to emphasize certain things related to your objectives,” he says. “Let’s say you’re trying to create a model to process TV and smart home commands. You’d want to preselect your data to have more of a command form.”</p>\n<p>This will help optimize model efficiency.</p>\n<aside class=\"p-4 p-md-6 post-aside--large\"><p class=\"h5-mktg gh-aside-title\">Looking to fine-tune your open source LLM? Try LoRA.</p></p>\n<p>Microsoft offers the open sourced LoRA (Low-Rank Adaptation of Large Language Models) project <a href=\"https://github.com/microsoft/LoRA\">on GitHub</a>, which can be a useful tool for fine-tuning LLMs.</p>\n<ul>\n<li>LoRA is a training method that uses a mathematical trick to decompose large metrics into smaller ones. This leads to fewer parameters and more storage efficiency, resulting in quicker processing time.</li>\n<li>Techniques like LoRA can help you deploy LLMs to many customers, since it only requires saving small matrices.</li>\n<li>Other techniques for fine-tuning LLMs include <a href=\"https://magazine.sebastianraschka.com/p/understanding-parameter-efficient\">hard tuning, soft tuning, and prefix tuning</a>.</li>\n</ul>\n</aside>\n<h2 id=\"choosing-your-model\">Choosing your model<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/#choosing-your-model\"></a></h2>\n<p>Which open source model is best for you? Aftandilian recommends focusing on models&#8217; performance benchmarks against different scenarios, such as reasoning, domain-specific understanding of law or science, and linguistic comprehension.</p>\n<p>However, don’t assume that the benchmark results are correct or meaningful.</p>\n<p>“Rather, ask yourself, how good is this model at a particular task?” he says. “It’s pretty easy to let benchmarks seep into the training set due to lack of deep understanding, skewed performance, or limited generalization.”</p>\n<p>When this happens, the model is trained on its own evaluation data. “Which would make it look better than it should,” Aftandilian says.</p>\n<p>You should also consider how much the model costs to run and its overall latency rates. A large model, for instance, might be exceptionally powerful. <span style=\"font-weight: 400;\">But if it takes minutes to generate responses versus seconds, there may be better options. </span>(For example, the models that power GitHub Copilot in the IDE feature a latency rate of less than ten milliseconds, which is well-suited for getting quick suggestions.)</p>\n<figure class=\"wp-caption aligncenter mx-0\" id=\"attachment_74520\"><a href=\"https://resources.github.com/newsletter/\"><img alt=\"\" class=\"width-fit size-large wp-image-74520 width-fit\" src=\"https://github.blog/wp-content/uploads/2023/10/insider-signup.png?w=1024&#038;fit=1024%2C1024\" /></a><figcaption class=\"text-mono color-fg-muted mt-14px f5-mktg\">Supercharge your productivity with our monthly developer newsletter.</figcaption></figure>\n<h2 id=\"open-source-llms-available-today\">Open source LLMs available today<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/#open-source-llms-available-today\"></a></h2>\n<p>There are several open source commercially licensed models available. These include:</p>\n<ul>\n<li><strong><a href=\"https://github.com/openlm-research/open_llama\">OpenLLaMA</a>:</strong> <span style=\"font-weight: 400;\">An open source reproduction of Meta’s LLaMA model, developed by <a href=\"https://github.com/UCBAIR\">Berkeley AI Research</a></span><span style=\"font-weight: 400;\">, this project provides permissively licensed models with 3B, 7B, and 13B parameters, and is trained on one trillion tokens.</span> <span style=\"font-weight: 400;\">OpenLLaMA models have been evaluated on tasks using the <a href=\"https://foundation.mozilla.org/en/blog/evaluation-harness-is-setting-the-benchmark-for-auditing-large-language-models/\">lm-evaluation-harness</a></span><span style=\"font-weight: 400;\"> and perform comparably to the original LLaMA and GPT-J across most tasks. But because of the tokenizer&#8217;s configuration, the models aren’t great for code generation tasks with empty spaces. </span></li>\n<li><strong><a href=\"https://github.com/huggingface/blog/blob/main/falcon.md#the-falcon-models\">Falcon-Series</a>:</strong> Developed by <a href=\"https://github.com/tiiuae\">Abu Dhabi&#8217;s Technology Innovation Institute (TII)</a>, Falcon-Series consists of two models: Falcon-40B and Falcon-7B. <span style=\"font-weight: 400;\">The series has a unique training data pipeline that extracts content with deduplication and filtering from web data. The models also use multi-query attention, which improves the scalability of inference. </span><span style=\"font-weight: 400;\">Falcon can generate human-like text, translate languages, and answer questions.</span></li>\n<li><strong><a href=\"https://github.com/mosaicml/llm-foundry\">MPT-Series</a>:</strong> A set of decoder-only large language models, MPT-Series models have been trained on one trillion tokens spanning code, natural language text, and scientific text. Developed by <a href=\"https://github.com/mosaicml\">MosaicML</a>, these models come in two specific versions: MPT-Instruct, designed to be task-oriented, and MPT-Chat, which provides a conversational experience. <span style=\"font-weight: 400;\">It&#8217;s most suitable for virtual assistants, chatbots, and other interactive user engagement tools. </span></li>\n<li><strong><a href=\"https://huggingface.co/lmsys/fastchat-t5-3b-v1.0\">FastChat-T5</a>:</strong> A large transformer model with three billion parameters, FastChat-T5 is a chatbot model developed by the <a href=\"https://github.com/lm-sys/FastChat\">FastChat</a> team through fine-tuning the Flan-T5-XL model. <span style=\"font-weight: 400;\">Trained on 70,000 user-shared conversations, it generates responses to user inputs autoregressively and is primarily for commercial applications. It’s a strong fit for applications that need language understanding, like virtual assistants, customer support systems, and interactive platforms. </span></li>\n</ul>\n<h2 id=\"the-future-of-open-source-llms\">The future of open source LLMs<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/#the-future-of-open-source-llms\"></a></h2>\n<p>There’s been a scurry of activity in the open source LLM world.</p>\n<p>“Developers are very active on some of these open source models,” Aftandilian says. “They can optimize performance, explore new use cases, and push for new algorithms and more efficient data.”</p>\n<p>And that’s just the start.</p>\n<p>Meta’s LLaMA model is now available for commercial use, allowing businesses to create their own AI solutions.</p>\n<p>Goudarzi’s team has been thinking about how they can distill open source LLMs and reduce their size. If smaller, the models could be installed on local machines, and you could have your own mini version of GitHub Copilot, for instance. But for now, open source models often need financial support due to their extensive infrastructure and operating costs.</p>\n<p>One thing that surprised Goudarzi: originally, the machine learning community thought that more advanced generative AI would require more advanced algorithms. But that hasn’t been the case.</p>\n<p>“The simple algorithm actually stays the same, regardless of how much it can do,” he says. “Scaling is the only change, which is completely mind-blowing.”</p>\n<p>Who knows how open source LLMs will revolutionize the developer landscape.</p>\n<p>“I’m excited that we’re seeing so many open source LLMs now,” Goudarzi says. <span style=\"font-weight: 400;\">“When developers start building with these models, the possibilities are endless.”</span></p>\n<div class=\"post-content-cta\"><p>Interested in how generative AI can help optimize your productivity? <a href=\"https://github.blog/2023-06-08-developer-experience-what-is-it-and-why-should-you-care/\">Read our guide on developer experience &gt;</a></p>\n</div>\n<p>The post <a href=\"https://github.blog/2023-10-05-a-developers-guide-to-open-source-llms-and-generative-ai/\" rel=\"nofollow\">A developer&#8217;s guide to open source LLMs and generative AI</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "pub_date": "2023-10-05T16:00:38Z",
    "upd_date": "2023-10-05T17:55:43Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:36.725Z",
    "updated": "2023-10-09T09:34:36.725Z",
    "tags": [
      74,
      75,
      76,
      73
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 77,
  "fields": {
    "feed": 21,
    "title": "How to communicate like a GitHub engineer: our principles, practices, and tools",
    "author": "Ben Balter",
    "url": "https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/",
    "image_url": "https://github.blog/wp-content/uploads/2023/10/Collaboration-DarkMode-2.png?fit=1200%2C630",
    "description": "<p>Learn more about how we use GitHub to build GitHub, how we turned our guiding communications principles into prescriptive practices to manage our internal communications signal-to-noise ratio, and how you can contribute to the ongoing conversation.</p>\n<p>The post <a href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/\" rel=\"nofollow\">How to communicate like a GitHub engineer: our principles, practices, and tools</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "summary": "<p>Learn more about how we use GitHub to build GitHub, how we turned our guiding communications principles into prescriptive practices to manage our internal communications signal-to-noise ratio, and how you can contribute to the ongoing conversation.</p>\n<p>The post <a href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/\" rel=\"nofollow\">How to communicate like a GitHub engineer: our principles, practices, and tools</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "content": "<p>As a company that&#8217;s been remote-first since day one, GitHub Engineering has learned a lot about how to communicate effectively across time zones, teams, and tools. We&#8217;ve distilled our experience into a set of guidelines that we call “How we communicate,” and <a href=\"https://github.com/github/how-engineering-communicates\">we&#8217;re sharing them with you today</a>. We hope that by sharing our communication practices publicly, we can help other organizations that are embracing remote work or want to improve their collaboration culture.</p>\n<p>Read on to learn more about how we use GitHub to build GitHub, how we turned our guiding communications principles into prescriptive practices to manage our internal communications signal-to-noise ratio, and how you can contribute to the ongoing conversation.</p>\n<h2 id=\"using-github-to-build-github\">Using GitHub to build GitHub<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#using-github-to-build-github\"></a></h2>\n<p>Unlike many companies that made the transition to remote work during the pandemic, GitHub has been majority remote since its founding 15 years ago. GitHub&#8217;s remote-first communication style originally drew inspiration from the open source community. Open source development rarely requires the global community of collaborators and contributors to be in a certain place, at a certain time, in order to participate in the ongoing conversation. This is the same approach GitHub Engineering takes to our own internal communication. We believe that asynchronous communication is the best way to work globally and at scale, and as a result, we&#8217;ve built our culture around it.</p>\n<p>We&#8217;ve <a href=\"https://zachholman.com/talk/how-github-uses-github-to-build-github/\">always</a> used GitHub to build GitHub. GitHub is not only the place where we host and review code, but also where we plan, discuss, and document our work. We use issues, pull requests, projects, and discussions to track work, collaborate on features, and share information across teams. Many of these communications patterns grew organically, as developers adopted practices from the open source community for our own internal collaboration needs. We believe open practices are the best way to work with a global and diverse team, and to make decisions that are informed, inclusive, and scalable.</p>\n<p>While asynchronous collaboration is deeply embedded in GitHub’s DNA, we have also long had a culture of each team enjoying a great deal of autonomy in deciding how they communicate day to day. This freedom has allowed teams to experiment and uncover novel practices, but it has also meant that working across teams previously required first negotiating a meta-conversation around how to communicate before any substantive work could occur–much like a new open source project negotiating with its newfound community. Having an open set of shared expectations within the engineering organization allows us to be more effective, mindful, and inclusive about how and where we communicate, leading us to make more well-informed decisions in a way that takes into account different needs, preferences, and time zones.</p>\n<h2 id=\"how-we-communicate\">&#8220;How we communicate&#8221;<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#how-we-communicate\"></a></h2>\n<p>To define this set of shared expectations, the GitHub Engineering Operations and Culture team collaborated with more than 100 people across the engineering organization in the first half of 2023 to create guidance on “How we communicate.” This document was intended to encourage consistency over preference by outlining a common core of shared internal communication practices for all of GitHub Engineering in the form of opinionated guidance. Teams are still encouraged to adapt the practices for their unique circumstances, while maintaining a common &#8220;API&#8221; to interface with other teams.</p>\n<p>Today, we are <a href=\"https://github.com/github/how-engineering-communicates\">publishing our &#8220;How we communicate&#8221; guidance</a> under a <a href=\"https://choosealicense.com/licenses/cc-by-4.0/\">CC-BY-4.0 license</a>, in the hopes that you’ll find it useful, especially if you’re evolving your own remote-first or remote-friendly culture; we welcome you to fork, modify, and use the documentation with attribution. We expect our guidance (lightly edited for the community, primarily to remove internal URLs and references) will evolve over time along with our organization, and, of course, pull requests are always welcome.</p>\n<h2 id=\"from-guiding-principles-to-prescriptive-practices\">From guiding principles to prescriptive practices<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#from-guiding-principles-to-prescriptive-practices\"></a></h2>\n<p>To begin with our “How we communicate” guidance, we established eight guiding principles:</p>\n<ul>\n<li>Be asynchronous first.</li>\n<li>Write things down.</li>\n<li>Make work visible and overcommunicate.</li>\n<li>Prefer GitHub tools and workflows.</li>\n<li>Embrace collaboration.</li>\n<li>Foster a culture that values documentation maintenance.</li>\n<li>Communicate openly, honestly, and authentically.</li>\n<li>Remember, practicality beats purity.</li>\n</ul>\n<p>From there, we began to define the specific practices that would help us live up to these principles. We started with the most common forms of communication, such as chat, discussions, issues, project boards, and pull requests, and went on to collaboratively author suggestions on how to manage notifications, run effective meetings, and schedule more inclusively.</p>\n<h2 id=\"managing-the-signal-to-noise-ratio\">Managing the signal-to-noise ratio<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#managing-the-signal-to-noise-ratio\"></a></h2>\n<p>With well over 1,500 engineers across a number of functions, we faced a challenge not unique to any organization: how to keep everyone informed and engaged without overwhelming them with notifications. We wanted to create a system that allowed everyone to opt-in, rather than opt-out, and to get the information they needed in a digestible and skimmable way. As it was, either you got everything (which we jokingly referred to as the &#8220;fire hose&#8221; of notifications), or you opted out entirely (and ignored everything). Either way, Hubbers were likely to miss important information. We set out to create a system that minimized notification fatigue, while allowing people to subscribe to the topics they cared about.</p>\n<p>We rely on GitHub Discussions heavily to share information within and across teams. It&#8217;s a natural choice, since engineers are already working on GitHub.com, and with things like comments, upvotes, and emoji reactions, discussions are a great way to start an asynchronous conversation on just about any topic.</p>\n<h3 id=\"opt-in\">Opt-in<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#opt-in\"></a></h3>\n<p>To start, we encouraged teams to begin posting their discussions to the most logical repository, instead of directly to the main <code>github/engineering</code> repository. (For example, if a post was about GitHub Copilot, it should go in the <code>github/copilot</code> repository; if it was about GitHub Actions, it should go in the <code>github/actions</code> repository.) That way, those interested could subscribe to the repositories they cared about, and get email or web notifications when new discussions were posted. And the volume of notifications coming through <code>github/engineering</code> to the whole organization would be reduced.</p>\n<h3 id=\"amplify-widely\">Amplify widely<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#amplify-widely\"></a></h3>\n<p>But some posts are rightfully intended for all of GitHub Engineering. Things like staff ships (early access to new features for staff), required actions, promotions, and updates to Engineering priorities are written with a broad audience in mind. To ensure we were still surfacing the most important information to the organization, we established a small set of &#8220;magic labels&#8221; that if applied to a post, would add it to a daily content roundup, automatically amplify the message in various places for all of GitHub Engineering to see.</p>\n<p>For a peek at our taxonomy, here’s an excerpt from our GitHub Actions workflow that makes it easy for everyone to add the set of “magic labels” to their repositories:</p>\n<pre><code>label:\n          - name: eng-action-required\n            description: Upcoming process/workflow changes/activities requiring Engineering Hubbers to take action\n          - name: eng-availability\n            description: Discussions about availability, incident response, et al\n          - name: eng-celebrations\n            description: Celebrating Hubber promotions and other amazingness\n          - name: eng-feedback-request\n            description: Posts requesting feedback from the Engineering organization\n          - name: eng-org-change\n            description: Announcements related to organizational changes\n          - name: eng-priorities\n            description: Discussions related to Engineering priorities\n          - name: eng-roundup\n            description: Newsletters, weekly digests, and other content and team roundups\n          - name: eng-show-and-tell\n            description: Share what you've learned or show off something you've made\n          - name: eng-staff-ship\n            description: Announcements for features made available to Hubbers for feedback and early access\n          - name: eng-strategy\n            description: Discussions related to strategy and vision\n</code></pre>\n<h3 id=\"automate-all-the-things\">Automate all the things!<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#automate-all-the-things\"></a></h3>\n<p>We used GitHub Actions to schedule a workflow to automatically create daily and weekly roundups of activity across the organization based on those “magic labels,” posting the digests as discussion posts in the <code>github/engineering</code> repository.</p>\n<p><img alt=\"Screenshot of the GitHub Actions workflow in the eng-ops-automations repository that creates roundups of activity based on labels and posts them as discussions in the github/engineering repository.\" class=\"aligncenter size-large wp-image-74510 width-fit\" height=\"527\" src=\"https://github.blog/wp-content/uploads/2023/10/eng-ops-automation.png?w=1024&#038;resize=1024%2C527\" width=\"1024\" /></p>\n<p>Like any other discussion post, these content roundups trigger web and email notifications from GitHub.com, and they’re also amplified in Slack channels. However, rather than receiving multiple notifications a day, these roundups reduce the daily notification to one (and also make it much easier to catch up on everything that happens while you’re out of the office!). To support the needs of those who prefer receiving notifications for every discussion post individually, rather than waiting for a daily roundup (aka to instead “drink from the fire hose”), we created an <code>#engineering-discussions-firehose</code> Slack channel, which streams every labeled post as it is posted.</p>\n<h3 id=\"experiment-with-ai\">Experiment with AI<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#experiment-with-ai\"></a></h3>\n<p>With notifications reduced in our main <code>github/engineering</code> repository and discussions being posted in more logical repositories, enabling people to subscribe to more frequent notifications for specific topics, the last remaining step was to increase quick skimmability to allow for greater situational awareness without anyone having to spend all day reading teams&#8217; discussion posts.</p>\n<p>As part of our writing style, most of us include <code>TL;DR</code>s at the top of posts (internet slang for “too long, didn&#8217;t read,” a short summary of longer writing), but not every post author includes one. For posts that don&#8217;t have a human-authored TL;DR, we use Azure&#8217;s OpenAI service to draft a brief summary for us. That way, readers can quickly skim the daily digest (or fire hose) and decide if they want to click through to read more.</p>\n<p>Here’s an excerpt of the prompt we use to summarize discussion posts:</p>\n<pre><code>// OpenAI\nexport const encodingModel = \"gpt-3.5-turbo\";\nexport const openaiModel = \"gpt-35-turbo\";\nexport const openaiPrompt = `\n  The following is an internal discussion post from the engineering department at GitHub formatted in GitHub flavored Markdown. Please write a short summary appropriate for inclusion in a digest of internal discussion posts with the following requirements:\n\n  - The summary should be no more than 3 sentences\n  - The summary should focus on the most important and impactful information from the post, including key points and any calls to action\n  - The summary should be detailed, thorough, to-the-point, and written for a technical audience, while maintaining clarity and conciseness\n  - The communications style should be professional, but informal\n  - The summary should use emoji where appropriate, but use emoji sparingly\n  - The summary should be formatted in GitHub Flavored Markdown with no line breaks\n  - DO NOT use the phrases \"the engineering department\" or \"at GitHub\"; instead, whenever possible, name the specific team in reference, or else use \"we\" to refer to the team or engineering department. For example, use, \"We recently shipped a feature\", and NOT, \"The engineering department at GitHub recently shipped a feature\".\n  - Employees at GitHub are referred to as \"Hubbers\"\n  - GitHub is ALWAYS capitalized as \"GitHub\", never \"Github\"\n  - Teams are referred to as \"the Actions team\" or \"the Copilot team\", never just \"actions team\" or \"copilot team\"\n`;\n\nexport const estimatedPromptTokens = 300;\nexport const completionTokens = 300;\n</code></pre>\n<p>Ironically, we relied heavily on GitHub Copilot to build the GitHub Actions workflow (it’s been a while since these Hubbers have written “production-worthy” code), meaning robots helped humans to teach robots how to summarize the work of humans, which other robots then published out to other humans. <img alt=\"🤖\" class=\"wp-smiley\" src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f916.png\" style=\"height: 1em;\" /> Summarization is a core workflow for AI, and so far, while it’s not always perfect, it’s been working well. If you’re interested in the prompt we’re using (or want to help us improve it!), you can find it <a href=\"https://github.com/github/how-engineering-communicates/blob/main/prompt.md\">here</a>.</p>\n<h2 id=\"lets-build-from-here\">Let&#8217;s build from here<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/#lets-build-from-here\"></a></h2>\n<p>We&#8217;re excited to share our &#8220;How we communicate&#8221; guidance with you, and we hope that it will inspire you to adopt or improve some of the practices we&#8217;ve found useful. Here are some suggestions to get you started:</p>\n<ul>\n<li><strong>Principles</strong>: Establish a set of guiding principles for your organization’s internal communications (<a href=\"https://github.com/github/how-engineering-communicates/fork\">fork and clone our guidelines</a> for a head start!). What core values do you want to promote, and how can you ensure everyone is aligned around those values so there’s a common “API” across teams?</li>\n<li><strong>Practices</strong>: Use those principles to develop practices. What specific practices can you adopt to help you live up to your principles, and how can you ensure those practices are adopted across the organization?</li>\n<li><strong>Experimentations</strong>: Experiment with automation and emerging technologies to improve your practices. How can you use AI and other tools (like GitHub Actions) to automate your workflows and improve the signal-to-noise ratio?</li>\n</ul>\n<p>We recognize communication is an ongoing and evolving process, and different teams and cultures may have different needs and preferences. We welcome your feedback, suggestions, and contributions to our public repository: <a href=\"https://github.com/github/how-engineering-communicates\">https://github.com/github/how-engineering-communicates</a></p>\n<p>Happy communicating! <img alt=\"🎉\" class=\"wp-smiley\" src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f389.png\" style=\"height: 1em;\" /></p>\n<p>The post <a href=\"https://github.blog/2023-10-04-how-to-communicate-like-a-github-engineer-our-principles-practices-and-tools/\" rel=\"nofollow\">How to communicate like a GitHub engineer: our principles, practices, and tools</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "pub_date": "2023-10-04T17:00:29Z",
    "upd_date": "2023-10-04T14:33:47Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:36.843Z",
    "updated": "2023-10-09T09:34:36.843Z",
    "tags": [
      78,
      79,
      77,
      80,
      81
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 78,
  "fields": {
    "feed": 21,
    "title": "Introducing secret scanning validity checks for major cloud services",
    "author": "Zain Malik",
    "url": "https://github.blog/2023-10-04-introducing-secret-scanning-validity-checks-for-major-cloud-services/",
    "image_url": "https://github.blog/wp-content/uploads/2023/10/Security-DarkMode-3.png",
    "description": "<p>Secret scanning now performs validity checks for select AWS, Microsoft, Google, and Slack tokens. </p>\n<p>The post <a href=\"https://github.blog/2023-10-04-introducing-secret-scanning-validity-checks-for-major-cloud-services/\" rel=\"nofollow\">Introducing secret scanning validity checks for major cloud services</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "summary": "<p>Secret scanning now performs validity checks for select AWS, Microsoft, Google, and Slack tokens. </p>\n<p>The post <a href=\"https://github.blog/2023-10-04-introducing-secret-scanning-validity-checks-for-major-cloud-services/\" rel=\"nofollow\">Introducing secret scanning validity checks for major cloud services</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "content": "<p>At GitHub, we launched secret scanning with the mission of eliminating all credential leaks. In support of this mission, this year we’ve made <a href=\"https://github.blog/2023-02-28-secret-scanning-alerts-are-now-available-and-free-for-all-public-repositories/\">secret scanning</a> and secret scanning <a href=\"https://github.blog/2023-05-09-push-protection-is-generally-available-and-free-for-all-public-repositories/\">push protection</a> free on public repositories to help open source users detect and prevent secret leaks. We also shipped <a href=\"https://docs.google.com/document/d/1HM1EVR9Q5AucxsNq_zFOu6E9W12o3V0zLbanOyHlvgo/edit\">push protection metrics</a> for GitHub Advanced Security customers to better understand trends across their organization.</p>\n<p>But a good security experience isn’t just about reducing noise and delivering high-confidence alerts–it should make your remediation efforts simpler and faster. A key component of remediation is assessing whether a token is active or not. To that end, we introduced <a href=\"https://github.blog/2023-01-19-remediation-made-simple-introducing-new-validity-checks-for-github-tokens/\">validity checks</a> for GitHub tokens earlier this year, which removes manual effort and friction from the process. You can see a token’s status within the UI, saving you time and allowing you to prioritize remediation efforts more efficiently. This is especially useful when you have to comb through hundreds or even thousands of alerts.</p>\n<p><strong>Today, we’re excited to announce that we have extended validity checks for select tokens from AWS, Microsoft, Google, and Slack.</strong> These account for some of the most common types of secrets detected across repositories on GitHub. This is just the beginning–we’ll continuously expand validation support on more tokens in our <a href=\"https://docs.github.com/code-security/secret-scanning/secret-scanning-partner-program\">secret scanning partner program</a>. You can keep up to date on our progress via <a href=\"https://docs.github.com/enterprise-cloud@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets\">our list of supported patterns</a>.</p>\n<h3 id=\"how-to-get-started\">How to get started<a class=\"heading-link pl-2 text-italic text-bold\" href=\"https://github.blog/2023-10-04-introducing-secret-scanning-validity-checks-for-major-cloud-services/#how-to-get-started\"></a></h3>\n<p>Enterprise or organization owners and repository administrators can activate validity checks by going to “Settings” and “Code security and analysis.” Scroll down to “Secret scanning” and check the box for “Automatically verify if a secret is valid by sending it to the relevant partner” to activate validity checks for non-GitHub tokens.</p>\n<div class=\"image-frame image-frame-full border rounded-2 overflow-hidden d-flex flex-row flex-justify-center\"><img alt=\"Screenshot of the &quot;Sercret scanning&quot; settings with the boxes for “Automatically verify if a secret is valid by sending it to the relevant partner” checked.\" class=\"aligncenter size-large wp-image-74494 width-fit\" height=\"145\" src=\"https://github.blog/wp-content/uploads/2023/10/secret-scanning.png?w=1024&#038;resize=1024%2C145\" width=\"1024\" /></div>\n<p>Once the setting is enabled, you can see within alerts whether the token is active or not. We perform checks periodically in the background, but you can also conduct a manual refresh by clicking ‘Verify secret’ in the top right corner.</p>\n<p><img alt=\"Animation showing how a user can manually verify whether a secret is valid by clicking ‘Verify secret’ in the top right corner.\" src=\"https://github.blog/wp-content/uploads/2023/10/manual-verification.gif\" /></p>\n<div class=\"image-frame image-frame-top-left border rounded-2 overflow-hidden d-flex flex-row flex-justify-center\"><img alt=\"View the token’s status at a glance on the alert index view. Inactive tokens do not display a status in the index.\" class=\"aligncenter size-large wp-image-74496 width-fit\" height=\"501\" src=\"https://github.blog/wp-content/uploads/2023/10/secret-scanning-alerts.png?w=1024&#038;resize=1024%2C501\" width=\"1024\" /></div>\n<p>Validity checks are another piece of information at your disposal when investigating a secret scanning alert. We hope this feature will provide greater speed and efficiency in triaging alerts and remediation efforts. If you have feedback to share, please reach out to us in the <a href=\"https://github.com/orgs/community/discussions/categories/code-security\">Code Security community discussion</a>.</p>\n<div class=\"post-content-cta\"><p>Visit our <a href=\"https://docs.github.com/code-security/secret-scanning/about-secret-scanning\">documentation</a> to learn more about <a href=\"https://docs.github.com/code-security/secret-scanning/push-protection-for-repositories-and-organizations\">push protection</a>, <a href=\"https://docs.github.com/get-started/learning-about-github/about-github-advanced-security\">GitHub Advanced Security</a>, or the <a href=\"https://docs.github.com/code-security/secret-scanning/secret-scanning-partner-program\">secret scanning partner program</a>.</p>\n</div>\n<p>The post <a href=\"https://github.blog/2023-10-04-introducing-secret-scanning-validity-checks-for-major-cloud-services/\" rel=\"nofollow\">Introducing secret scanning validity checks for major cloud services</a> appeared first on <a href=\"https://github.blog\" rel=\"nofollow\">The GitHub Blog</a>.</p>",
    "pub_date": "2023-10-04T16:00:11Z",
    "upd_date": "2023-10-04T16:14:27Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:36.974Z",
    "updated": "2023-10-09T09:34:36.974Z",
    "tags": [
      83,
      82
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 79,
  "fields": {
    "feed": 20,
    "title": "Python 3.12: What's New",
    "author": null,
    "url": "https://testdriven.io/blog/python312/",
    "image_url": "https://testdriven.io/static/images/blog/python312/python312_social.png",
    "description": "This article looks at the new features in Python 3.12 and how they can be implemented.",
    "summary": "This article looks at the new features in Python 3.12 and how they can be implemented.",
    "content": null,
    "pub_date": "2023-10-03T22:28:15Z",
    "upd_date": "2023-10-03T22:28:15Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:38.583Z",
    "updated": "2023-10-09T09:34:38.583Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 80,
  "fields": {
    "feed": 20,
    "title": "Customizing the Django Admin",
    "author": null,
    "url": "https://testdriven.io/blog/customize-django-admin/",
    "image_url": "https://testdriven.io/static/images/blog/django/customize-django-admin/customize_django_admin_social_card.png",
    "description": "In this article, we'll look at how to customize Django's admin site.",
    "summary": "In this article, we'll look at how to customize Django's admin site.",
    "content": null,
    "pub_date": "2023-08-24T22:28:15Z",
    "upd_date": "2023-08-24T22:28:15Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:39.416Z",
    "updated": "2023-10-09T09:34:39.416Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 81,
  "fields": {
    "feed": 20,
    "title": "Deploying a Machine Learning Model to AWS Lambda",
    "author": null,
    "url": "https://testdriven.io/blog/ml-model-aws-lambda/",
    "image_url": "https://testdriven.io/static/images/blog/ml_model_aws_lambda_social_card.png",
    "description": "This tutorial shows how to deploy a machine learning model to AWS Lambda.",
    "summary": "This tutorial shows how to deploy a machine learning model to AWS Lambda.",
    "content": null,
    "pub_date": "2023-08-21T22:28:15Z",
    "upd_date": "2023-08-21T22:28:15Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:39.931Z",
    "updated": "2023-10-09T09:34:39.931Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 82,
  "fields": {
    "feed": 19,
    "title": "Why I put in some effort to lower my carbon footprint",
    "author": "Brett Cannon",
    "url": "https://snarky.ca/why-i-put-in-some-effort-to-lower-my-carbon-footprint/",
    "image_url": "https://snarky.ca/content/images/2016/12/104_0419.JPG",
    "description": "<p>I was talking with someone about how Andrea and I have been consciously taking less flights since the pandemic started in order to lower our carbon footprint (<a href=\"https://takethejump.org/holiday-local\">Take the Jump</a> suggests a flight under 1500km every 3 years, longer than that every 8 years; heard about this from <a href=\"https://en.wikipedia.org/wiki/David_Suzuki\">David Suzuki</a></p>",
    "summary": "<p>I was talking with someone about how Andrea and I have been consciously taking less flights since the pandemic started in order to lower our carbon footprint (<a href=\"https://takethejump.org/holiday-local\">Take the Jump</a> suggests a flight under 1500km every 3 years, longer than that every 8 years; heard about this from <a href=\"https://en.wikipedia.org/wiki/David_Suzuki\">David Suzuki</a></p>",
    "content": "<p>I was talking with someone about how Andrea and I have been consciously taking less flights since the pandemic started in order to lower our carbon footprint (<a href=\"https://takethejump.org/holiday-local\">Take the Jump</a> suggests a flight under 1500km every 3 years, longer than that every 8 years; heard about this from <a href=\"https://en.wikipedia.org/wiki/David_Suzuki\">David Suzuki</a>), and how that probably means always driving to <a href=\"https://pycascades.com\">PyCascades</a> (thanks to our EV), flying to <a href=\"https://us.pycon.org/\">PyCon US</a> (or <a href=\"https://europython.eu\">EuroPython</a> depending on things) and the core dev sprints, and that potentially being it for conference travel unless I combine it with a holiday. The person I was chatting with then asked me why I seemed to be willing to sacrifice some happiness from conferences for the planet when my individual carbon footprint is miniscule compared to entire countries who are not seemingly putting in as much effort as I am? I honestly wasn&apos;t prepared for that question, so I didn&apos;t have a good way to articulate why. But now that I have reflected on it, this blog post records my reasons for putting in at least some effort to lower my carbon footprint at the cost of some happiness for myself.</p><p>First, I think every little bit helps. I think of it in terms of a fighting game like <a href=\"https://en.wikipedia.org/wiki/Street_Fighter_II\">Street Fighter 2</a> or <a href=\"https://en.wikipedia.org/wiki/Mortal_Kombat\">Mortal Kombat</a>: you might survive by a sliver of life, but a win is a win. Since I don&apos;t know what the magic tipping point is for the climate crisis to spiral out of control and destroy this planet for human beings, I would rather help keep even a sliver of health on that life bar for the planet instead of looking back on my life on my deathbed and wondering if I should have done more (at my age, I very much expect to make it to 2050 and see how good/bad things look for the rest of the century)?</p><p>Second, I want to influence however I can everyone around me who votes to help push politicians to do their work to fight the climate crisis as that&apos;s where real gains can be made. This is essentially trickle-up ethics where I am trying to influence those around me, to then influence those around them, and so on and so forth, until politicians realize people care about the environment and they need to make changes to keep their jobs (or lives depending on the political system). This is a bit of a slog as you end up needing to have conversations over years on the climate with the same people, but I have seen changes in folks like my in-laws who &#xa0;are (unfortunately) the primary generation of folks who bother voting, so getting them to change their minds is important.</p><p>Anyway, so that&apos;s why I bother doing what I consider my part in lowering my carbon footprint. As I said, I fully realize I could do more, but I am still willing to make some sacrifices to help out as I don&apos;t know if my small effort won&apos;t have some trickle-on effect that leads to marked improvements. And if we all did a small bit of sacrificing, it can add up in various ways whether its directly in the atmosphere or via ethical views of society.</p>",
    "pub_date": "2023-08-27T23:11:18Z",
    "upd_date": "2023-08-27T23:11:18Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:40.462Z",
    "updated": "2023-10-09T09:34:40.462Z",
    "tags": [
      84,
      85
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 83,
  "fields": {
    "feed": 19,
    "title": "State of standardized lock files for Python: August 2023",
    "author": "Brett Cannon",
    "url": "https://snarky.ca/state-of-standardized-lock-files-for-python-august-2023/",
    "image_url": "https://snarky.ca/content/images/2016/12/104_0419.JPG",
    "description": "<p>Since people seemed to like my <a href=\"https://snarky.ca/wasi-support-for-cpython-june-2023/\">June 2023 post on the state of WASI support for CPython</a>, I thought I would do one for another one of my other long-gestating projects: coming up with a standardized lock file format for Python packaging.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">&#x1f4a1;</div><div class=\"kg-callout-text\">When I say &quot;lock file&quot;</div></div>",
    "summary": "<p>Since people seemed to like my <a href=\"https://snarky.ca/wasi-support-for-cpython-june-2023/\">June 2023 post on the state of WASI support for CPython</a>, I thought I would do one for another one of my other long-gestating projects: coming up with a standardized lock file format for Python packaging.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">&#x1f4a1;</div><div class=\"kg-callout-text\">When I say &quot;lock file&quot;</div></div>",
    "content": "<p>Since people seemed to like my <a href=\"https://snarky.ca/wasi-support-for-cpython-june-2023/\">June 2023 post on the state of WASI support for CPython</a>, I thought I would do one for another one of my other long-gestating projects: coming up with a standardized lock file format for Python packaging.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">&#x1f4a1;</div><div class=\"kg-callout-text\">When I say &quot;lock file&quot; I&apos;m talking about pinning your dependencies and their versions and writing it to a file, like <code>pip-compile</code> from <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> takes a <code>requirements.in</code> file and produces a <code>requirements.txt</code> file. I am <strong>not</strong> talking about file locking like <code><a href=\"https://docs.python.org/3/library/fcntl.html?highlight=flock#fcntl.flock\">fcntl.flock()</a></code>.</div></div><p>On the <a href=\"https://code.visualstudio.com\">VS Code</a> team, we have taken the position that we much prefer working with standards over anything that&apos;s tool-specific when dealing with anything in our <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">core Python extension</a>. As such, I have been helping out in trying to standardize things in Python packaging. Probably the most visible thing I helped with was establishing <code>pyproject.toml</code> via <a href=\"https://peps.python.org/pep-0518\">PEP 518</a>. I also drove the creation of the <code>[project]</code> table in <code>pyproject.toml</code> via <a href=\"https://peps.python.org/pep-0621\">PEP 621</a>.</p><p>For me, the next thing to standardize was a lock file format. Historically, people either manually pinned their dependencies to a specific version or they used a <code>requirements.txt</code> file. The former is rather tedious and often misses indirect dependencies and the latter isn&apos;t actually a standard but a <a href=\"https://pip.pypa.io/en/stable/reference/requirements-file-format/\">pip feature</a>. Both of those things together made me want to come up with a file format that made <em>environment reproducibility</em> possible by making it easy for people to get the exact same package versions installed. I also wanted to take the opportunity to help people do installations in a more secure fashion on top of reproducibility as it <a href=\"https://github.com/brettcannon/pip-secure-install\">takes 3 extra flags to pip to make it install things securely</a>.</p><p>That led me to write <a href=\"https://peps.python.org/pep-0665/\">PEP 665</a>. The goal was to create a lock file format around wheels which would facilitate people installing packages in a consistent, secure way. Unfortunately, after 10 months of working on the PEP, it was ultimately rejected. I personally believe the rejection was due to lack of sdist support &#x2013; which goes against the &quot;secure&quot; goal I had since they can basically do anything during install time &#x2013; and due to a lack of understanding around how important lock files are for security purposes (let alone just making sure you can replicate your environment in other places).</p><p>And so I decided I needed a proof-of-concept lock file format in order to show the importance of this. That would require being able to do a few things:</p><ol><li>Get a list of top-level dependencies that need to be installed from the user</li><li>Communicate with a Python package index server like <a href=\"https://pypi.org\">PyPI</a> to find out what packages (and their wheels) are available</li><li>Resolve the dependency graph to know what needs to ultimately be installed</li><li>Create a lock file for that dependency graph of wheel files</li><li>Install the wheel files listed in the lock file</li></ol><p>Step 1 is somewhat taken care of by <a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#dependencies-optional-dependencies\"><code>pyproject.toml</code> and <code>project.dependencies</code></a>, although if you&apos;re not writing code that&apos;s meant to eventually end up being in a wheel it&apos;s a bit of an abuse of that data (there&apos;s been a <a href=\"https://discuss.python.org/t/projects-that-arent-meant-to-generate-a-wheel-and-pyproject-toml/29684/91\">discussion about how projects not destined for being a wheel should write down their dependencies</a>, but I don&apos;t know if it&apos;s going to go anywhere). Step 2 is taken care of via the <a href=\"https://packaging.python.org/en/latest/specifications/simple-repository-api/\">simple repository API</a>, which can be either HTML or JSON-based (I created <a href=\"https://pypi.org/project/mousebender/\">mousebender</a> to smooth over the details between the two types of API response formats, and that project is also where I&apos;m hosting all of this work related to the proof-of-concept I want to end up with).</p><p>Step 3 is where I&apos;m currently at. Working with a resolver like <a href=\"https://pypi.org/project/resolvelib/\">resolvelib</a> means you need the initial sets of requirements, the constraints it has to operate under (e.g., platform details), and the ability to update the requirements the resolver is working with as it learns about more edges in the dependency graph. As I mentioned above, I can cheat about the initial set of requirements by grabbing them from <code>pyproject.toml</code>. The constraints are covered by <code><a href=\"https://packaging.pypa.io/en/stable/markers.html\">packaging.markers</a></code> and <code><a href=\"https://packaging.pypa.io/en/stable/tags.html\">packaging.tags</a></code> (and I wrote the latter module, so I&apos;m &quot;lucky&quot; to be overly familiar with what&apos;s required for this situation). So that leaves updating requirements as you discover new edges to the dependency graph for step 3.</p><p>But how do you end up with new edges of the dependency graph? Well, every dependency has its own dependencies. So you what you end up doing is once you think you know what wheel you want to install you get the metadata for that wheel and read what requirements it has. That might sound simple, but the <a href=\"https://packaging.python.org/en/latest/specifications/core-metadata/\">core metadata specification</a> says wheel metadata gets written to a <code>METADATA</code> file that is formatted using email headers; not quite so easy as reading some JSON. Plus it has a lot of types of fields, the parsing requirements per field have changed over the years, etc. As such, the idea came up of putting some code into the <code>packaging</code> project &#x2013; which I&apos;m a co-maintainer of &#x2013; so there could be a baseline core metadata parser which handled parsing this metadata, both in a forgiving and strict manner (for this project I need strict parsing of the dependency information).</p><p>I got the forgiving parsing done in <code>packaging</code> 23.4.0 via <code><a href=\"https://packaging.pypa.io/en/stable/metadata.html\">packaging.metadata</a></code>. But today I got the strict parsing <a href=\"https://github.com/pypa/packaging/pull/686\">merged</a> which also provides a higher-level API using richer object representations. All told, this part took me over 2.5 years to complete.</p><p>And with that, someone can tell me what their dependencies are, PyPI can tell me what wheels it has, and I can read what dependencies those wheels have. The next step is taking resolvelib and creating a resolver to generate the dependency graph. I&apos;m planning to make the design of my resolver code flexible so that you can do interesting things like resolve for the oldest dependencies as well as the newest (handy for testing the range of versions you claim you support), most and least specific wheels (so you can see what your actual platform restrictions are), and to be able to specify the platform details so you can resolve for a different platform than you&apos;re running on (handy if your production environment is different than your development one). Those last two are important to me for work purposes as it would allow me to create a resolver that only supported pure Python wheels which is necessary for WASI since there isn&apos;t extension module support for that platform (yet).</p>",
    "pub_date": "2023-08-19T00:30:42Z",
    "upd_date": "2023-08-19T00:30:42Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:40.620Z",
    "updated": "2023-10-09T09:34:40.620Z",
    "tags": [
      86,
      87
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 84,
  "fields": {
    "feed": 19,
    "title": "Differentiating between writing down dependencies to use packages and for packages themselves",
    "author": "Brett Cannon",
    "url": "https://snarky.ca/differentiating-between-writing-down-dependencies-to-use-packages-and-for-packages-themselves/",
    "image_url": "https://snarky.ca/content/images/2016/12/104_0419.JPG",
    "description": "<p>When my teammate Courtney <a href=\"https://devblogs.microsoft.com/python/python-package-management-proposal/\">evaluated various workflow tools for Python development to see how pip + venv compared</a>, she came back with a recommendation on using <a href=\"https://pip.pypa.io/en/stable/reference/requirements-file-format/\">pip&apos;s requirements files</a> as a way to record what people installed (and thus needed to run their code). As someone who prefers to</p>",
    "summary": "<p>When my teammate Courtney <a href=\"https://devblogs.microsoft.com/python/python-package-management-proposal/\">evaluated various workflow tools for Python development to see how pip + venv compared</a>, she came back with a recommendation on using <a href=\"https://pip.pypa.io/en/stable/reference/requirements-file-format/\">pip&apos;s requirements files</a> as a way to record what people installed (and thus needed to run their code). As someone who prefers to</p>",
    "content": "<p>When my teammate Courtney <a href=\"https://devblogs.microsoft.com/python/python-package-management-proposal/\">evaluated various workflow tools for Python development to see how pip + venv compared</a>, she came back with a recommendation on using <a href=\"https://pip.pypa.io/en/stable/reference/requirements-file-format/\">pip&apos;s requirements files</a> as a way to record what people installed (and thus needed to run their code). As someone who prefers to use standards rather than tool-specific or conventional solutions, I lamented how pip didn&apos;t have a way to install just dependencies listed in <code><a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/\">pyproject.toml</a></code> and its &#xa0;<a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#dependencies-optional-dependencies\"><code>project.dependencies</code> key</a>.</p><p>The immediate issue with my wish is <a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#specification\">the specification says that </a><code><a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#specification\">project.name</a></code><a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#specification\"> and </a><code><a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#specification\">project.version</a></code><a href=\"https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#specification\"> are required</a>. That makes using the <code>[project]</code> table in <code>pyproject.toml</code> feel clunky if all you want to do is use it to store the dependencies your code relies on to run since you would need at lest placeholder values for those two keys. The other issue is that it&apos;s fundamentally a misuse of that data, and for some reason it took a while for it to &quot;click&quot; in my head as to why. This blog post is meant to write down how I came to this conclusion.</p><p>For me, a lot of my coding is for packages that others will install. That means I&apos;m regularly listing the dependencies of my code in <code>project.dependencies</code> and then installing those dependencies to get my code to run (i.e., <code>py -m pip install -e .</code>). It even gets to the point that my testing requirements typically get listed in <code>project.optional-dependencies.tests</code> since <code>pyproject.toml</code> doesn&apos;t have an innate way to list development requirements. So writing down my dependencies in <code>project.dependencies</code> initially made sense to me as a way to record runtime dependencies for <strong>any</strong> code.</p><p>But then I thought about what the <code>[project]</code> table in <code>pyproject.toml</code> is truly meant for: as a <a href=\"https://toml.io/\">TOML</a> representation for the <a href=\"https://packaging.python.org/en/latest/specifications/core-metadata/\">core metadata of a distribution</a>. In that regard, the fact that I install what&apos;s listed in <code>project.dependencies</code> during development is just something <em>I</em> do, but that&apos;s not how <em>users</em> of my code use that information. For users, this information is just statically written in a wheel via a <code>METADATA</code> file. As such, what&apos;s in the <code>[project]</code> table is just data in a human-writable format that gets written into another format for inclusion in a wheel by some build back-end, all without the build back-end actually doing anything based on what&apos;s listed. This is the &quot;for packages&quot; bit we often think about when talk about <em>packaging</em> up some code.</p><p>That&apos;s very different compared to specifying the dependencies your code needs to run. Those sorts of dependencies end up being input to a resolver to figure out the full dependency graph of things you need installed. Once you have that complete list of dependencies you can then pass that list to an installer so you have everything you need to run your code. This is the &quot;using packages&quot; bit we often think about when we talk about <em>using packages</em> with our code.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">&#x1f4a1;</div><div class=\"kg-callout-text\">A <em>resolver</em> is something that figures out, from a list of requirements, what all of your actual dependencies are. Every installer has one since the dependencies you specify have their own dependencies, which have their own dependencies, etc. So a resolver figures out <strong>everything</strong> you need to install to make sure all the code you want installed can run. Pip&apos;s resolver uses <a href=\"https://pypi.org/project/resolvelib/\">resolvelib</a>.</div></div><p>So, one purpose of the list of dependencies is to just write down some metadata that ends up in your wheel about what you need to make some package run, but that&apos;s it; it&apos;s something for build back-ends to write out in some file in a different format. The other is how to list what you need to be installed for your code to run; it&apos;s something for an installer to use as input into a resolver to figure out the complete list of dependencies your code needs. One is written down in some file as-is, the other is used as input into an algorithm to expand on the list.</p><p>The funny thing is the reasoning for why these similar-looking, but very different meaning, bits of data are different was explained to me over a decade ago. Back in 2013, Donald Stufft wrote a blog post entitled, &quot;<a href=\"https://caremad.io/posts/2013/07/setup-vs-requirement/\">setup.py vs requirements.txt</a>&quot;, where he explained when to use which file. In the post, Donald argued that <code>setup.py</code> was where you put metadata for your package, while <code>requirements.txt</code> is where you wrote down what your app depended on. That made sense to me back when Donald wrote his post. But it turns out I had not thought about the fundamental differences because Donald&apos;s case involved totally different file formats compared to my case where it was going to be <code>pyproject.toml</code> regardless of the purpose.</p><p>So where does this realization leave us? At minimum, it means we still don&apos;t have a standardized replacement for <a href=\"https://pip.pypa.io/en/stable/reference/requirements-file-format/\">pip&apos;s requirements files</a> which has become the way the community writes down the requirements some code has on various packages. It might also mean we either need to define a new table for <code>pyproject.toml</code> for specifying the requirements necessary to run your code or we need a new file entirely separate from <code>pyproject.toml</code> for the the purposes of writing down what&apos;s necessary to run your code.</p>",
    "pub_date": "2023-08-11T23:37:39Z",
    "upd_date": "2023-08-11T23:37:39Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:40.770Z",
    "updated": "2023-10-09T09:34:40.770Z",
    "tags": [
      86,
      87
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 85,
  "fields": {
    "feed": 18,
    "title": "How to escape CSS selectors in JavaScript (#tilPost)",
    "author": null,
    "url": "https://www.stefanjudis.com/today-i-learned/how-to-escape-css-selectors-in-javascript/",
    "image_url": "https://res.cloudinary.com/dfcwuxv3l/image/upload/w_1280,h_669,c_fill,q_auto,f_auto/w_900,c_fit,co_rgb:232129,g_south_west,x_70,y_160,l_text:oswald_84_bold_line_spacing_-34:How%20to%20escape%20CSS%20selectors%20in%20JavaScript/w_900,c_fit,co_rgb:232129,g_north_west,x_70,y_540,l_text:ubuntu_38:%40stefanjudis/stefan-judis-website/social-image-with-new-dude",
    "description": "<div class=\"markdown\"><p>Here's a trick question: how would you select the following HTML element in JavaScript?</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Select me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Oddly, this element's id is a <code>#</code>. But as far as I can tell, even though it's uncommon it's still a perfectly valid HTML attribute. So, how would you query this element?</p>\n<p>You surely could use the good old <code>document.getElementById()</code>...</p>\n<pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>This works, but I rarely use <code>getElementById</code> because it limits me to select elements via an id. Duh! 😅</p>\n<p><code>document.querySelector</code>, on the other hand, is more flexible and allows any DOM element to be queried with a CSS selector.</p>\n<p>But can you select this &quot;hash id element&quot; with a CSS selector using <code>querySelector</code>? Turns out you can't.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'##'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: Document.querySelector: '##' is not a valid selector</span>\n</code></pre>\n<p>Unfortunately, <code>##</code> isn't a valid CSS selector, and I hear you say, <em>&quot;Come on Stefan, espace the second <code>#</code> and you're good to go!&quot;</em> and that's right, escaping the <code>#</code> character works.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#\\\\#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>But do you know all the characters that need to be escaped when you want to query a DOM element? Plenty of valid HTML attribute strings will throw an exception when used to query a DOM element.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.a:b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// throws because of the `:`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[href=@]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws because of the `@`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// throws because of the `[]`</span>\n</code></pre>\n<p>Manually escaping characters isn't a bulletproof solution, but today I learned there's a handy static method in the <code>CSS</code> JavaScript namespace to help with this exact problem — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape_static\"><code>CSS.escape()</code></a>.</p>\n<p><code>escape()</code> allows you to safely use whatever attribute values your HTML includes.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a:b'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \".a\\:b\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[href=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[href=\\@]\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \".\\[jooo\\]\"</span>\n</code></pre>\n<p>Good to know!</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>You might wonder how often you have to deal with these unusual attribute values. For example, <a href=\"https://react.dev/reference/react/useId\">the <code>useId</code> React hook</a> returns ids that are invalid as CSS selectors. That's one case already, and I bet there are plenty more!</p>\n</div></div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20How to escape CSS selectors in JavaScript\">\n            Reply to Stefan\n          </a>",
    "summary": "<div class=\"markdown\"><p>Here's a trick question: how would you select the following HTML element in JavaScript?</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Select me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Oddly, this element's id is a <code>#</code>. But as far as I can tell, even though it's uncommon it's still a perfectly valid HTML attribute. So, how would you query this element?</p>\n<p>You surely could use the good old <code>document.getElementById()</code>...</p>\n<pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>This works, but I rarely use <code>getElementById</code> because it limits me to select elements via an id. Duh! 😅</p>\n<p><code>document.querySelector</code>, on the other hand, is more flexible and allows any DOM element to be queried with a CSS selector.</p>\n<p>But can you select this &quot;hash id element&quot; with a CSS selector using <code>querySelector</code>? Turns out you can't.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'##'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: Document.querySelector: '##' is not a valid selector</span>\n</code></pre>\n<p>Unfortunately, <code>##</code> isn't a valid CSS selector, and I hear you say, <em>&quot;Come on Stefan, espace the second <code>#</code> and you're good to go!&quot;</em> and that's right, escaping the <code>#</code> character works.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#\\\\#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>But do you know all the characters that need to be escaped when you want to query a DOM element? Plenty of valid HTML attribute strings will throw an exception when used to query a DOM element.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.a:b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// throws because of the `:`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[href=@]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws because of the `@`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// throws because of the `[]`</span>\n</code></pre>\n<p>Manually escaping characters isn't a bulletproof solution, but today I learned there's a handy static method in the <code>CSS</code> JavaScript namespace to help with this exact problem — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape_static\"><code>CSS.escape()</code></a>.</p>\n<p><code>escape()</code> allows you to safely use whatever attribute values your HTML includes.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a:b'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \".a\\:b\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[href=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[href=\\@]\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \".\\[jooo\\]\"</span>\n</code></pre>\n<p>Good to know!</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>You might wonder how often you have to deal with these unusual attribute values. For example, <a href=\"https://react.dev/reference/react/useId\">the <code>useId</code> React hook</a> returns ids that are invalid as CSS selectors. That's one case already, and I bet there are plenty more!</p>\n</div></div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20How to escape CSS selectors in JavaScript\">\n            Reply to Stefan\n          </a>",
    "content": "<div class=\"markdown\"><p>Here's a trick question: how would you select the following HTML element in JavaScript?</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Select me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Oddly, this element's id is a <code>#</code>. But as far as I can tell, even though it's uncommon it's still a perfectly valid HTML attribute. So, how would you query this element?</p>\n<p>You surely could use the good old <code>document.getElementById()</code>...</p>\n<pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>This works, but I rarely use <code>getElementById</code> because it limits me to select elements via an id. Duh! 😅</p>\n<p><code>document.querySelector</code>, on the other hand, is more flexible and allows any DOM element to be queried with a CSS selector.</p>\n<p>But can you select this &quot;hash id element&quot; with a CSS selector using <code>querySelector</code>? Turns out you can't.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'##'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: Document.querySelector: '##' is not a valid selector</span>\n</code></pre>\n<p>Unfortunately, <code>##</code> isn't a valid CSS selector, and I hear you say, <em>&quot;Come on Stefan, espace the second <code>#</code> and you're good to go!&quot;</em> and that's right, escaping the <code>#</code> character works.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#\\\\#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;div id=\"#\">...</span>\n</code></pre>\n<p>But do you know all the characters that need to be escaped when you want to query a DOM element? Plenty of valid HTML attribute strings will throw an exception when used to query a DOM element.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.a:b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// throws because of the `:`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[href=@]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws because of the `@`</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// throws because of the `[]`</span>\n</code></pre>\n<p>Manually escaping characters isn't a bulletproof solution, but today I learned there's a handy static method in the <code>CSS</code> JavaScript namespace to help with this exact problem — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape_static\"><code>CSS.escape()</code></a>.</p>\n<p><code>escape()</code> allows you to safely use whatever attribute values your HTML includes.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a:b'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// \".a\\:b\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[href=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[href=\\@]\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[jooo]'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \".\\[jooo\\]\"</span>\n</code></pre>\n<p>Good to know!</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>You might wonder how often you have to deal with these unusual attribute values. For example, <a href=\"https://react.dev/reference/react/useId\">the <code>useId</code> React hook</a> returns ids that are invalid as CSS selectors. That's one case already, and I bet there are plenty more!</p>\n</div></div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20How to escape CSS selectors in JavaScript\">\n            Reply to Stefan\n          </a>",
    "pub_date": "2023-09-21T22:00:00Z",
    "upd_date": "2023-09-21T22:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:41.613Z",
    "updated": "2023-10-09T09:34:41.613Z",
    "tags": [
      89,
      90,
      88
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 86,
  "fields": {
    "feed": 18,
    "title": "Web Weekly #111 (#blogPost)",
    "author": null,
    "url": "https://www.stefanjudis.com/blog/web-weekly-111/",
    "image_url": "https://www.stefanjudis.com/newsletter-social.png",
    "description": "<div class=\"markdown\"><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#happy-monday%2C-party-people!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"happy-monday%2C-party-people!\">Happy Monday, party people!</h2></div><p>Should your JS projects always include a build step? Is the <code>dotenv</code> npm package now obsolete? And how could you create advanced transitions with the <code>linear()</code> easing function?</p>\n<p>This week's Web Weekly includes all the answers and much more. Enjoy!</p>\n<hr /><p>I had coffee with a friend the other day, and unfortunately, she's looking for a new job. She entered tech, joined a friendly team with wonderful colleagues, and then... her company went bust.</p>\n<p>Now, she has a year of experience, and as it turns out, finding a junior web dev position is tough.</p>\n<p>When I started, I was incredibly lucky. A friend introduced me to a CTO, I &quot;randomly&quot; got an internship, and just like that, I entered a team with the kindest people teaching me all the things I didn't learn in Uni. It was this team that prepared me for my career in tech. (🫶 4Waisenkinder 🫶)</p>\n<p>But this was 12 years ago, and while chatting with my friend, I struggled to give actionable advice on landing her next junior position. I promised to ask my network, but what else could I tell her?</p>\n<p>Where did you start? Did you send hundreds of applications until one worked out? Did you go to meetups and &quot;networked&quot; your a$$ off? 🫣</p>\n<p><strong>If you have tips or stories to share, <a href=\"mailto:stefanjudis@gmail.com\">reply</a>, and I'll forward them to my friend.</strong></p>\n<hr /><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#quick-links\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"quick-links\">Quick links</h2></div><ul>\n<li><a href=\"https://usesthis.com/categories/developer/\">&quot;Uses This&quot; is an entire site full of interviews all about people's stacks</a>. I love reading about software and hardware gadgets.</li>\n<li>New on the blog: <a href=\"https://www.stefanjudis.com/blog/validate-urls-in-javascript/\">A new JavaScript method to validate URLs</a>.</li>\n<li>🦄 If you like this newsletter, <a href=\"https://unicornclub.dev/go/webweekly\">you'll love the Unicorn Club newsletter</a>, too. 😉</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-js-library-without-a-build-step\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-js-library-without-a-build-step\">A JS library without a build step</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx on GitHub — It&apos;s a 3701 lines long file.\" height=\"406\" src=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>More and more people are talking about <a href=\"https://htmx.org/\">htmx</a> lately. I don't think it's more than an underdog for now, but it comes with some refreshing aspects.</p>\n<p>Mainly, it's HTML-first. If your server endpoints can spit out HTML, you could load htmx via a good old <code>script</code> tag and forget about writing JS. Add event listeners, talk to APIs, swap out HTML content — it's all just an HTML attribute away.</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx markup example.\" height=\"316\" src=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>And it's funny because htmx is basically just a 3701 line long JS file. It gives me strong jQuery vibes. There's no TS, <code>npm start</code> script or any other jazz to run or build it. It's Vanilla JS. Not more and not less.</p>\n<p>Alexander Petros explains all the benefits of this approach.</p>\n<p><a class=\"btn btn__small\" href=\"https://htmx.org/essays/no-build-step/\">Simplify your stack</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#add-more-cache!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"add-more-cache!\">Add more cache!</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Even so, if you consider yourself a performance scrutineer, it should bother you that you&apos;re leaving some speed on the table by sticking with these defaults. Your caching could be a little more aggressive, and in my opinion, it&apos;s a no-brainer for particular types of assets.\" height=\"243\" src=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Alex MacArthur explains how Vercel's and Netlify's default caching headers can be improved for hashed assets. It's an easy but worthwhile fix for all your <code>styles.19dls9a.css</code> files!</p>\n<p><a class=\"btn btn__small\" href=\"https://www.macarthur.me/posts/more-aggressive-cache-headers\">Cache, cache, cache!</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#500%2B-css-loaders\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"500%2B-css-loaders\">500+ CSS loaders</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"CSS Loaders — 500+ single element loaders\" height=\"310\" src=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I've no words for Temani Afif's collection of single element loading spinners. Browse around! When I do, I can only scratch my head, wondering how to do this with a single element.</p>\n<p><a class=\"btn btn__small\" href=\"https://css-loaders.com/\">Find your next loading spinner</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#design-inspiration\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"design-inspiration\">Design inspiration</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two website screenshots in a collection of design inspiration.\" height=\"450\" src=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>When looking for design inspiration, I usually browse Dribbble, but recently, I discovered &quot;One Page Love&quot;. It's a wonderful resource to find fancy web design.</p>\n<p><a class=\"btn btn__small\" href=\"https://onepagelove.com/\">Get inspired</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#the-wonderful-weird-web-%E2%80%93-rocumentaries\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"the-wonderful-weird-web-%E2%80%93-rocumentaries\">The wonderful weird web – Rocumentaries</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Curated links to the very best documentaries\" height=\"383\" src=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I'd love to watch less junk. Especially when binging Netflix, very few shows are very good.</p>\n<p>And disclaimer: I haven't checked the quality of the documentaries linked here, but I love the idea of a single place with good things to watch.</p>\n<p><a class=\"btn btn__small\" href=\"https://rocumentaries.com/\">Stop watching junk</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>What are your favorite internet corners? <a href=\"mailto:stefanjudis@gmail.com\">Send them my way</a>, and I'll include them in Web Weekly!</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#educational%2C-sensational%2C-inspirational%2C-foundational\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"educational%2C-sensational%2C-inspirational%2C-foundational\">Educational, Sensational, Inspirational, Foundational</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Educational Sensational Inspirational Foundational\" height=\"460\" src=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Zach Leatherman put together a collection of timeless web dev articles. It only includes a few of the latest but many of the greatest articles of all time.</p>\n<p><a class=\"btn btn__small\" href=\"https://esif.dev/\">Find timeless web articles</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-%22minor%22-node-release-with-a-big-impact\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-%22minor%22-node-release-with-a-big-impact\">A &quot;minor&quot; Node release with a big impact</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Example showing the --env-file flag for Node.js\" height=\"600\" src=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://www.npmjs.com/package/dotenv\">The <code>dotenv</code> package</a> is downloaded 30 million times per week, and may have become redundant. Node <code>20.6</code> now supports reading <code>.env</code> files with <a href=\"https://nodejs.org/dist/latest-v20.x/docs/api/cli.html#--env-fileconfig\">the <code>--env-file</code> flag</a>!</p>\n<p>The feature's still under <code>active development</code>, but hallelujah — I'll clean up some deps now!</p>\n<p><a class=\"btn btn__small\" href=\"https://nodejs.org/en/blog/release/v20.6.0\">Drop dotenv</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#better-design-and-accessibility\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"better-design-and-accessibility\">Better design and accessibility</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Different menu button designs including &quot;hamburger&quot;, &quot;oreos&quot;, &quot;kebap&quot; and more. The point is though that it&apos;s impossible to know what&apos;s behind these button icons.\" height=\"496\" src=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Often, we're trying to build accessible things, but how often do we really check things with assistive technology? I should do it more often and also level up my skills in this area!</p>\n<p>I admire Eric W. Bailey for taking screenreader lessons. And I admire him even more for writing down all his findings.</p>\n<p>This post is a nice deep dive into hamburger icons, context and assistive tech. 💯</p>\n<p><a class=\"btn btn__small\" href=\"https://ericwbailey.website/published/equivalent-experience-can-cut-both-ways/\">Build good stuff</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#random-mdn-%E2%80%93-labeled-js-loops\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"random-mdn-%E2%80%93-labeled-js-loops\">Random MDN – Labeled JS loops</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two nested JavaScript for loops.\" height=\"476\" src=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>From the unlimited MDN knowledge archive...</p>\n<p>Did you know that you can label your JS loops? Now you do!</p>\n<p><a class=\"btn btn__small\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label\">Label your loops</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">TIL recap – <code>reduce</code>'s initial value is optional</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A reduce loop that doesn&apos;t define an initial value\" height=\"613\" src=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Here's a little fun fact about <code>reduce</code>. The second parameter, the initial value, is optional. 😲</p>\n<p><a class=\"btn btn__small\" href=\"https://www.stefanjudis.com/today-i-learned/the-array-prototype-reduces-initial-value-is-optional/\">Safe one reduce loop</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more short web development learnings in <a href=\"https://www.stefanjudis.com/today-i-learned/\">my &quot;Today I learned&quot; section</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#new-to-the-platform\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"new-to-the-platform\">New to the platform</h2></div><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\"><code>Object.groupBy()</code></a> will ship with Chromium 117. Firefox Nightly and Safari Tech Preview include it, too. 🎉It's such a tiny thing, but oh boy, am I looking forward to stopping writing  grouping logic!</li>\n<li>The Chrome bug for <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid\">the <code>:user-invalid</code></a> implementation was closed. Let's hope it'll hit stable soon because Chromium is the only engine missing this handy validation pseudo-class. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1156069#c24\">Chrome bug</a>)</li>\n<li>Firefox is catching up and looking into prototyping <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap\"><code>text-wrap: balance</code></a>.</li>\n<li><a href=\"https://www.stefanjudis.com/notes/new-in-css-relative-colors/\">CSS Relative colors</a> landed in Chrome Canary. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1274133#c11\">Chrome bug</a>)</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#three-valuable-projects-to-have-a-look-at\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"three-valuable-projects-to-have-a-look-at\">Three valuable projects to have a look at</h2></div><ul>\n<li><a href=\"https://github.com/flackr/scroll-timeline\">flackr/scroll-timeline</a> – A polyfill of <code>ScrollTimeline</code> and <code>ViewTimeline</code>.</li>\n<li><a href=\"https://github.com/oven-sh/bun\">oven-sh/bun</a> – A JavaScript runtime, bundler, test runner, and package manager! And they just hit <code>1.0</code>. 🎉</li>\n<li><a href=\"https://github.com/tauri-apps/tauri\">tauri-apps/tauri</a> – Build desktop applications with a web frontend and Rust sprinkles.</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-new-tiny-helper\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-new-tiny-helper\">A new Tiny Helper</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"The linear() generator showing an editors, curves and a CSS linear output.\" height=\"550\" src=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://caniuse.com/mdn-css_types_easing-function_linear-function\">Chromiums and Firefox support the relatively new CSS easing function <code>linear()</code></a>. But you probably don't want to write such easing by hand.👇</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A complex CSS linear easing definition.\" height=\"423\" src=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Jake Archibald thought the same and released a handy tool to create the most bouncy and complex transitions the web has ever seen!</p>\n<p><a class=\"btn btn__small\" href=\"https://linear-easing-generator.netlify.app/?ref=tiny-helpers\">Create some bouncy CSS transitions</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more single-purpose online tools on <a href=\"https://tiny-helpers.dev/\">tiny-helpers.dev</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#thought-of-the-week\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"thought-of-the-week\">Thought of the week</h2></div><p><a href=\"https://chelseatroy.com/2023/04/15/how-do-tech-companies-make-money/\">It feels sad, but Chelsea Troy is very right with the following take</a>.</p>\n<p>The internet is full of great things. Things that people put hours and hours into. And we can curse ads plastering the web as much as we want.</p>\n<p>Unless we all start paying for what we read, watch and listen to, ads are the main driver for a free internet full of greatness.</p>\n<div class=\"highlightBox quote margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-quote\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <blockquote>\n<p>Ads keep the internet free; without them, the internet is a luxury good.</p>\n</blockquote>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#this-is-all%2C-friends!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"this-is-all%2C-friends!\">This is all, friends!</h2></div><p>Writing Web Weekly takes me roughly five hours every week, and I pay real money for sending over 4.1k emails. If you enjoy it, <a href=\"https://www.patreon.com/stefanjudis\">consider supporting me on Patreon</a>. ♥️</p>\n<p>Or tell your friends about it:</p>\n<ul>\n<li><a href=\"https://twitter.com/intent/tweet?text=I%20like%20@stefanjudis%20weekly%20newsletter%20because%20...&amp;url=https://www.stefanjudis.com/blog/web-weekly-60/\">Share it on Twitter</a>.</li>\n<li>Forward it to someone who might like it.</li>\n</ul>\n<p>If you're not a subscriber, <a href=\"https://webweekly.email\">change that</a>! 😉</p>\n<hr /><p>And with that, take care of yourself - mentally, physically, and emotionally.</p>\n<p>I'll see you next week! 👋</p>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20Web Weekly #111\">\n            Reply to Stefan\n          </a>",
    "summary": "<div class=\"markdown\"><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#happy-monday%2C-party-people!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"happy-monday%2C-party-people!\">Happy Monday, party people!</h2></div><p>Should your JS projects always include a build step? Is the <code>dotenv</code> npm package now obsolete? And how could you create advanced transitions with the <code>linear()</code> easing function?</p>\n<p>This week's Web Weekly includes all the answers and much more. Enjoy!</p>\n<hr /><p>I had coffee with a friend the other day, and unfortunately, she's looking for a new job. She entered tech, joined a friendly team with wonderful colleagues, and then... her company went bust.</p>\n<p>Now, she has a year of experience, and as it turns out, finding a junior web dev position is tough.</p>\n<p>When I started, I was incredibly lucky. A friend introduced me to a CTO, I &quot;randomly&quot; got an internship, and just like that, I entered a team with the kindest people teaching me all the things I didn't learn in Uni. It was this team that prepared me for my career in tech. (🫶 4Waisenkinder 🫶)</p>\n<p>But this was 12 years ago, and while chatting with my friend, I struggled to give actionable advice on landing her next junior position. I promised to ask my network, but what else could I tell her?</p>\n<p>Where did you start? Did you send hundreds of applications until one worked out? Did you go to meetups and &quot;networked&quot; your a$$ off? 🫣</p>\n<p><strong>If you have tips or stories to share, <a href=\"mailto:stefanjudis@gmail.com\">reply</a>, and I'll forward them to my friend.</strong></p>\n<hr /><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#quick-links\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"quick-links\">Quick links</h2></div><ul>\n<li><a href=\"https://usesthis.com/categories/developer/\">&quot;Uses This&quot; is an entire site full of interviews all about people's stacks</a>. I love reading about software and hardware gadgets.</li>\n<li>New on the blog: <a href=\"https://www.stefanjudis.com/blog/validate-urls-in-javascript/\">A new JavaScript method to validate URLs</a>.</li>\n<li>🦄 If you like this newsletter, <a href=\"https://unicornclub.dev/go/webweekly\">you'll love the Unicorn Club newsletter</a>, too. 😉</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-js-library-without-a-build-step\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-js-library-without-a-build-step\">A JS library without a build step</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx on GitHub — It&apos;s a 3701 lines long file.\" height=\"406\" src=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>More and more people are talking about <a href=\"https://htmx.org/\">htmx</a> lately. I don't think it's more than an underdog for now, but it comes with some refreshing aspects.</p>\n<p>Mainly, it's HTML-first. If your server endpoints can spit out HTML, you could load htmx via a good old <code>script</code> tag and forget about writing JS. Add event listeners, talk to APIs, swap out HTML content — it's all just an HTML attribute away.</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx markup example.\" height=\"316\" src=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>And it's funny because htmx is basically just a 3701 line long JS file. It gives me strong jQuery vibes. There's no TS, <code>npm start</code> script or any other jazz to run or build it. It's Vanilla JS. Not more and not less.</p>\n<p>Alexander Petros explains all the benefits of this approach.</p>\n<p><a class=\"btn btn__small\" href=\"https://htmx.org/essays/no-build-step/\">Simplify your stack</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#add-more-cache!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"add-more-cache!\">Add more cache!</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Even so, if you consider yourself a performance scrutineer, it should bother you that you&apos;re leaving some speed on the table by sticking with these defaults. Your caching could be a little more aggressive, and in my opinion, it&apos;s a no-brainer for particular types of assets.\" height=\"243\" src=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Alex MacArthur explains how Vercel's and Netlify's default caching headers can be improved for hashed assets. It's an easy but worthwhile fix for all your <code>styles.19dls9a.css</code> files!</p>\n<p><a class=\"btn btn__small\" href=\"https://www.macarthur.me/posts/more-aggressive-cache-headers\">Cache, cache, cache!</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#500%2B-css-loaders\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"500%2B-css-loaders\">500+ CSS loaders</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"CSS Loaders — 500+ single element loaders\" height=\"310\" src=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I've no words for Temani Afif's collection of single element loading spinners. Browse around! When I do, I can only scratch my head, wondering how to do this with a single element.</p>\n<p><a class=\"btn btn__small\" href=\"https://css-loaders.com/\">Find your next loading spinner</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#design-inspiration\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"design-inspiration\">Design inspiration</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two website screenshots in a collection of design inspiration.\" height=\"450\" src=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>When looking for design inspiration, I usually browse Dribbble, but recently, I discovered &quot;One Page Love&quot;. It's a wonderful resource to find fancy web design.</p>\n<p><a class=\"btn btn__small\" href=\"https://onepagelove.com/\">Get inspired</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#the-wonderful-weird-web-%E2%80%93-rocumentaries\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"the-wonderful-weird-web-%E2%80%93-rocumentaries\">The wonderful weird web – Rocumentaries</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Curated links to the very best documentaries\" height=\"383\" src=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I'd love to watch less junk. Especially when binging Netflix, very few shows are very good.</p>\n<p>And disclaimer: I haven't checked the quality of the documentaries linked here, but I love the idea of a single place with good things to watch.</p>\n<p><a class=\"btn btn__small\" href=\"https://rocumentaries.com/\">Stop watching junk</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>What are your favorite internet corners? <a href=\"mailto:stefanjudis@gmail.com\">Send them my way</a>, and I'll include them in Web Weekly!</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#educational%2C-sensational%2C-inspirational%2C-foundational\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"educational%2C-sensational%2C-inspirational%2C-foundational\">Educational, Sensational, Inspirational, Foundational</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Educational Sensational Inspirational Foundational\" height=\"460\" src=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Zach Leatherman put together a collection of timeless web dev articles. It only includes a few of the latest but many of the greatest articles of all time.</p>\n<p><a class=\"btn btn__small\" href=\"https://esif.dev/\">Find timeless web articles</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-%22minor%22-node-release-with-a-big-impact\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-%22minor%22-node-release-with-a-big-impact\">A &quot;minor&quot; Node release with a big impact</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Example showing the --env-file flag for Node.js\" height=\"600\" src=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://www.npmjs.com/package/dotenv\">The <code>dotenv</code> package</a> is downloaded 30 million times per week, and may have become redundant. Node <code>20.6</code> now supports reading <code>.env</code> files with <a href=\"https://nodejs.org/dist/latest-v20.x/docs/api/cli.html#--env-fileconfig\">the <code>--env-file</code> flag</a>!</p>\n<p>The feature's still under <code>active development</code>, but hallelujah — I'll clean up some deps now!</p>\n<p><a class=\"btn btn__small\" href=\"https://nodejs.org/en/blog/release/v20.6.0\">Drop dotenv</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#better-design-and-accessibility\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"better-design-and-accessibility\">Better design and accessibility</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Different menu button designs including &quot;hamburger&quot;, &quot;oreos&quot;, &quot;kebap&quot; and more. The point is though that it&apos;s impossible to know what&apos;s behind these button icons.\" height=\"496\" src=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Often, we're trying to build accessible things, but how often do we really check things with assistive technology? I should do it more often and also level up my skills in this area!</p>\n<p>I admire Eric W. Bailey for taking screenreader lessons. And I admire him even more for writing down all his findings.</p>\n<p>This post is a nice deep dive into hamburger icons, context and assistive tech. 💯</p>\n<p><a class=\"btn btn__small\" href=\"https://ericwbailey.website/published/equivalent-experience-can-cut-both-ways/\">Build good stuff</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#random-mdn-%E2%80%93-labeled-js-loops\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"random-mdn-%E2%80%93-labeled-js-loops\">Random MDN – Labeled JS loops</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two nested JavaScript for loops.\" height=\"476\" src=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>From the unlimited MDN knowledge archive...</p>\n<p>Did you know that you can label your JS loops? Now you do!</p>\n<p><a class=\"btn btn__small\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label\">Label your loops</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">TIL recap – <code>reduce</code>'s initial value is optional</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A reduce loop that doesn&apos;t define an initial value\" height=\"613\" src=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Here's a little fun fact about <code>reduce</code>. The second parameter, the initial value, is optional. 😲</p>\n<p><a class=\"btn btn__small\" href=\"https://www.stefanjudis.com/today-i-learned/the-array-prototype-reduces-initial-value-is-optional/\">Safe one reduce loop</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more short web development learnings in <a href=\"https://www.stefanjudis.com/today-i-learned/\">my &quot;Today I learned&quot; section</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#new-to-the-platform\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"new-to-the-platform\">New to the platform</h2></div><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\"><code>Object.groupBy()</code></a> will ship with Chromium 117. Firefox Nightly and Safari Tech Preview include it, too. 🎉It's such a tiny thing, but oh boy, am I looking forward to stopping writing  grouping logic!</li>\n<li>The Chrome bug for <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid\">the <code>:user-invalid</code></a> implementation was closed. Let's hope it'll hit stable soon because Chromium is the only engine missing this handy validation pseudo-class. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1156069#c24\">Chrome bug</a>)</li>\n<li>Firefox is catching up and looking into prototyping <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap\"><code>text-wrap: balance</code></a>.</li>\n<li><a href=\"https://www.stefanjudis.com/notes/new-in-css-relative-colors/\">CSS Relative colors</a> landed in Chrome Canary. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1274133#c11\">Chrome bug</a>)</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#three-valuable-projects-to-have-a-look-at\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"three-valuable-projects-to-have-a-look-at\">Three valuable projects to have a look at</h2></div><ul>\n<li><a href=\"https://github.com/flackr/scroll-timeline\">flackr/scroll-timeline</a> – A polyfill of <code>ScrollTimeline</code> and <code>ViewTimeline</code>.</li>\n<li><a href=\"https://github.com/oven-sh/bun\">oven-sh/bun</a> – A JavaScript runtime, bundler, test runner, and package manager! And they just hit <code>1.0</code>. 🎉</li>\n<li><a href=\"https://github.com/tauri-apps/tauri\">tauri-apps/tauri</a> – Build desktop applications with a web frontend and Rust sprinkles.</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-new-tiny-helper\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-new-tiny-helper\">A new Tiny Helper</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"The linear() generator showing an editors, curves and a CSS linear output.\" height=\"550\" src=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://caniuse.com/mdn-css_types_easing-function_linear-function\">Chromiums and Firefox support the relatively new CSS easing function <code>linear()</code></a>. But you probably don't want to write such easing by hand.👇</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A complex CSS linear easing definition.\" height=\"423\" src=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Jake Archibald thought the same and released a handy tool to create the most bouncy and complex transitions the web has ever seen!</p>\n<p><a class=\"btn btn__small\" href=\"https://linear-easing-generator.netlify.app/?ref=tiny-helpers\">Create some bouncy CSS transitions</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more single-purpose online tools on <a href=\"https://tiny-helpers.dev/\">tiny-helpers.dev</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#thought-of-the-week\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"thought-of-the-week\">Thought of the week</h2></div><p><a href=\"https://chelseatroy.com/2023/04/15/how-do-tech-companies-make-money/\">It feels sad, but Chelsea Troy is very right with the following take</a>.</p>\n<p>The internet is full of great things. Things that people put hours and hours into. And we can curse ads plastering the web as much as we want.</p>\n<p>Unless we all start paying for what we read, watch and listen to, ads are the main driver for a free internet full of greatness.</p>\n<div class=\"highlightBox quote margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-quote\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <blockquote>\n<p>Ads keep the internet free; without them, the internet is a luxury good.</p>\n</blockquote>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#this-is-all%2C-friends!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"this-is-all%2C-friends!\">This is all, friends!</h2></div><p>Writing Web Weekly takes me roughly five hours every week, and I pay real money for sending over 4.1k emails. If you enjoy it, <a href=\"https://www.patreon.com/stefanjudis\">consider supporting me on Patreon</a>. ♥️</p>\n<p>Or tell your friends about it:</p>\n<ul>\n<li><a href=\"https://twitter.com/intent/tweet?text=I%20like%20@stefanjudis%20weekly%20newsletter%20because%20...&amp;url=https://www.stefanjudis.com/blog/web-weekly-60/\">Share it on Twitter</a>.</li>\n<li>Forward it to someone who might like it.</li>\n</ul>\n<p>If you're not a subscriber, <a href=\"https://webweekly.email\">change that</a>! 😉</p>\n<hr /><p>And with that, take care of yourself - mentally, physically, and emotionally.</p>\n<p>I'll see you next week! 👋</p>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20Web Weekly #111\">\n            Reply to Stefan\n          </a>",
    "content": "<div class=\"markdown\"><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#happy-monday%2C-party-people!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"happy-monday%2C-party-people!\">Happy Monday, party people!</h2></div><p>Should your JS projects always include a build step? Is the <code>dotenv</code> npm package now obsolete? And how could you create advanced transitions with the <code>linear()</code> easing function?</p>\n<p>This week's Web Weekly includes all the answers and much more. Enjoy!</p>\n<hr /><p>I had coffee with a friend the other day, and unfortunately, she's looking for a new job. She entered tech, joined a friendly team with wonderful colleagues, and then... her company went bust.</p>\n<p>Now, she has a year of experience, and as it turns out, finding a junior web dev position is tough.</p>\n<p>When I started, I was incredibly lucky. A friend introduced me to a CTO, I &quot;randomly&quot; got an internship, and just like that, I entered a team with the kindest people teaching me all the things I didn't learn in Uni. It was this team that prepared me for my career in tech. (🫶 4Waisenkinder 🫶)</p>\n<p>But this was 12 years ago, and while chatting with my friend, I struggled to give actionable advice on landing her next junior position. I promised to ask my network, but what else could I tell her?</p>\n<p>Where did you start? Did you send hundreds of applications until one worked out? Did you go to meetups and &quot;networked&quot; your a$$ off? 🫣</p>\n<p><strong>If you have tips or stories to share, <a href=\"mailto:stefanjudis@gmail.com\">reply</a>, and I'll forward them to my friend.</strong></p>\n<hr /><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#quick-links\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"quick-links\">Quick links</h2></div><ul>\n<li><a href=\"https://usesthis.com/categories/developer/\">&quot;Uses This&quot; is an entire site full of interviews all about people's stacks</a>. I love reading about software and hardware gadgets.</li>\n<li>New on the blog: <a href=\"https://www.stefanjudis.com/blog/validate-urls-in-javascript/\">A new JavaScript method to validate URLs</a>.</li>\n<li>🦄 If you like this newsletter, <a href=\"https://unicornclub.dev/go/webweekly\">you'll love the Unicorn Club newsletter</a>, too. 😉</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-js-library-without-a-build-step\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-js-library-without-a-build-step\">A JS library without a build step</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx on GitHub — It&apos;s a 3701 lines long file.\" height=\"406\" src=\"https://images.ctfassets.net/f20lfrunubsq/4CMrX6kg1n4omcOJA7dKUd/4028e86a32a0c00be8bc73282a201c4e/Screenshot_2023-09-11_at_07.18.15.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>More and more people are talking about <a href=\"https://htmx.org/\">htmx</a> lately. I don't think it's more than an underdog for now, but it comes with some refreshing aspects.</p>\n<p>Mainly, it's HTML-first. If your server endpoints can spit out HTML, you could load htmx via a good old <code>script</code> tag and forget about writing JS. Add event listeners, talk to APIs, swap out HTML content — it's all just an HTML attribute away.</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Htmx markup example.\" height=\"316\" src=\"https://images.ctfassets.net/f20lfrunubsq/77Ax9EZNUzPHw0zQQl5N4Q/ddda038530d9b9bc899d2ef1c7ea5a49/Screenshot_2023-09-11_at_07.23.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>And it's funny because htmx is basically just a 3701 line long JS file. It gives me strong jQuery vibes. There's no TS, <code>npm start</code> script or any other jazz to run or build it. It's Vanilla JS. Not more and not less.</p>\n<p>Alexander Petros explains all the benefits of this approach.</p>\n<p><a class=\"btn btn__small\" href=\"https://htmx.org/essays/no-build-step/\">Simplify your stack</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#add-more-cache!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"add-more-cache!\">Add more cache!</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Even so, if you consider yourself a performance scrutineer, it should bother you that you&apos;re leaving some speed on the table by sticking with these defaults. Your caching could be a little more aggressive, and in my opinion, it&apos;s a no-brainer for particular types of assets.\" height=\"243\" src=\"https://images.ctfassets.net/f20lfrunubsq/4jxBljGjVpyCcfklVsYQjv/c129508eaa79d36696be8b97d698e8c2/Screenshot_2023-09-11_at_07.09.02.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Alex MacArthur explains how Vercel's and Netlify's default caching headers can be improved for hashed assets. It's an easy but worthwhile fix for all your <code>styles.19dls9a.css</code> files!</p>\n<p><a class=\"btn btn__small\" href=\"https://www.macarthur.me/posts/more-aggressive-cache-headers\">Cache, cache, cache!</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#500%2B-css-loaders\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"500%2B-css-loaders\">500+ CSS loaders</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"CSS Loaders — 500+ single element loaders\" height=\"310\" src=\"https://images.ctfassets.net/f20lfrunubsq/49roP8seGPtsuR7ThJSRFt/5b7cb1cbc24a34ebb24291f51bc55e3c/Screenshot_2023-09-10_at_20.47.58.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I've no words for Temani Afif's collection of single element loading spinners. Browse around! When I do, I can only scratch my head, wondering how to do this with a single element.</p>\n<p><a class=\"btn btn__small\" href=\"https://css-loaders.com/\">Find your next loading spinner</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#design-inspiration\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"design-inspiration\">Design inspiration</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two website screenshots in a collection of design inspiration.\" height=\"450\" src=\"https://images.ctfassets.net/f20lfrunubsq/2ZTr9fdHoEqivfKIVfX8fC/b52386230d8f175f3827c79d660306d3/Screenshot_2023-09-11_at_06.52.22.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>When looking for design inspiration, I usually browse Dribbble, but recently, I discovered &quot;One Page Love&quot;. It's a wonderful resource to find fancy web design.</p>\n<p><a class=\"btn btn__small\" href=\"https://onepagelove.com/\">Get inspired</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#the-wonderful-weird-web-%E2%80%93-rocumentaries\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"the-wonderful-weird-web-%E2%80%93-rocumentaries\">The wonderful weird web – Rocumentaries</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Curated links to the very best documentaries\" height=\"383\" src=\"https://images.ctfassets.net/f20lfrunubsq/yMburY9jCnBOyOQf5kQ9S/7ca57ba77d4dac18621c4916939bad9d/Screenshot_2023-09-10_at_20.37.52.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>I'd love to watch less junk. Especially when binging Netflix, very few shows are very good.</p>\n<p>And disclaimer: I haven't checked the quality of the documentaries linked here, but I love the idea of a single place with good things to watch.</p>\n<p><a class=\"btn btn__small\" href=\"https://rocumentaries.com/\">Stop watching junk</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>What are your favorite internet corners? <a href=\"mailto:stefanjudis@gmail.com\">Send them my way</a>, and I'll include them in Web Weekly!</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#educational%2C-sensational%2C-inspirational%2C-foundational\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"educational%2C-sensational%2C-inspirational%2C-foundational\">Educational, Sensational, Inspirational, Foundational</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Educational Sensational Inspirational Foundational\" height=\"460\" src=\"https://images.ctfassets.net/f20lfrunubsq/2cF6DQZSkJJ0YTbQ9Eo6Kl/b2cb7d42225f1e1e59030dd9a9319618/Screenshot_2023-09-11_at_06.55.04.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Zach Leatherman put together a collection of timeless web dev articles. It only includes a few of the latest but many of the greatest articles of all time.</p>\n<p><a class=\"btn btn__small\" href=\"https://esif.dev/\">Find timeless web articles</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-%22minor%22-node-release-with-a-big-impact\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-%22minor%22-node-release-with-a-big-impact\">A &quot;minor&quot; Node release with a big impact</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Example showing the --env-file flag for Node.js\" height=\"600\" src=\"https://images.ctfassets.net/f20lfrunubsq/54QX41G0ixUCwMP3IbyL7Z/0ab5eccbca379ec0553b8aa93d93472b/Screenshot_2023-09-10_at_20.04.30.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://www.npmjs.com/package/dotenv\">The <code>dotenv</code> package</a> is downloaded 30 million times per week, and may have become redundant. Node <code>20.6</code> now supports reading <code>.env</code> files with <a href=\"https://nodejs.org/dist/latest-v20.x/docs/api/cli.html#--env-fileconfig\">the <code>--env-file</code> flag</a>!</p>\n<p>The feature's still under <code>active development</code>, but hallelujah — I'll clean up some deps now!</p>\n<p><a class=\"btn btn__small\" href=\"https://nodejs.org/en/blog/release/v20.6.0\">Drop dotenv</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#better-design-and-accessibility\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"better-design-and-accessibility\">Better design and accessibility</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Different menu button designs including &quot;hamburger&quot;, &quot;oreos&quot;, &quot;kebap&quot; and more. The point is though that it&apos;s impossible to know what&apos;s behind these button icons.\" height=\"496\" src=\"https://images.ctfassets.net/f20lfrunubsq/5mk8SyLo76K36OXcrltq4l/000b0a1738ed84eb6f2a4d644273028c/Screenshot_2023-09-06_at_11.46.23.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Often, we're trying to build accessible things, but how often do we really check things with assistive technology? I should do it more often and also level up my skills in this area!</p>\n<p>I admire Eric W. Bailey for taking screenreader lessons. And I admire him even more for writing down all his findings.</p>\n<p>This post is a nice deep dive into hamburger icons, context and assistive tech. 💯</p>\n<p><a class=\"btn btn__small\" href=\"https://ericwbailey.website/published/equivalent-experience-can-cut-both-ways/\">Build good stuff</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#random-mdn-%E2%80%93-labeled-js-loops\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"random-mdn-%E2%80%93-labeled-js-loops\">Random MDN – Labeled JS loops</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"Two nested JavaScript for loops.\" height=\"476\" src=\"https://images.ctfassets.net/f20lfrunubsq/1SEWHCjykSfhygwmn0CEQO/bbf0dd4a568f2b98f99dcf71ce6aa0a4/Screenshot_2023-09-11_at_07.15.03.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>From the unlimited MDN knowledge archive...</p>\n<p>Did you know that you can label your JS loops? Now you do!</p>\n<p><a class=\"btn btn__small\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label\">Label your loops</a></p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"til-recap-%E2%80%93-%60reduce%60's-initial-value-is-optional\">TIL recap – <code>reduce</code>'s initial value is optional</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A reduce loop that doesn&apos;t define an initial value\" height=\"613\" src=\"https://images.ctfassets.net/f20lfrunubsq/1XhhIsiO855Fo4L02wGqJb/8969fac8317c85cc1cfa5971033551c5/Screenshot_2023-09-10_at_19.48.46.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Here's a little fun fact about <code>reduce</code>. The second parameter, the initial value, is optional. 😲</p>\n<p><a class=\"btn btn__small\" href=\"https://www.stefanjudis.com/today-i-learned/the-array-prototype-reduces-initial-value-is-optional/\">Safe one reduce loop</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more short web development learnings in <a href=\"https://www.stefanjudis.com/today-i-learned/\">my &quot;Today I learned&quot; section</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#new-to-the-platform\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"new-to-the-platform\">New to the platform</h2></div><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\"><code>Object.groupBy()</code></a> will ship with Chromium 117. Firefox Nightly and Safari Tech Preview include it, too. 🎉It's such a tiny thing, but oh boy, am I looking forward to stopping writing  grouping logic!</li>\n<li>The Chrome bug for <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid\">the <code>:user-invalid</code></a> implementation was closed. Let's hope it'll hit stable soon because Chromium is the only engine missing this handy validation pseudo-class. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1156069#c24\">Chrome bug</a>)</li>\n<li>Firefox is catching up and looking into prototyping <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap\"><code>text-wrap: balance</code></a>.</li>\n<li><a href=\"https://www.stefanjudis.com/notes/new-in-css-relative-colors/\">CSS Relative colors</a> landed in Chrome Canary. (<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1274133#c11\">Chrome bug</a>)</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#three-valuable-projects-to-have-a-look-at\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"three-valuable-projects-to-have-a-look-at\">Three valuable projects to have a look at</h2></div><ul>\n<li><a href=\"https://github.com/flackr/scroll-timeline\">flackr/scroll-timeline</a> – A polyfill of <code>ScrollTimeline</code> and <code>ViewTimeline</code>.</li>\n<li><a href=\"https://github.com/oven-sh/bun\">oven-sh/bun</a> – A JavaScript runtime, bundler, test runner, and package manager! And they just hit <code>1.0</code>. 🎉</li>\n<li><a href=\"https://github.com/tauri-apps/tauri\">tauri-apps/tauri</a> – Build desktop applications with a web frontend and Rust sprinkles.</li>\n</ul>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#a-new-tiny-helper\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"a-new-tiny-helper\">A new Tiny Helper</h2></div><p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"The linear() generator showing an editors, curves and a CSS linear output.\" height=\"550\" src=\"https://images.ctfassets.net/f20lfrunubsq/6F21KDsJ2bwRRiXbAcsdNn/f598c8178a64d136059cec3046663c8b/Screenshot_2023-09-10_at_19.29.14.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p><a href=\"https://caniuse.com/mdn-css_types_easing-function_linear-function\">Chromiums and Firefox support the relatively new CSS easing function <code>linear()</code></a>. But you probably don't want to write such easing by hand.👇</p>\n<p>\n      <div class=\"sqip-container margin-top-l margin-bottom-l\">\n        <figure class=\"sqip-image\">\n          <a href=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\">\n            \n              <source type=\"image/avif\" />\n              <source type=\"image/webp\" />\n              <img alt=\"A complex CSS linear easing definition.\" height=\"423\" src=\"https://images.ctfassets.net/f20lfrunubsq/4pKcd38arAs54WVixwGygS/e55c61beff63ce1aee9cbe25e5aa8481/Screenshot_2023-09-10_at_19.36.32.png\" width=\"1000\" />\n            \n          </a>\n        </figure>\n      </div>\n    </p>\n<p>Jake Archibald thought the same and released a handy tool to create the most bouncy and complex transitions the web has ever seen!</p>\n<p><a class=\"btn btn__small\" href=\"https://linear-easing-generator.netlify.app/?ref=tiny-helpers\">Create some bouncy CSS transitions</a></p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>Find more single-purpose online tools on <a href=\"https://tiny-helpers.dev/\">tiny-helpers.dev</a>.</p>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#thought-of-the-week\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"thought-of-the-week\">Thought of the week</h2></div><p><a href=\"https://chelseatroy.com/2023/04/15/how-do-tech-companies-make-money/\">It feels sad, but Chelsea Troy is very right with the following take</a>.</p>\n<p>The internet is full of great things. Things that people put hours and hours into. And we can curse ads plastering the web as much as we want.</p>\n<p>Unless we all start paying for what we read, watch and listen to, ads are the main driver for a free internet full of greatness.</p>\n<div class=\"highlightBox quote margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-quote\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <blockquote>\n<p>Ads keep the internet free; without them, the internet is a luxury good.</p>\n</blockquote>\n</div><div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#this-is-all%2C-friends!\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"this-is-all%2C-friends!\">This is all, friends!</h2></div><p>Writing Web Weekly takes me roughly five hours every week, and I pay real money for sending over 4.1k emails. If you enjoy it, <a href=\"https://www.patreon.com/stefanjudis\">consider supporting me on Patreon</a>. ♥️</p>\n<p>Or tell your friends about it:</p>\n<ul>\n<li><a href=\"https://twitter.com/intent/tweet?text=I%20like%20@stefanjudis%20weekly%20newsletter%20because%20...&amp;url=https://www.stefanjudis.com/blog/web-weekly-60/\">Share it on Twitter</a>.</li>\n<li>Forward it to someone who might like it.</li>\n</ul>\n<p>If you're not a subscriber, <a href=\"https://webweekly.email\">change that</a>! 😉</p>\n<hr /><p>And with that, take care of yourself - mentally, physically, and emotionally.</p>\n<p>I'll see you next week! 👋</p>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20Web Weekly #111\">\n            Reply to Stefan\n          </a>",
    "pub_date": "2023-09-10T22:00:00Z",
    "upd_date": "2023-09-10T22:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:42.382Z",
    "updated": "2023-10-09T09:34:42.382Z",
    "tags": [
      91,
      92
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 87,
  "fields": {
    "feed": 18,
    "title": "A new method to validate URLs in JavaScript (2023 edition) (#blogPost)",
    "author": null,
    "url": "https://www.stefanjudis.com/blog/validate-urls-in-javascript/",
    "image_url": "https://res.cloudinary.com/dfcwuxv3l/image/upload/w_1280,h_669,c_fill,q_auto,f_auto/w_900,c_fit,co_rgb:232129,g_south_west,x_70,y_160,l_text:oswald_84_bold_line_spacing_-34:A%20new%20method%20to%20validate%20URLs%20in%20JavaScript%20(2023%20edition)/w_900,c_fit,co_rgb:232129,g_north_west,x_70,y_540,l_text:ubuntu_38:%40stefanjudis/stefan-judis-website/social-image-with-new-dude",
    "description": "<div class=\"markdown\"><p>There's news on the URL validation front in JavaScript land! After all these years of cursing JavaScript for not having an easy way to validate a URL, there's a new method in town — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/canParse_static\"><code>URL.canParse()</code></a>!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true </span>\n<span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Hallelujah! <code>URL.canParse()</code> is a quick way to figure out if a string is a valid URL. But before we all get too excited, <code>URL.canParse()</code> is not cross-browser supported when writing this post. But you can find up-to-date browser support information below. 👇</p>\n<div class=\"highlightBox mdn margin-top-xl margin-bottom-xl\">\n        <div class=\"cornerBubble\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"><use xlink:href=\"/sprite.svg#icon-mdn\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"></use></svg>\n        </div>\n        <div class=\"highlightBox__header\">MDN Compat Data (<a href=\"https://raw.githubusercontent.com/mdn/browser-compat-data/main/api/URL.json\">source</a>)</div>\n        <div class=\"highlightBox__body\">\n          <div class=\"highlightBox__overflow\">\n            <table class=\"highlightBox__compat\">\n              <caption>Browser support info for <a href=\"https://developer.mozilla.org/docs/Web/API/URL/canParse_static\"><code>canParse()</code> static method</a> </caption>\n              <thead>\n                <tr>\n                  <td>\n                        <img alt=\"chrome\" height=\"51\" src=\"/assets/browsers/chrome.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"chrome_android\" height=\"51\" src=\"/assets/browsers/chrome_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"edge\" height=\"51\" src=\"/assets/browsers/edge.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox\" height=\"51\" src=\"/assets/browsers/firefox.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox_android\" height=\"51\" src=\"/assets/browsers/firefox_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari\" height=\"51\" src=\"/assets/browsers/safari.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari_ios\" height=\"51\" src=\"/assets/browsers/safari_ios.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"samsunginternet_android\" height=\"51\" src=\"/assets/browsers/samsunginternet_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"webview_android\" height=\"51\" src=\"/assets/browsers/webview_android.png\" width=\"48\" />\n                      </td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n<p></div>\n</div></p>\n<p><a href=\"https://github.com/zloirock/core-js/blob/master/packages/core-js/modules/web.url.can-parse.js#L19-L30\">The static method is already included in <code>core-js</code></a>, though. Is it hard work to polyfill the nifty URL validation one-liner? Turns out, nope!</p>\n<p><code>URL.canParse()</code> relies on the same algorithm to evaluate a valid URL as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\"><code>URL()</code> constructor</a>.</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>If you're curious and want to level up your spec reading game, <code>URL.canParse</code> and <code>URL()</code> implement <a href=\"https://url.spec.whatwg.org/#concept-basic-url-parser\">the basic URL parser algorithm that's defined in the WHATWG spec</a>.</p>\n</div><p>And because both methods implement that same parser and <code>URL()</code> is well supported today, you can follow the general advice to use the constructor to validate URLs. Place <code>new URL()</code> in a helper function, check if it <code>throws</code> an exception and call it a day!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Or if you don't fancy an <code>isUrlValid</code> function, you could also polyfill <code>URL.canParse()</code> similar to <code>core-js</code>.</p>\n<p>The only thing remaining is the question &quot;What is a valid URL?&quot; but I'll leave this one for another time! Because it's a tough one.</p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#additional-resources\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"additional-resources\">Additional resources</h2></div><ul>\n<li><a href=\"https://github.com/whatwg/url/issues/713\">The GitHub issues that led to the <code>URL.canParse()</code> implementation</a></li>\n</ul>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20A new method to validate URLs in JavaScript (2023 edition)\">\n            Reply to Stefan\n          </a>",
    "summary": "<div class=\"markdown\"><p>There's news on the URL validation front in JavaScript land! After all these years of cursing JavaScript for not having an easy way to validate a URL, there's a new method in town — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/canParse_static\"><code>URL.canParse()</code></a>!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true </span>\n<span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Hallelujah! <code>URL.canParse()</code> is a quick way to figure out if a string is a valid URL. But before we all get too excited, <code>URL.canParse()</code> is not cross-browser supported when writing this post. But you can find up-to-date browser support information below. 👇</p>\n<div class=\"highlightBox mdn margin-top-xl margin-bottom-xl\">\n        <div class=\"cornerBubble\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"><use xlink:href=\"/sprite.svg#icon-mdn\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"></use></svg>\n        </div>\n        <div class=\"highlightBox__header\">MDN Compat Data (<a href=\"https://raw.githubusercontent.com/mdn/browser-compat-data/main/api/URL.json\">source</a>)</div>\n        <div class=\"highlightBox__body\">\n          <div class=\"highlightBox__overflow\">\n            <table class=\"highlightBox__compat\">\n              <caption>Browser support info for <a href=\"https://developer.mozilla.org/docs/Web/API/URL/canParse_static\"><code>canParse()</code> static method</a> </caption>\n              <thead>\n                <tr>\n                  <td>\n                        <img alt=\"chrome\" height=\"51\" src=\"/assets/browsers/chrome.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"chrome_android\" height=\"51\" src=\"/assets/browsers/chrome_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"edge\" height=\"51\" src=\"/assets/browsers/edge.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox\" height=\"51\" src=\"/assets/browsers/firefox.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox_android\" height=\"51\" src=\"/assets/browsers/firefox_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari\" height=\"51\" src=\"/assets/browsers/safari.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari_ios\" height=\"51\" src=\"/assets/browsers/safari_ios.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"samsunginternet_android\" height=\"51\" src=\"/assets/browsers/samsunginternet_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"webview_android\" height=\"51\" src=\"/assets/browsers/webview_android.png\" width=\"48\" />\n                      </td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n<p></div>\n</div></p>\n<p><a href=\"https://github.com/zloirock/core-js/blob/master/packages/core-js/modules/web.url.can-parse.js#L19-L30\">The static method is already included in <code>core-js</code></a>, though. Is it hard work to polyfill the nifty URL validation one-liner? Turns out, nope!</p>\n<p><code>URL.canParse()</code> relies on the same algorithm to evaluate a valid URL as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\"><code>URL()</code> constructor</a>.</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>If you're curious and want to level up your spec reading game, <code>URL.canParse</code> and <code>URL()</code> implement <a href=\"https://url.spec.whatwg.org/#concept-basic-url-parser\">the basic URL parser algorithm that's defined in the WHATWG spec</a>.</p>\n</div><p>And because both methods implement that same parser and <code>URL()</code> is well supported today, you can follow the general advice to use the constructor to validate URLs. Place <code>new URL()</code> in a helper function, check if it <code>throws</code> an exception and call it a day!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Or if you don't fancy an <code>isUrlValid</code> function, you could also polyfill <code>URL.canParse()</code> similar to <code>core-js</code>.</p>\n<p>The only thing remaining is the question &quot;What is a valid URL?&quot; but I'll leave this one for another time! Because it's a tough one.</p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#additional-resources\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"additional-resources\">Additional resources</h2></div><ul>\n<li><a href=\"https://github.com/whatwg/url/issues/713\">The GitHub issues that led to the <code>URL.canParse()</code> implementation</a></li>\n</ul>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20A new method to validate URLs in JavaScript (2023 edition)\">\n            Reply to Stefan\n          </a>",
    "content": "<div class=\"markdown\"><p>There's news on the URL validation front in JavaScript land! After all these years of cursing JavaScript for not having an easy way to validate a URL, there's a new method in town — <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/canParse_static\"><code>URL.canParse()</code></a>!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true </span>\n<span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">canParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Hallelujah! <code>URL.canParse()</code> is a quick way to figure out if a string is a valid URL. But before we all get too excited, <code>URL.canParse()</code> is not cross-browser supported when writing this post. But you can find up-to-date browser support information below. 👇</p>\n<div class=\"highlightBox mdn margin-top-xl margin-bottom-xl\">\n        <div class=\"cornerBubble\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"><use xlink:href=\"/sprite.svg#icon-mdn\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"></use></svg>\n        </div>\n        <div class=\"highlightBox__header\">MDN Compat Data (<a href=\"https://raw.githubusercontent.com/mdn/browser-compat-data/main/api/URL.json\">source</a>)</div>\n        <div class=\"highlightBox__body\">\n          <div class=\"highlightBox__overflow\">\n            <table class=\"highlightBox__compat\">\n              <caption>Browser support info for <a href=\"https://developer.mozilla.org/docs/Web/API/URL/canParse_static\"><code>canParse()</code> static method</a> </caption>\n              <thead>\n                <tr>\n                  <td>\n                        <img alt=\"chrome\" height=\"51\" src=\"/assets/browsers/chrome.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"chrome_android\" height=\"51\" src=\"/assets/browsers/chrome_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"edge\" height=\"51\" src=\"/assets/browsers/edge.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox\" height=\"51\" src=\"/assets/browsers/firefox.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"firefox_android\" height=\"51\" src=\"/assets/browsers/firefox_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari\" height=\"51\" src=\"/assets/browsers/safari.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"safari_ios\" height=\"51\" src=\"/assets/browsers/safari_ios.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"samsunginternet_android\" height=\"51\" src=\"/assets/browsers/samsunginternet_android.png\" width=\"48\" />\n                      </td><td>\n                        <img alt=\"webview_android\" height=\"51\" src=\"/assets/browsers/webview_android.png\" width=\"48\" />\n                      </td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nope\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        115\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill success margin-top-s\">\n                        17\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td><td>\n                        <span class=\"highlightBox__pill failure margin-top-s\">\n                        Nö\n                        </span>\n                      </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n<p></div>\n</div></p>\n<p><a href=\"https://github.com/zloirock/core-js/blob/master/packages/core-js/modules/web.url.can-parse.js#L19-L30\">The static method is already included in <code>core-js</code></a>, though. Is it hard work to polyfill the nifty URL validation one-liner? Turns out, nope!</p>\n<p><code>URL.canParse()</code> relies on the same algorithm to evaluate a valid URL as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\"><code>URL()</code> constructor</a>.</p>\n<div class=\"highlightBox info margin-top-l margin-bottom-l\">\n      \n          <div class=\"cornerBubble\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n              <use xlink:href=\"/sprite.svg#icon-info\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            </svg>\n          </div>\n        \n\n      \n      <p>If you're curious and want to level up your spec reading game, <code>URL.canParse</code> and <code>URL()</code> implement <a href=\"https://url.spec.whatwg.org/#concept-basic-url-parser\">the basic URL parser algorithm that's defined in the WHATWG spec</a>.</p>\n</div><p>And because both methods implement that same parser and <code>URL()</code> is well supported today, you can follow the general advice to use the constructor to validate URLs. Place <code>new URL()</code> in a helper function, check if it <code>throws</code> an exception and call it a day!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">isUrlValid</span><span class=\"token punctuation\">(</span><span class=\"token string\">'www.stefanjudis.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre>\n<p>Or if you don't fancy an <code>isUrlValid</code> function, you could also polyfill <code>URL.canParse()</code> similar to <code>core-js</code>.</p>\n<p>The only thing remaining is the question &quot;What is a valid URL?&quot; but I'll leave this one for another time! Because it's a tough one.</p>\n<div class=\"heading-wrapper\">\n      <a class=\"margin-left-s text-no-underline\" href=\"#additional-resources\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\">\n          <use xlink:href=\"/sprite.svg#icon-link\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        </svg>\n      </a>\n      <h2 id=\"additional-resources\">Additional resources</h2></div><ul>\n<li><a href=\"https://github.com/whatwg/url/issues/713\">The GitHub issues that led to the <code>URL.canParse()</code> implementation</a></li>\n</ul>\n</div>\n\n          <hr />\n          <a href=\"mailto:stefanjudis@gmail.com?subject=Re%3A%20A new method to validate URLs in JavaScript (2023 edition)\">\n            Reply to Stefan\n          </a>",
    "pub_date": "2023-09-07T22:00:00Z",
    "upd_date": "2023-09-07T22:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:42.763Z",
    "updated": "2023-10-09T09:34:42.763Z",
    "tags": [
      91,
      90
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 88,
  "fields": {
    "feed": 17,
    "title": "The Real Python Podcast – Episode #175: Exploring the New Features of Python 3.12",
    "author": null,
    "url": "https://realpython.com/podcasts/rpp/175/",
    "image_url": "https://files.realpython.com/media/E_175_Podcast_Title.2b45ef70aee8.jpg",
    "description": "Python 3.12 is here! Our regular guests, Geir Arne Hjelle and Christopher Trudeau, return to discuss the new version. Geir Arne coordinated a series of preview articles with several members of the Real Python team this year, and his showcase tutorial, \"Python 3.12: Cool New Features for You to Try,\" came out on October 2. Christopher's video course was posted the next day, covering the topics from the article with visual examples of Python 3.12 in action.",
    "summary": "Python 3.12 is here! Our regular guests, Geir Arne Hjelle and Christopher Trudeau, return to discuss the new version. Geir Arne coordinated a series of preview articles with several members of the Real Python team this year, and his showcase tutorial, \"Python 3.12: Cool New Features for You to Try,\" came out on October 2. Christopher's video course was posted the next day, covering the topics from the article with visual examples of Python 3.12 in action.",
    "content": "<p>Python 3.12 is here! Our regular guests, Geir Arne Hjelle and Christopher Trudeau, return to discuss the new version. Geir Arne coordinated a series of preview articles with several members of the Real Python team this year, and his showcase tutorial, \"Python 3.12: Cool New Features for You to Try,\" came out on October 2. Christopher's video course was posted the next day, covering the topics from the article with visual examples of Python 3.12 in action.</p>\n        <hr />\n        <p><em>[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short &amp; sweet Python Trick delivered to your inbox every couple of days. <a href=\"https://realpython.com/python-tricks/?utm_source=realpython&amp;utm_medium=rss&amp;utm_campaign=footer\">&gt;&gt; Click here to learn more and see examples</a> ]</em></p>",
    "pub_date": "2023-10-06T12:00:00Z",
    "upd_date": "2023-10-06T12:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:43.503Z",
    "updated": "2023-10-09T09:34:43.503Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 89,
  "fields": {
    "feed": 17,
    "title": "Python's tuple Data Type: A Deep Dive With Examples",
    "author": null,
    "url": "https://realpython.com/python-tuple/",
    "image_url": "https://files.realpython.com/media/Pythons-tuple-Built-in-Data-Type-A-Deep-Dive-with-Examples_Watermarked.e85efb14c955.jpg",
    "description": "In Python, a tuple is a built-in data type that allows you to create immutable sequences of values. The values or items in a tuple can be of any type. This makes tuples pretty useful in those situations where you need to store heterogeneous data, like that in a database record, for example.",
    "summary": "In Python, a tuple is a built-in data type that allows you to create immutable sequences of values. The values or items in a tuple can be of any type. This makes tuples pretty useful in those situations where you need to store heterogeneous data, like that in a database record, for example.",
    "content": "<div><p>In Python, a <strong><code>tuple</code></strong> is a built-in data type that allows you to create <strong>immutable sequences</strong> of values. The values or items in a tuple can be of any type. This makes tuples pretty useful in those situations where you need to store heterogeneous data, like that in a database record, for example.</p>\n<p>Through this tutorial, you’ll dive deep into Python tuples and get a solid understanding of their key features and use cases. This knowledge will allow you to write more efficient and reliable code by taking advantage of tuples.</p>\n<p><strong>In this tutorial, you’ll learn how to:</strong></p>\n<ul>\n<li><strong>Create</strong> tuples in Python</li>\n<li><strong>Access</strong> the items in an existing tuple</li>\n<li><strong>Unpack</strong>, <strong>return</strong>, <strong>copy</strong>, and <strong>concatenate</strong> tuples</li>\n<li><strong>Reverse</strong>, <strong>sort</strong>, and <strong>traverse</strong> existing tuples</li>\n<li>Explore other <strong>features</strong> and common <strong>gotchas</strong> of tuples</li>\n</ul>\n<p>In addition, you’ll explore some alternative tools that you can use to replace tuples and make your code more readable and explicit.</p>\n<p>To get the most out of this tutorial, you should have a good understanding of a few Python concepts, including <a href=\"https://realpython.com/python-variables/\">variables</a>, <a href=\"https://realpython.com/defining-your-own-python-function/\">functions</a>, and <a href=\"https://realpython.com/python-for-loop/\"><code>for</code> loops</a>. Familiarity with other built-in <a href=\"https://realpython.com/python-data-types/\">data structures</a>, especially <a href=\"https://realpython.com/python-list/\">lists</a>, is also a plus.</p>\n<div class=\"alert alert-warning\">\n<p><strong>Get Your Code:</strong> <a class=\"alert-link\" href=\"https://realpython.com/bonus/python-tuple-code/\">Click here to download the free sample code</a> that shows you how to write more readable code with tuples in Python.</p>\n</div>\n<h2 id=\"getting-started-with-pythons-tuple-data-type\">Getting Started With Python’s <code>tuple</code> Data Type<a class=\"headerlink\" href=\"#getting-started-with-pythons-tuple-data-type\" title=\"Permanent link\"></a></h2>\n<p>The built-in <a href=\"https://realpython.com/python-lists-tuples/#python-tuples\"><code>tuple</code></a> data type is probably the most elementary <a href=\"https://docs.python.org/3/glossary.html#term-sequence\">sequence</a> available in Python. Tuples are <a href=\"https://realpython.com/python-mutable-vs-immutable-types/#tuples\">immutable</a> and can store a fixed number of items. For example, you can use tuples to represent <a href=\"https://en.wikipedia.org/wiki/Cartesian_coordinate_system\">Cartesian</a> coordinates <code>(x, y)</code>, <a href=\"https://en.wikipedia.org/wiki/RGB_color_model\">RGB</a> colors <code>(red, green, blue)</code>, records in a database table <code>(name, age, job)</code>, and many other sequences of values.</p>\n<p>In all these use cases, the number of elements in the underlying tuple is <em>fixed</em>, and the items are <em>unchangeable</em>. You may find several situations where these two characteristics are desirable. For example, consider the RGB color example:</p>\n<div class=\"highlight python repl\"><span class=\"repl-toggle\" title=\"Toggle REPL prompts and output\">&gt;&gt;&gt;</span><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Once you’ve defined <code>red</code>, then you won’t need to add or change any components. Why? If you change the value of one component, then you won’t have a pure red color anymore, and your variable name will be misleading. If you add a new component, then your color won’t be an RGB color. So, tuples are perfect for representing this type of object.</p>\n<div class=\"alert alert-primary\">\n<p><strong>Note:</strong> Throughout this tutorial, you’ll find the terms <strong>items</strong>, <strong>elements</strong>, and <strong>values</strong> used interchangeably to refer to the objects stored in a tuple.</p>\n</div>\n<p>Some of the most relevant characteristics of <code>tuple</code> objects include the following:</p>\n<ul>\n<li><strong>Ordered</strong>: They contain elements that are sequentially arranged according to their specific insertion order.</li>\n<li><strong>Lightweight</strong>: They consume relatively small amounts of memory compared to other sequences like lists.</li>\n<li><strong>Indexable through a zero-based index</strong>: They allow you to access their elements by integer indices that start from zero.</li>\n<li><strong>Immutable</strong>: They don’t support in-place mutations or changes to their contained elements. They don’t support growing or shrinking operations.</li>\n<li><strong>Heterogeneous</strong>: They can store objects of different data types and domains, including mutable objects.</li>\n<li><strong>Nestable</strong>: They can contain other tuples, so you can have tuples of tuples.</li>\n<li><strong>Iterable</strong>: They support iteration, so you can traverse them using a loop or comprehension while you perform operations with each of their elements.</li>\n<li><strong>Sliceable</strong>: They support slicing operations, meaning that you can extract a series of elements from a tuple.</li>\n<li><strong>Combinable</strong>: They support concatenation operations, so you can combine two or more tuples using the concatenation operators, which creates a new tuple.</li>\n<li><strong>Hashable</strong>: They can work as keys in <a href=\"https://realpython.com/python-dicts/\">dictionaries</a> when all the tuple items are immutable.</li>\n</ul>\n<p>Tuples are sequences of objects. They’re commonly called <strong>containers</strong> or <strong>collections</strong> because a single tuple can contain or collect an arbitrary number of other objects.</p>\n<div class=\"alert alert-primary\">\n<p><strong>Note:</strong> In Python, tuples support several operations that are common to other sequence types, such as lists, <a href=\"https://realpython.com/python-strings/\">strings</a>, and <a href=\"https://realpython.com/python-range/\">ranges</a>. These operations are known as <a href=\"https://docs.python.org/3/library/stdtypes.html#common-sequence-operations\">common sequence operations</a>. Throughout this tutorial, you’ll learn about several operations that fall into this category.</p>\n</div>\n<p>In Python, tuples are ordered, which means that they keep their elements in the original insertion order:</p>\n<div class=\"highlight python repl\"><span class=\"repl-toggle\" title=\"Toggle REPL prompts and output\">&gt;&gt;&gt;</span><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"s2\">\"Python Developer\"</span><span class=\"p\">)</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">record</span>\n<span class=\"go\">('John', 35, 'Python Developer')</span>\n</code></pre></div>\n<p>The items in this tuple are objects of different data types representing a record of data from a database table. If you access the tuple object, then you’ll see that the data items keep the same original insertion order. This order remains unchanged during the tuple’s lifetime.</p>\n<p>You can access individual objects in a tuple by position, or index. These indices start from zero:</p>\n<div class=\"highlight python repl\"><span class=\"repl-toggle\" title=\"Toggle REPL prompts and output\">&gt;&gt;&gt;</span><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">record</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">'John'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">record</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">35</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">record</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">'Python Developer'</span>\n</code></pre></div>\n<p>Positions are numbered from zero to the length of the tuple minus one. The element at index <code>0</code> is the first element in the tuple, the element at index <code>1</code> is the second, and so on.</p>\n<p>Cool! You’ve had a first glance at tuples. It’s time to dive deeper into all of the above characteristics of tuples and more. To kick things off, you’ll start by learning the different ways to create tuples in Python.</p>\n<h2 id=\"constructing-tuples-in-python\">Constructing Tuples in Python<a class=\"headerlink\" href=\"#constructing-tuples-in-python\" title=\"Permanent link\"></a></h2>\n</div><h2><a href=\"https://realpython.com/python-tuple/?utm_source=realpython&amp;utm_medium=rss\">Read the full article at https://realpython.com/python-tuple/ »</a></h2>\n        <hr />\n        <p><em>[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short &amp; sweet Python Trick delivered to your inbox every couple of days. <a href=\"https://realpython.com/python-tricks/?utm_source=realpython&amp;utm_medium=rss&amp;utm_campaign=footer\">&gt;&gt; Click here to learn more and see examples</a> ]</em></p>",
    "pub_date": "2023-10-04T14:00:00Z",
    "upd_date": "2023-10-04T14:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:44.258Z",
    "updated": "2023-10-09T09:34:44.258Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 90,
  "fields": {
    "feed": 17,
    "title": "What's New in Python 3.12",
    "author": null,
    "url": "https://realpython.com/courses/new-features-python-312/",
    "image_url": "https://files.realpython.com/media/Python-3.12-Cool-New-Features_Watermarked.608b58320f27.jpg",
    "description": "In this video course, you'll explore the new features that Python 3.12 brings to the table. These include improved f-strings, better error messages, changes to CPython internals, additions to static typing, and more.",
    "summary": "In this video course, you'll explore the new features that Python 3.12 brings to the table. These include improved f-strings, better error messages, changes to CPython internals, additions to static typing, and more.",
    "content": "<p>It&rsquo;s that time of year again, time for a new release of Python. Although <strong>Python 3.12</strong>\nmostly focuses on internal improvements, there&rsquo;s a little something for\neveryone. You can read up on all the new features by checking out the <a href=\"https://docs.python.org/3.12/whatsnew/3.12.html\">changelog</a>.</p>\n<p><strong>In this video course, you&rsquo;ll learn about the following changes:</strong></p>\n<ul>\n<li>Improvements to <strong>f-strings</strong></li>\n<li>More <strong>did-you-mean error messages</strong></li>\n<li><strong>New features</strong> in the standard library</li>\n<li>Additions to <strong>static typing</strong></li>\n<li>Changes to the <strong>CPython interpreter</strong></li>\n</ul>\n<p>In this video course, you&rsquo;ll explore these changes and see how this new version of\nPython can work for you.</p>\n<p>If you want to try any of the examples in this video course, then you&rsquo;ll need to use Python 3.12. The <a href=\"https://realpython.com/installing-python/\">Python 3 Installation &amp; Setup Guide</a> and <a href=\"https://realpython.com/python-pre-release/\">How Can You Install a Pre-Release Version of Python?</a> walk you through several options for adding a new version of Python to your system.</p>\n        <hr />\n        <p><em>[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short &amp; sweet Python Trick delivered to your inbox every couple of days. <a href=\"https://realpython.com/python-tricks/?utm_source=realpython&amp;utm_medium=rss&amp;utm_campaign=footer\">&gt;&gt; Click here to learn more and see examples</a> ]</em></p>",
    "pub_date": "2023-10-03T14:00:00Z",
    "upd_date": "2023-10-03T14:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:44.736Z",
    "updated": "2023-10-09T09:34:44.736Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 91,
  "fields": {
    "feed": 16,
    "title": "Tantivy 0.21",
    "author": null,
    "url": "https://quickwit.io/blog/tantivy-0.21",
    "image_url": "https://quickwit.io/img/blog/tantivy-v0.21.png",
    "description": "Oh my, what's that on the horizon? It's a new tantivy release!",
    "summary": "Oh my, what's that on the horizon? It's a new tantivy release!",
    "content": null,
    "pub_date": "2023-09-13T00:00:00Z",
    "upd_date": "2023-09-13T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:45.296Z",
    "updated": "2023-10-09T09:34:45.296Z",
    "tags": [
      94,
      93
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 92,
  "fields": {
    "feed": 16,
    "title": "Scaling search to terabytes on a budget",
    "author": null,
    "url": "https://quickwit.io/blog/benchmarking-quickwit-engine-on-an-adversarial-dataset",
    "image_url": "https://quickwit.io/img/blog/gharchive-bench/deep-dive-into-quickwit.png",
    "description": "In this blog post, we indexed 23 TB of data and evaluated search performance and costs.",
    "summary": "In this blog post, we indexed 23 TB of data and evaluated search performance and costs.",
    "content": null,
    "pub_date": "2023-09-07T00:00:00Z",
    "upd_date": "2023-09-07T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:45.829Z",
    "updated": "2023-10-09T09:34:45.829Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 93,
  "fields": {
    "feed": 16,
    "title": "A compressed indexable bitset",
    "author": null,
    "url": "https://quickwit.io/blog/compressed-indexable-bitset",
    "image_url": "https://quickwit.io/img/blog/columnar/lego.jpg",
    "description": "In this blog post, we discuss the implementation of an indexable bitset in tantivy.",
    "summary": "In this blog post, we discuss the implementation of an indexable bitset in tantivy.",
    "content": null,
    "pub_date": "2023-06-29T00:00:00Z",
    "upd_date": "2023-06-29T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:46.263Z",
    "updated": "2023-10-09T09:34:46.263Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 94,
  "fields": {
    "feed": 15,
    "title": "Focus & Code Diff in Nuxt Content Code Blocks",
    "author": null,
    "url": "https://mokkapps.de/blog/focus-and-code-diff-in-nuxt-content-code-blocks",
    "image_url": "https://mokkapps.twic.pics/mokkapps.de/blog/focus-and-code-diff-in-nuxt-content-code-blocks/og.png",
    "description": "Custom code blocks are essential for my blog as my articles usually contain a lot of code snippets. My blog is powered by Nuxt Content v2 which is a Nuxt 3 module. I already wrote an article about how you can create custom code blocks using Nuxt Content v2.",
    "summary": "Custom code blocks are essential for my blog as my articles usually contain a lot of code snippets. My blog is powered by Nuxt Content v2 which is a Nuxt 3 module. I already wrote an article about how you can create custom code blocks using Nuxt Content v2.",
    "content": null,
    "pub_date": "2023-08-11T00:00:00Z",
    "upd_date": "2023-08-11T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:47.669Z",
    "updated": "2023-10-09T09:34:47.669Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 95,
  "fields": {
    "feed": 15,
    "title": "Lazy Load Vue Component When It Becomes Visible",
    "author": null,
    "url": "https://mokkapps.de/blog/lazy-load-vue-component-when-it-becomes-visible",
    "image_url": "https://mokkapps.twic.pics/mokkapps.de/blog/lazy-load-vue-component-when-it-becomes-visible/og.png",
    "description": "In this blog post, I'll show you how a simple mechanism to lazy load your Vue components if they become visible using the Intersection Observer API.",
    "summary": "In this blog post, I'll show you how a simple mechanism to lazy load your Vue components if they become visible using the Intersection Observer API.",
    "content": null,
    "pub_date": "2023-07-18T00:00:00Z",
    "upd_date": "2023-07-18T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:48.040Z",
    "updated": "2023-10-09T09:34:48.040Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 96,
  "fields": {
    "feed": 15,
    "title": "A Comprehensive Guide to Data Fetching in Nuxt 3",
    "author": null,
    "url": "https://mokkapps.de/blog/a-comprehensive-guide-to-data-fetching-in-nuxt-3",
    "image_url": "https://mokkapps.twic.pics/mokkapps.de/blog/a-comprehensive-guide-to-data-fetching-in-nuxt-3/og.png",
    "description": "With Nuxt 3's rendering modes, you can execute API calls and render pages both on the client and server, which has some challenges. For example, we want to avoid duplicate network calls, efficient caching, and ensure that the calls work across environments. To address these challenges, Nuxt provides a built-in data fetching library ($fetch) and two composable (useFetch and useAsyncData).",
    "summary": "With Nuxt 3's rendering modes, you can execute API calls and render pages both on the client and server, which has some challenges. For example, we want to avoid duplicate network calls, efficient caching, and ensure that the calls work across environments. To address these challenges, Nuxt provides a built-in data fetching library ($fetch) and two composable (useFetch and useAsyncData).",
    "content": null,
    "pub_date": "2023-06-20T00:00:00Z",
    "upd_date": "2023-06-20T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:48.735Z",
    "updated": "2023-10-09T09:34:48.735Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 97,
  "fields": {
    "feed": 14,
    "title": "How is GenAI different from other code generators?",
    "author": null,
    "url": "https://martinfowler.com/articles/exploring-gen-ai.html#memo-07",
    "image_url": "https://martinfowler.com/logo-sq.png",
    "description": "<p>How is code generation with GenAI different from more \"traditional\" code\n     generators? The newest memo in  <b class=\"author\">Birgitta B&#xf6;ckeler's</b>\n     explorations of GenAI talks about <a href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">abstraction\n     levels</a> in software engineering, and on which levels GenAI sits in the\n     translation of our thoughts into zeros and ones.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">more…</a></p>",
    "summary": "<p>How is code generation with GenAI different from more \"traditional\" code\n     generators? The newest memo in  <b class=\"author\">Birgitta B&#xf6;ckeler's</b>\n     explorations of GenAI talks about <a href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">abstraction\n     levels</a> in software engineering, and on which levels GenAI sits in the\n     translation of our thoughts into zeros and ones.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">more…</a></p>",
    "content": "<p>How is code generation with GenAI different from more \"traditional\" code\n     generators? The newest memo in  <b class=\"author\">Birgitta B&#xf6;ckeler's</b>\n     explorations of GenAI talks about <a href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">abstraction\n     levels</a> in software engineering, and on which levels GenAI sits in the\n     translation of our thoughts into zeros and ones.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/exploring-gen-ai.html#memo-07\">more…</a></p>",
    "pub_date": "2023-09-19T07:57:00Z",
    "upd_date": "2023-09-19T07:57:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:49.957Z",
    "updated": "2023-10-09T09:34:49.957Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 98,
  "fields": {
    "feed": 14,
    "title": "Technology Strategy for Emerging Technologies and Markets",
    "author": null,
    "url": "https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture",
    "image_url": "https://martinfowler.com/articles/creating-integrated-tech-strategy/card.png",
    "description": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\"><img src=\"https://martinfowler.com/articles/creating-integrated-tech-strategy/card.png\" width=\"\" /></a></div>\n\n<p><b class=\"author\">Sarah Taraporewalla</b> completes her study of building a\n     technology strategy that's integrated with strategic business interests.\n     This final strategic direction considers <a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">the ever-changing future</a>,\n     suggesting lines of inquiry to consider the impact of new\n     technologies, market trends, and broader social-political changes. </p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">more…</a></p>",
    "summary": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\"><img src=\"https://martinfowler.com/articles/creating-integrated-tech-strategy/card.png\" width=\"\" /></a></div>\n\n<p><b class=\"author\">Sarah Taraporewalla</b> completes her study of building a\n     technology strategy that's integrated with strategic business interests.\n     This final strategic direction considers <a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">the ever-changing future</a>,\n     suggesting lines of inquiry to consider the impact of new\n     technologies, market trends, and broader social-political changes. </p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">more…</a></p>",
    "content": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\"><img src=\"https://martinfowler.com/articles/creating-integrated-tech-strategy/card.png\" width=\"\" /></a></div>\n\n<p><b class=\"author\">Sarah Taraporewalla</b> completes her study of building a\n     technology strategy that's integrated with strategic business interests.\n     This final strategic direction considers <a href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">the ever-changing future</a>,\n     suggesting lines of inquiry to consider the impact of new\n     technologies, market trends, and broader social-political changes. </p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/creating-integrated-tech-strategy.html#RespondingToTheEverChangingFuture\">more…</a></p>",
    "pub_date": "2023-08-24T13:44:00Z",
    "upd_date": "2023-08-24T13:44:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:50.545Z",
    "updated": "2023-10-09T09:34:50.545Z",
    "tags": [
      95
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 99,
  "fields": {
    "feed": 14,
    "title": "Demo Front-End: A front-end application to test and explore an API",
    "author": null,
    "url": "https://martinfowler.com/articles/demo-front-end.html",
    "image_url": "https://martinfowler.com/articles/demo-front-end/card.png",
    "description": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/demo-front-end.html\"><img src=\"https://martinfowler.com/articles/demo-front-end/card.png\" width=\"\" /></a></div>\n\n<p>Many software teams create services exposed as APIs, designed to be\n     consumed by other software and thus without any user-interface. Such\n     services are hard to demonstrate, as they effectively just dump pages of\n     JSON. A <a href=\"https://martinfowler.com/articles/demo-front-end.html\">demo front-end</a> is a simple user-interface just used to\n     manipulate such an API. <b class=\"author\">Matteo Vaccari</b> describes how and\n     why to build one - showing its usefulness both in explaining the\n     API's capabilities to stakeholders and to help client developers explore\n     how to interact with the API.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/demo-front-end.html\">more…</a></p>",
    "summary": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/demo-front-end.html\"><img src=\"https://martinfowler.com/articles/demo-front-end/card.png\" width=\"\" /></a></div>\n\n<p>Many software teams create services exposed as APIs, designed to be\n     consumed by other software and thus without any user-interface. Such\n     services are hard to demonstrate, as they effectively just dump pages of\n     JSON. A <a href=\"https://martinfowler.com/articles/demo-front-end.html\">demo front-end</a> is a simple user-interface just used to\n     manipulate such an API. <b class=\"author\">Matteo Vaccari</b> describes how and\n     why to build one - showing its usefulness both in explaining the\n     API's capabilities to stakeholders and to help client developers explore\n     how to interact with the API.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/demo-front-end.html\">more…</a></p>",
    "content": "<div class=\"img-link\"><a href=\"https://martinfowler.com/articles/demo-front-end.html\"><img src=\"https://martinfowler.com/articles/demo-front-end/card.png\" width=\"\" /></a></div>\n\n<p>Many software teams create services exposed as APIs, designed to be\n     consumed by other software and thus without any user-interface. Such\n     services are hard to demonstrate, as they effectively just dump pages of\n     JSON. A <a href=\"https://martinfowler.com/articles/demo-front-end.html\">demo front-end</a> is a simple user-interface just used to\n     manipulate such an API. <b class=\"author\">Matteo Vaccari</b> describes how and\n     why to build one - showing its usefulness both in explaining the\n     API's capabilities to stakeholders and to help client developers explore\n     how to interact with the API.</p>\n\n<p><a class=\"more\" href=\"https://martinfowler.com/articles/demo-front-end.html\">more…</a></p>",
    "pub_date": "2023-08-23T14:37:00Z",
    "upd_date": "2023-08-23T14:37:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:51.141Z",
    "updated": "2023-10-09T09:34:51.141Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 100,
  "fields": {
    "feed": 13,
    "title": "Understanding the JavaScript Modulo Operator",
    "author": "Josh W. Comeau",
    "url": "https://www.joshwcomeau.com/javascript/modulo-operator/",
    "image_url": "https://www.joshwcomeau.com/images/og-modulo-operator.jpg",
    "description": "One of the most commonly-misunderstood operators is Modulo (%). In this tutorial, we'll unpack exactly what this little bugger does, and learn how it can help us solve practical problems.",
    "summary": "One of the most commonly-misunderstood operators is Modulo (%). In this tutorial, we'll unpack exactly what this little bugger does, and learn how it can help us solve practical problems.",
    "content": "<p>One of the most commonly-misunderstood operators is Modulo (%). In this tutorial, we'll unpack exactly what this little bugger does, and learn how it can help us solve practical problems.</p>\n<div style=\"margin-top: 50px; font-style: italic;\">\n  <strong><a href=\"https://www.joshwcomeau.com/javascript/modulo-operator/\">Keep reading</a>.</strong>\n</div>\n<br />\n<br />",
    "pub_date": "2023-09-19T23:19:14Z",
    "upd_date": "2023-09-19T23:19:14Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:51.611Z",
    "updated": "2023-10-09T09:34:51.611Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 101,
  "fields": {
    "feed": 13,
    "title": "Making Sense of React Server Components",
    "author": "Josh W. Comeau",
    "url": "https://www.joshwcomeau.com/react/server-components/",
    "image_url": "https://www.joshwcomeau.com/images/og-server-components.jpg",
    "description": "This year, the React team unveiled something they've been quietly researching for years: an official way to run React components exclusively on the server. This is a significant paradigm shift, and it's caused a whole lot of confusion in the React community. In this tutorial, we'll explore this new world, and build an intuition for how it works, and how we can take advantage of it.",
    "summary": "This year, the React team unveiled something they've been quietly researching for years: an official way to run React components exclusively on the server. This is a significant paradigm shift, and it's caused a whole lot of confusion in the React community. In this tutorial, we'll explore this new world, and build an intuition for how it works, and how we can take advantage of it.",
    "content": "<p>This year, the React team unveiled something they've been quietly researching for years: an official way to run React components exclusively on the server. This is a significant paradigm shift, and it's caused a whole lot of confusion in the React community. In this tutorial, we'll explore this new world, and build an intuition for how it works, and how we can take advantage of it.</p>\n<div style=\"margin-top: 50px; font-style: italic;\">\n  <strong><a href=\"https://www.joshwcomeau.com/react/server-components/\">Keep reading</a>.</strong>\n</div>\n<br />\n<br />",
    "pub_date": "2023-09-19T23:19:14Z",
    "upd_date": "2023-09-19T23:19:14Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:52.006Z",
    "updated": "2023-10-09T09:34:52.006Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 102,
  "fields": {
    "feed": 13,
    "title": "Animated Pride Flags",
    "author": "Josh W. Comeau",
    "url": "https://www.joshwcomeau.com/animation/pride-flags/",
    "image_url": "https://www.joshwcomeau.com/images/og-pride-flags.png",
    "description": "Happy Pride month! In this tutorial, I'll share a handful of my favourite animation tricks. You'll learn how to build an animated wavy pride flag using CSS keyframes and linear gradients. We'll also see how to make it dynamic using React. 🏳️‍🌈",
    "summary": "Happy Pride month! In this tutorial, I'll share a handful of my favourite animation tricks. You'll learn how to build an animated wavy pride flag using CSS keyframes and linear gradients. We'll also see how to make it dynamic using React. 🏳️‍🌈",
    "content": "<p>Happy Pride month! In this tutorial, I'll share a handful of my favourite animation tricks. You'll learn how to build an animated wavy pride flag using CSS keyframes and linear gradients. We'll also see how to make it dynamic using React. 🏳️‍🌈</p>\n<div style=\"margin-top: 50px; font-style: italic;\">\n  <strong><a href=\"https://www.joshwcomeau.com/animation/pride-flags/\">Keep reading</a>.</strong>\n</div>\n<br />\n<br />",
    "pub_date": "2023-06-08T18:21:34Z",
    "upd_date": "2023-06-08T18:21:34Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:52.169Z",
    "updated": "2023-10-09T09:34:52.169Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 103,
  "fields": {
    "feed": 12,
    "title": "A message from the Captain of the S.S. Layoff",
    "author": null,
    "url": "https://joshcollinsworth.com/blog/layoffs-are-bullshit",
    "image_url": "https://joshcollinsworth.com/images/post_images/capn.webp",
    "description": "Indeed, there's plenty to go around, thanks largely to all of you. But the fastest way to make the numbers better is to stop feeding and sheltering people and their families. Nothing personal.",
    "summary": "Indeed, there's plenty to go around, thanks largely to all of you. But the fastest way to make the numbers better is to stop feeding and sheltering people and their families. Nothing personal.",
    "content": null,
    "pub_date": "2023-10-04T00:00:00Z",
    "upd_date": "2023-10-04T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:52.508Z",
    "updated": "2023-10-09T09:34:52.508Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 104,
  "fields": {
    "feed": 12,
    "title": "Classic rock, Mario Kart, and why we can't agree on Tailwind",
    "author": null,
    "url": "https://joshcollinsworth.com/blog/tailwind-is-smart-steering",
    "image_url": "https://joshcollinsworth.com/images/post_images/tailwind.png",
    "description": "It's popular to say we can’t agree on Tailwind, but I posit we actually already do. I think what we actually disagree on isn’t the details of this (or any) specific software; it's in what we value, and how we each define assets and liabilities.",
    "summary": "It's popular to say we can’t agree on Tailwind, but I posit we actually already do. I think what we actually disagree on isn’t the details of this (or any) specific software; it's in what we value, and how we each define assets and liabilities.",
    "content": null,
    "pub_date": "2023-09-26T00:00:00Z",
    "upd_date": "2023-09-26T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:52.707Z",
    "updated": "2023-10-09T09:34:52.707Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 105,
  "fields": {
    "feed": 12,
    "title": "Things you forgot (or never knew) because of React",
    "author": null,
    "url": "https://joshcollinsworth.com/blog/antiquated-react",
    "image_url": "https://joshcollinsworth.com/images/post_images/because-of-react.png",
    "description": "If you don't often look beyond established comfortable defaults, you might be surprised to learn just how far the world of frontend has moved away from React, and how big that gap continues to grow.",
    "summary": "If you don't often look beyond established comfortable defaults, you might be surprised to learn just how far the world of frontend has moved away from React, and how big that gap continues to grow.",
    "content": null,
    "pub_date": "2023-08-04T00:00:00Z",
    "upd_date": "2023-08-04T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:52.954Z",
    "updated": "2023-10-09T09:34:52.954Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 106,
  "fields": {
    "feed": 11,
    "title": "How to Migrate from create-react-app to Vite using Jest and Browserslist",
    "author": "Saheed Oladele",
    "url": "https://www.freecodecamp.org/news/how-to-migrate-from-create-react-app-to-vite/",
    "image_url": "https://www.freecodecamp.org/news/content/images/2023/10/pexels-tima-miroshnichenko-5380664.jpg",
    "description": "The React team no longer recommends using create-react-app (CRA) [https://github.com/facebook/create-react-app] as a bundler to create a new React application. The team and community realized that even though CRA was a jump-starter, it lacked the flexibility needed to configure or manage large and complex applications. Nowadays, the team recommends using production-grade",
    "summary": "The React team no longer recommends using create-react-app (CRA) [https://github.com/facebook/create-react-app] as a bundler to create a new React application. The team and community realized that even though CRA was a jump-starter, it lacked the flexibility needed to configure or manage large and complex applications. Nowadays, the team recommends using production-grade",
    "content": "The React team no longer recommends using create-react-app (CRA) [https://github.com/facebook/create-react-app] as a bundler to create a new React application. The team and community realized that even though CRA was a jump-starter, it lacked the flexibility needed to configure or manage large and complex applications. Nowadays, the team recommends using production-grade",
    "pub_date": "2023-10-06T18:01:00Z",
    "upd_date": "2023-10-06T18:01:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:53.442Z",
    "updated": "2023-10-09T09:36:09.176Z",
    "tags": [
      96
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 107,
  "fields": {
    "feed": 11,
    "title": "How to Use URLs for State Management in React",
    "author": "Jaja Ibifubara David",
    "url": "https://www.freecodecamp.org/news/how-to-use-urls-for-state-management-in-react/",
    "image_url": "https://www.freecodecamp.org/news/content/images/2023/10/Article-Cover.png",
    "description": "For years, URLs have been synonymous with web navigation. But the tide is turning, especially with the emergence of single-page applications. In the React universe, URLs are stepping up to play a pivotal role in state management. This article will guide you through the transformative journey of URLs as state",
    "summary": "For years, URLs have been synonymous with web navigation. But the tide is turning, especially with the emergence of single-page applications. In the React universe, URLs are stepping up to play a pivotal role in state management. This article will guide you through the transformative journey of URLs as state",
    "content": "For years, URLs have been synonymous with web navigation. But the tide is turning, especially with the emergence of single-page applications. In the React universe, URLs are stepping up to play a pivotal role in state management. This article will guide you through the transformative journey of URLs as state",
    "pub_date": "2023-10-06T17:50:28Z",
    "upd_date": "2023-10-06T17:50:28Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:53.851Z",
    "updated": "2023-10-09T09:34:53.852Z",
    "tags": [
      96
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 108,
  "fields": {
    "feed": 11,
    "title": "The Ethics of AI and ML",
    "author": "Beau Carnes",
    "url": "https://www.freecodecamp.org/news/the-ethics-of-ai-and-ml/",
    "image_url": "https://www.freecodecamp.org/news/content/images/2023/10/aiethics.png",
    "description": "The rapid ascent of Artificial Intelligence (AI) and Machine Learning (ML) into mainstream technology and its influence on various sectors of our society raises a series of profound ethical questions. It's not just about the technical ability of these systems but the ethical implications that could shape our future.",
    "summary": "The rapid ascent of Artificial Intelligence (AI) and Machine Learning (ML) into mainstream technology and its influence on various sectors of our society raises a series of profound ethical questions. It's not just about the technical ability of these systems but the ethical implications that could shape our future.",
    "content": "The rapid ascent of Artificial Intelligence (AI) and Machine Learning (ML) into mainstream technology and its influence on various sectors of our society raises a series of profound ethical questions. It's not just about the technical ability of these systems but the ethical implications that could shape our future.",
    "pub_date": "2023-10-06T15:16:06Z",
    "upd_date": "2023-10-06T15:16:06Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:54.044Z",
    "updated": "2023-10-09T09:34:54.044Z",
    "tags": [
      97
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 109,
  "fields": {
    "feed": 10,
    "title": "Understanding JavaScript Closures: A Practical Approach",
    "author": "Paul Upendo",
    "url": "https://www.digitalocean.com/community/tutorials/understanding-javascript-closures-a-practical-approach",
    "image_url": "",
    "description": "Want to quickly and easily understand JavaScript Closure and Lexical Scope? Dive in.",
    "summary": "Want to quickly and easily understand JavaScript Closure and Lexical Scope? Dive in.",
    "content": "<h3 id=\"introduction\"><a href=\"#introduction\">Introduction</a><a class=\"hash-anchor\" href=\"#introduction\"></a></h3>\n<p><em>Learning a new language involves a series of steps, whereas its mastery is a product of patience, practice, mistakes, and experience.</em></p>\n<p>Some developers will have enough knowledge to deliver on features as per a client’s demand, but it takes more than just that to be a good developer.</p>\n<blockquote>\n<p>A good developer is one who takes time to go back and get a good grasp of a language’s underlying/core concepts.</p>\n</blockquote>\n<p>Today we take a deeper look at JavaScript closures and hope that the knowledge you learn will be beneficial in your projects.</p>\n<h2 id=\"what-is-a-javascript-closure\"><a href=\"#what-is-a-javascript-closure\">What is a JavaScript closure?</a><a class=\"hash-anchor\" href=\"#what-is-a-javascript-closure\"></a></h2>\n<p><strong>A JavaScript Closure</strong> is when an inner function has access to members of the outer function (lexical scope) even when executing outside the scope of the outer function.</p>\n<p>Therefore, we cannot afford to talk about closure while leaving out functions and scope.</p>\n<h2 id=\"scope-in-javascript\"><a href=\"#scope-in-javascript\">Scope in JavaScript</a><a class=\"hash-anchor\" href=\"#scope-in-javascript\"></a></h2>\n<p><strong>Scope</strong> refers to the extent of visibility of a variable defined in a program. Ways to create scope in JavaScript are through: <code>try-catch blocks</code>, <code>functions</code>, the <code>let keyword</code> with curly braces among others. We mainly have two variations of scope: the <strong>global scope</strong> and <strong>local scope</strong>.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> initialBalance <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">// Global Scope</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token doc-comment comment\">/**\n   * Local Scope\n   * Code here has access to anything declared in the global scope\n   */</span>\n  <span class=\"token keyword\">var</span> newBalance <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>initialBalance<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> newBalance\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>Each function in JavaScript creates its own local scope when declared.</p>\n</blockquote>\n<p>This means that whatever is declared inside the function’s local scope is not accessible from the outside. Consider the illustration below:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> initialBalance <span class=\"token operator\">=</span> <span class=\"token number\">300</span> <span class=\"token comment\">// Variable declared in the Global Scope</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> balance <span class=\"token comment\">// Variable declared in function scope</span>\n\n  balance <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>initialBalance<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> balance\n<span class=\"token punctuation\">}</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>initialBalance<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Will output initialBalance value as it is declared in the global scope</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ReferenceError: Can&apos;t find variable: balance</span>\n</code></pre>\n<h2 id=\"lexical-scope\"><a href=\"#lexical-scope\">Lexical Scope</a><a class=\"hash-anchor\" href=\"#lexical-scope\"></a></h2>\n<p><strong>JavaScript’s Lexical Scope</strong>  is determined during the <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch1.md#compiler-theory\">compile phase</a>. It sets the scope of a variable so that it may only be called/referenced from within the block of code in which it is defined.</p>\n<p>A function declared inside a surrounding function block has access to variables in the surrounding function’s lexical scope.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> initialBalance <span class=\"token operator\">=</span> <span class=\"token number\">300</span> <span class=\"token comment\">// Global Scope</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token doc-comment comment\">/**\n   * Local Scope\n   * Code here has access to anything declared in the global scope\n   */</span>\n  <span class=\"token keyword\">var</span> balance <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>initialBalance<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> actualBalance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token constant\">TRANSACTIONCOST</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token keyword control-flow\">return</span> balance <span class=\"token operator\">-</span> <span class=\"token constant\">TRANSACTIONCOST</span> <span class=\"token doc-comment comment\">/**\n     * Accesses balance variable from the lexical scope\n     */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Immediately Invoked Function expression. IIFE</span>\n\n  <span class=\"token comment\">// console.log(TRANSACTIONCOST) // ReferenceError: Can&apos;t find variable: TRANSACTIONCOST</span>\n  <span class=\"token keyword control-flow\">return</span> actualBalance\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Invoking an inner function outside of its enclosing function and yet maintain access to variables in its enclosing function (lexical scope) creates a JavaScript Closure.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">person</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">&apos;Paul&apos;</span>  <span class=\"token comment\">// Local variable</span>\n\n  <span class=\"token keyword\">var</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">speak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//  new function scope</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;My name is &apos;</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token doc-comment comment\">/**\n      * Accessing the name variable from the outer function scope (lexical scope)\n      */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token comment\">// actions object with a function</span>\n\n  <span class=\"token keyword control-flow\">return</span> actions <span class=\"token doc-comment comment\">/**\n  * We return the actions object\n  * We then can invoke the speak function outside this scope\n  */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Inner function invoked outside its lexical Scope</span>\n</code></pre>\n<p>A Closure allows us to expose a public interface while at the same time hiding and preserving execution context from the outside scope.</p>\n<p>Some JavaScript design patterns make use of closures.</p>\n<h2 id=\"module-pattern\"><a href=\"#module-pattern\">Module Pattern</a><a class=\"hash-anchor\" href=\"#module-pattern\"></a></h2>\n<p>One of these well-implemented patterns is the module pattern, this pattern allows you to emulate: private, public, and privileged members.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">&apos;foo&apos;</span> <span class=\"token comment\">// Private Property</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addToFoo</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">bam</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Private Method</span>\n    foo <span class=\"token operator\">=</span> bam\n    <span class=\"token keyword control-flow\">return</span> foo\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> publicInterface <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">bar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Public Method</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">&apos;bar&apos;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">bam</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Public Method</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">addToFoo</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;bam&apos;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Invoking the private method</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword control-flow\">return</span> publicInterface <span class=\"token comment\">// Object will contain public methods</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// bar</span>\n<span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// bam</span>\n</code></pre>\n<p>From our module pattern illustration above, only public methods and properties in the return object will be available outside the closure’s execution context.</p>\n<p>All private members will still exist as their execution context is preserved but hidden from the outside scope.</p>\n<h2 id=\"more-illustrations-on-closures\"><a href=\"#more-illustrations-on-closures\">More illustrations on Closures</a><a class=\"hash-anchor\" href=\"#more-illustrations-on-closures\"></a></h2>\n<p>When we pass a function into a <code>setTimeout</code> or any kind of callback. The function still remembers the lexical scope because of the closure.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">&apos;bar&apos;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// bar</span>\n</code></pre>\n<p>Closure and loops</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token doc-comment comment\">/**\n* Prints 1 through 5 after each second\n* Closure enables us to remember the variable i\n* An IIFE to pass in a new value of the variable i for each iteration\n* IIFE (Immediately Invoked Function expression)\n*/</span>\n</code></pre>\n<pre class=\"language-javascript\"><code><span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token doc-comment comment\">/**\n* Prints 1 through 5 after each second\n* Closure enabling us to remember the variable i\n* The let keyword rebinds the value of i for each iteration\n*/</span>\n</code></pre>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a><a class=\"hash-anchor\" href=\"#conclusion\"></a></h2>\n<p>I bet we now have an understanding of closures and can do the following:</p>\n<ul>\n<li>Illustrate its use cases or identify it in contexts we never knew we used it</li>\n<li>Preserve execution context as we wish</li>\n<li>Implement code in JavaScript’s module pattern</li>\n<li>Use closures in our code, with a clear understanding</li>\n</ul>\n<p>Until next time, happy coding.</p>",
    "pub_date": "2020-09-15T19:32:50.151Z",
    "upd_date": "2020-09-15T19:32:50.151Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:56.873Z",
    "updated": "2023-10-09T09:34:56.873Z",
    "tags": [
      90
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 110,
  "fields": {
    "feed": 10,
    "title": "Prevent Errors from Crashing Gulp Watch",
    "author": "Samuel Oloruntoba",
    "url": "https://www.digitalocean.com/community/tutorials/prevent-errors-from-crashing-gulp-watch",
    "image_url": "",
    "description": "Gulp is an amazing tool. Here are some tips to keep it running smoothly.",
    "summary": "Gulp is an amazing tool. Here are some tips to keep it running smoothly.",
    "content": "<h3 id=\"introduction\"><a href=\"#introduction\">Introduction</a><a class=\"hash-anchor\" href=\"#introduction\"></a></h3>\n<p>Developers are a lazy bunch. Or at least I assume we are. Because of this reason we tend to build tools that make our work faster. From highly customizable editors to task runners.</p>\n<p>With gulp, we can build tasks that automatically compile <a href=\"http://sass-lang.com/\">Sass</a>, start a Laravel server, <a href=\"https://www.digitalocean.com/community/tutorials/a-quick-guide-to-using-livereload-with-gulp\">live reload</a> the browser, transpile ES6 to ES5, etc.</p>\n<p>Thankfully, there are a few languages out there like Javascript which is very forgiving. Nonetheless, mistakes can happen.</p>\n<p>Since we have a “gulp watcher” that watches our project and runs defined tasks when we make any change, an error can easily break our pipeline.</p>\n<h2 id=\"creating-and-watching-a-gulp-task\"><a href=\"#creating-and-watching-a-gulp-task\">Creating and Watching a Gulp Task</a><a class=\"hash-anchor\" href=\"#creating-and-watching-a-gulp-task\"></a></h2>\n<p>Watching in Gulp refers to triggering a task when a change is made to a project’s source.</p>\n<p>So, before we watch a task, let’s create a task that we will use as our example throughout this tutorial. The task we will create is a <a href=\"https://www.digitalocean.com/community/tutorials/getting-started-with-sass\">SCSS</a> compilation task.</p>\n<p>We can create a new working directory, name it whatever you want. We can now create our <code>gulpfile.js</code> in our working directory. Then we add our build task. Before we define our task, we need to install our dependencies.</p>\n<p>For this article, here is a list of our dependencies.</p>\n<pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">&quot;private&quot;</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">&quot;devDependencies&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">&quot;gulp&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;^3.9.1&quot;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;gulp-notify&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;^2.2.0&quot;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;gulp-plumber&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;^1.1.0&quot;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;gulp-sass&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;^2.3.2&quot;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;gulp-util&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;^3.0.7&quot;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Now that we have our dependency list, we can run <code>npm install</code>  or if you have the new yarn package manager based on npm, you can run <code>yarn install</code>.</p>\n<p>In the gulpfile, we can then define our gulp task.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp-sass&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css/&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>So from the command line, we can run <code>gulp compile-scss</code> and our Sass file should be compiled.</p>\n<h3 id=\"watching-a-task\"><a href=\"#watching-a-task\">Watching a Task</a><a class=\"hash-anchor\" href=\"#watching-a-task\"></a></h3>\n<p>Now that we have a task defined, let’s trigger the file whenever we make a change to the project’s source.</p>\n<pre class=\"language-javascript\"><code>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;watch&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/**/*.scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>From the terminal, we can run <code>gulp watch</code> and whenever a file ending with <code>.scss</code> extension in any folder within the <code>scss</code> directory gets changed, <code>compile-scss</code> task is run.</p>\n<h2 id=\"prevent-errors-from-breaking-tasks\"><a href=\"#prevent-errors-from-breaking-tasks\">Prevent Errors from Breaking Tasks</a><a class=\"hash-anchor\" href=\"#prevent-errors-from-breaking-tasks\"></a></h2>\n<p>We’ve got our task and watcher up and running, but if an error occurs in our SCSS file, the gulp watcher gets terminated. We then have to go back to the terminal and type <code>gulp watch</code> again. This gets very annoying really fast. A silly little <code>;</code> can break our watcher.</p>\n<p>To avoid breakage like this, we can one of three things:</p>\n<ol>\n<li><a href=\"#swallow-the-error\">Swallow the Error</a>.</li>\n<li><a href=\"#gulp-util\">Gulp Util</a>.</li>\n<li><a href=\"#gulp-plumber\">Gulp Plumber</a>.</li>\n</ol>\n<h2 id=\"swallow-the-error\"><a href=\"#swallow-the-error\">Swallow the Error</a><a class=\"hash-anchor\" href=\"#swallow-the-error\"></a></h2>\n<p>One a way to go about dealing with errors is to “<strong>swallow the error</strong>”. The error(s) will be taken in by the application to prevent the task from breaking. Basically, errors will not be reported and the task will keep running.</p>\n<p>Since gulp sends a lot of events, we can hook into the <strong>error</strong> event of the task we don’t want to fail.</p>\n<pre class=\"language-javascript\"><code>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;error&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;end&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css/&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>As you can see above, from the <code>on</code> listener on the task. The <code>on</code> event listener takes in two parameters: the event and a function to be triggered when the event gets called. The function that gets called takes in the error object. We then log the stringified version of the error to the terminal.</p>\n<p>It is absolutely important to <code>this.emit('end')</code>, if this event is not triggered, the next pipe in this task pipeline never gets called, and the buffer will be left open.</p>\n<h2 id=\"gulp-util\"><a href=\"#gulp-util\">Gulp Util</a><a class=\"hash-anchor\" href=\"#gulp-util\"></a></h2>\n<p>This method involves using the <strong><a href=\"https://www.npmjs.com/package/gulp-util\">gulp-util</a></strong> plugin.</p>\n<p>The <strong>gulp-util</strong> plugin provides a lot of helpful methods, one of them is <code>log</code>. With this method, we can log the error to the terminal. To use this, we attach an error event listener to the pipe.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> gutil <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp-util&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;error&apos;</span><span class=\"token punctuation\">,</span> gutil<span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css/&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>But this method also requires us to go through each pipe in the pipeline and attach <code>.on('error', gutil.log)</code> listener to all tasks. Something like this.</p>\n<pre class=\"language-javascript\"><code>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;error&apos;</span><span class=\"token punctuation\">,</span> gutil<span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">autoprefixer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;error&apos;</span><span class=\"token punctuation\">,</span> gutil<span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css/&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"gulp-plumber\"><a href=\"#gulp-plumber\">Gulp Plumber</a><a class=\"hash-anchor\" href=\"#gulp-plumber\"></a></h2>\n<p>Out of all three methods, this is my favorite. With <strong><a href=\"https://www.npmjs.com/package/gulp-plumber\">gulp-plumber</a></strong>, we don’t need to go to each pipe and add a listener, we can just add a global listener to the task and have a meaningful error displayed.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> plumber <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp-plumber&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;compile-scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">autoprefixer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cssnano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css/&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>We can have multiple pipes in this task and still only ever need to call plumber once.</p>\n<h2 id=\"alerting-the-user-to-errors\"><a href=\"#alerting-the-user-to-errors\">Alerting the User to Errors</a><a class=\"hash-anchor\" href=\"#alerting-the-user-to-errors\"></a></h2>\n<p>Now that we can see the errors without breaking out of watch, we need to find a way to get some kind of notification when an error occurs. There are several ways to do this, but I will cover only one method.</p>\n<p>The method I will cover in this article: will play a beeping sound when an error occurs, and also show a system notification that looks like this.</p>\n<p><img alt=\"\" src=\"https://scotch-res.cloudinary.com/image/upload/media/16/xKCBRVOFRL2c4WR2U992_gulp%20notify%20error.PNG\" /></p>\n<p>This notification looks different according to your operating system.</p>\n<p>To get this feature to work, we need to extend the <strong>gulp-plumber</strong> plugin. So in our gulp task, we update our call to <strong>plumber</strong>.</p>\n<pre class=\"language-javascript\"><code>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">errorHandler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// do stuff here</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Notice, we pass an object that has an <code>errorHandler</code> property that takes a closure to <strong>plumber</strong>. We can then call our notify plugin in that closure.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> notify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp-notify&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">errorHandler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            notify<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;Gulp error in &quot;</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span><span class=\"token property-access\">plugin</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span>  err<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>We call the notify plugin and pass it an object that has a <code>title</code> and <code>message</code> property. Now, when an error occurs, a notification is triggered. To play a beeping sound, we can use **gulp-util ** for that.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">var</span> notify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;gulp-notify&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;scss/main.scss&apos;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">plumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">errorHandler</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            notify<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;Gulp error in &quot;</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span><span class=\"token property-access\">plugin</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span>  err<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// play a sound once</span>\n            gutil<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;css&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Now, when an error occurs, we get both sound and system notification, and then you can check your terminal for more information.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a><a class=\"hash-anchor\" href=\"#conclusion\"></a></h2>\n<p>The configuration in this article should be suitable for most users, but if you have any suggestions/improvements, please let us know in the comments.</p>",
    "pub_date": "2020-09-15T19:31:34.461Z",
    "upd_date": "2020-09-15T19:31:34.461Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:57.466Z",
    "updated": "2023-10-09T09:34:57.466Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 111,
  "fields": {
    "feed": 10,
    "title": "Using Git Hooks in Your Development Workflow",
    "author": "Mabishi Wakio",
    "url": "https://www.digitalocean.com/community/tutorials/using-git-hooks-in-your-development-workflow",
    "image_url": "",
    "description": "In this riveting guide, learn how to use git hooks to enhance your development workflow",
    "summary": "In this riveting guide, learn how to use git hooks to enhance your development workflow",
    "content": "<h3 id=\"introduction\"><a href=\"#introduction\">Introduction</a><a class=\"hash-anchor\" href=\"#introduction\"></a></h3>\n<p><a href=\"https://git-scm.com/\">Git</a>, a version control system created by Linus Torvalds, author of the Linux kernel, has become one of the most popular version control systems used globally. Certainly, this is because of its distributed nature, high performance, and reliability.</p>\n<p>In this tutorial, we’ll look at git hooks. These hooks are a feature of git which furthers its extensibility by allowing developers to create event-triggered scripts.</p>\n<p>We’ll look through the different types of git hooks and implement a few to get you well on the way to customizing your own.</p>\n<blockquote>\n<p>A <a href=\"https://git-scm.com/book/it/v2/Customizing-Git-Git-Hooks\">git hook</a> is a script that git executes before or after a relevant git event or action is triggered.</p>\n</blockquote>\n<p>Throughout the developer version control workflow, git hooks enable you to customize git’s internal behavior when certain events are triggered.</p>\n<p>They can be used to perform actions such as:</p>\n<ol>\n<li>Push to staging or production without leaving git</li>\n<li>No need to mess with SSH or FTP</li>\n<li>Prevent commits through enforcing commit policy.</li>\n<li>Prevent pushes or merges that don’t conform to certain standards or meet guideline expectations.</li>\n<li>Facilitate continuous deployment.</li>\n</ol>\n<p>This proves extremely helpful for developers as git gives them the flexibility to fine-tune their development environment and automate development.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\">Prerequisites</a><a class=\"hash-anchor\" href=\"#prerequisites\"></a></h2>\n<p>Before we get started, there are a few key programs we need to install.</p>\n<ol>\n<li><a href=\"https://git-scm.com/\">git</a></li>\n<li><a href=\"https://nodejs.org/en/\">Node.js</a></li>\n<li><a href=\"https://www.gnu.org/software/bash/\">bash</a></li>\n</ol>\n<p>Confirm that you’ve installed them correctly by running the following in your terminal:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> <span class=\"token parameter variable\">--version</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">node</span> <span class=\"token parameter variable\">--version</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">--version</span>\n</li></ol>\n</code></pre>\n<p>You should see similar results</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> version <span class=\"token number\">2.7</span>.4 <span class=\"token punctuation\">(</span>Apple Git-66<span class=\"token punctuation\">)</span>\n</li><li>v6.2.2\n</li><li>GNU bash, version <span class=\"token number\">3.2</span>.57<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>-release <span class=\"token punctuation\">(</span>x86_64-apple-darwin15<span class=\"token punctuation\">)</span>\n</li><li>Copyright <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span> <span class=\"token number\">2007</span> Free Software Foundation, Inc.\n</li></ol>\n</code></pre>\n<p>We’ll be using the following directory structure, so go ahead and lay out your project like this.</p>\n<pre class=\"\"><code>+-- git-hooks\n    +-- custom-hooks\n    +-- src\n    |   +-- index.js\n    +-- test\n    |   +-- test.js\n    +-- .jscsrc\n</code></pre>\n<p>That’s all for now as far as prerequisites go, so let’s dive in.</p>\n<h2 id=\"types-of-git-hooks\"><a href=\"#types-of-git-hooks\">Types of git hooks</a><a class=\"hash-anchor\" href=\"#types-of-git-hooks\"></a></h2>\n<p>git hooks can be categorized into two main types. These are:</p>\n<ol>\n<li>Client-side hooks</li>\n<li>Server-side hooks</li>\n</ol>\n<p>In this tutorial, we’ll focus more on client-side hooks. However, we will briefly discuss server-side hooks.</p>\n<h2 id=\"client-side-hooks\"><a href=\"#client-side-hooks\">Client-Side Hooks</a><a class=\"hash-anchor\" href=\"#client-side-hooks\"></a></h2>\n<p>These are hooks installed and maintained on the developer’s local repository and are executed when events on the local repository are triggered. Because they are maintained locally, they are also known as local hooks.</p>\n<p>Since they are local, they cannot be used as a way to enforce universal commit policies on a remote repository as each developer can alter their hooks. However, they make it easier for developers to adhere to workflow guidelines like linting and commit message guides.</p>\n<h3 id=\"installing-local-hooks\"><a href=\"#installing-local-hooks\">Installing local hooks</a><a class=\"hash-anchor\" href=\"#installing-local-hooks\"></a></h3>\n<p>Initialize the project we just created as a git repository by running</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> init\n</li></ol>\n</code></pre>\n<p>Next, let’s navigate to the <code>.git/hooks</code> directory in our project and expose the contents of the folder</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token builtin class-name\">cd</span> ./.git/hooks <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ls</span>\n</li></ol>\n</code></pre>\n<p>We’ll notice a few files inside the hooks directory, namely</p>\n<pre class=\"\"><code>applypatch-msg.sample\ncommit-msg.sample\npost-update.sample\npre-applypatch.sample\npre-commit.sample\npre-push.sample\npre-rebase.sample\nprepare-commit-msg.sample\nupdate.sample\n</code></pre>\n<p>These scripts are the default hooks that git has so helpfully gifted us with. Notice that their names make reference to git events like pushes, commits, and rebases.</p>\n<p>Useful in their own right, they also serve as a guideline on how hooks for certain events can be triggered.</p>\n<p>The <code>.sample</code> extension prevents them from being run, so to enable them, remove the <code>.sample</code> extension from the script name.</p>\n<p>The hooks we’ll write here will be in bash though you can use Python or even Perl. Git hooks can be written in any language as long as the file is executable.</p>\n<p>We make the hook executable by using the chmod utility.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">chmod</span> +x .git/hooks/<span class=\"token operator\">&lt;</span>insert-hook-name-here<span class=\"token operator\">&gt;</span>\n</li></ol>\n</code></pre>\n<h3 id=\"order-of-execution\"><a href=\"#order-of-execution\">Order of execution</a><a class=\"hash-anchor\" href=\"#order-of-execution\"></a></h3>\n<p>Mimicking the developer workflow for the commit process, hooks are executed in the following hierarchy.</p>\n<pre class=\"\"><code>        &lt;pre-commit&gt;\n             |\n    &lt;prepare-commit-msg&gt;\n             |\n        &lt;commit-msg&gt;\n             |\n       &lt;post-commit&gt;\n</code></pre>\n<h3 id=\"pre-commit\"><a href=\"#pre-commit\">pre-commit</a><a class=\"hash-anchor\" href=\"#pre-commit\"></a></h3>\n<p>The pre-commit hook is executed before git asks the developer for a commit message or creates a commit package. This hook can be used to make sure certain checks pass before a commit can be considered worthy to be made to the remote.  No arguments are passed to the pre-commit script and if the script exists with a non-zero value, the commit event will be aborted.</p>\n<p>Before we get into anything heavy, let’s create a simple pre-commit hook to get us comfortable.</p>\n<p>Create a pre-commit hook inside the <code>.git/hooks</code> directory like this.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">touch</span> pre-commit <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">vi</span> pre-commit\n</li></ol>\n</code></pre>\n<p>Enter the following into the pre-commit hook file</p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Can you make a commit? Well, it depends.&quot;</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n</code></pre>\n<p>Save and exit the editor by running:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li>esc <span class=\"token keyword\">then</span> :wq\n</li></ol>\n</code></pre>\n<p>Don’t forget to make the hook file executable by running:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">chmod</span> + x .git/hooks/pre-commit\n</li></ol>\n</code></pre>\n<p>Let’s write out some code to test our newly minted hook against. At the root of our project, create a file called <code>hello-world.py</code>:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">touch</span> hello-world.py\n</li></ol>\n</code></pre>\n<p>Inside the file, enter the following:</p>\n<pre class=\"language-python\"><code><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">&apos;Hello Hooks&apos;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># python v3</span>\n<span class=\"token comment\"># print &apos;Hello Hooks&apos; # python v2</span>\n</code></pre>\n<p>Next, let’s add the file into our git staging environment and begin a commit.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> commit\n</li></ol>\n</code></pre>\n<p>Are you surprised that git doesn’t let us commit our work?</p>\n<p>As an experiment, modify the last line in the <code>pre-commit</code> hook we created from <code>exit 1</code> to <code>exit 0</code> and trigger another commit.</p>\n<p>Now that we understand that a hook is just an event-triggered script, let’s create something with more utility.</p>\n<p>In our example below, we want to make sure that all the tests for our code pass and that we have no linting errors before we commit.</p>\n<p>We’re using <a href=\"https://mochajs.org/\">mocha</a> as our javascript test framework and <a href=\"http://jscs.info/\">jscs</a> as our linter.</p>\n<p>Fill the following into the <code>.git/hooks/pre-commit</code> file</p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Exits with non zero status if tests fail or linting errors exist</span>\n<span class=\"token assign-left variable\">num_of_failures</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>mocha <span class=\"token parameter variable\">-R</span> json <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> failures <span class=\"token parameter variable\">-m</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">&apos;{print &#x24;2}&apos;</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">&apos;s/[,]/&apos;</span>&apos;/&apos;<span class=\"token variable\">`</span></span>\n\n<span class=\"token assign-left variable\">errors</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>jscs <span class=\"token parameter variable\">-r</span> inline ./test/test.js<span class=\"token variable\">`</span></span>\n<span class=\"token assign-left variable\">num_of_linting_errors</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>jscs <span class=\"token parameter variable\">-r</span> junit ./test/test.js <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> failures <span class=\"token parameter variable\">-m</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">&apos;{print &#x24;4}&apos;</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">&apos;s/failures=/&apos;</span>&apos;/<span class=\"token string\">&apos; | sed s/&quot;&gt;&quot;/&apos;</span>&apos;/ <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> s/<span class=\"token punctuation\">\\</span>&quot;/<span class=\"token string\">&apos;&apos;</span>/ <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> s/<span class=\"token punctuation\">\\</span>&quot;/<span class=\"token string\">&apos;&apos;</span>/<span class=\"token variable\">`</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">&#x24;num_of_failures</span> <span class=\"token operator\">!=</span> <span class=\"token string\">&apos;0&apos;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;<span class=\"token variable\">&#x24;num_of_failures</span> tests have failed. You cannot commit until all tests pass.\n        Commit exiting with a non-zero status.&quot;</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">&#x24;num_of_linting_errors</span> <span class=\"token operator\">!=</span>  <span class=\"token string\">&apos;0&apos;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Linting errors present. <span class=\"token variable\">&#x24;errors</span>&quot;</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n</code></pre>\n<p>Save the document and exit the vi editor as usual by using,</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li>esc <span class=\"token keyword\">then</span> :wq\n</li></ol>\n</code></pre>\n<p>The first line of the script indicates that we want the script to be run as a bash script. If the script was a python one, we would instead use</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token shebang important\">#!/usr/bin/env python</span>\n</li></ol>\n</code></pre>\n<p>Make the file executable as we mentioned before by running</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">chmod</span> +x .git/hooks/pre-commit\n</li></ol>\n</code></pre>\n<p>To give our commit hook something to test against, we’ll be creating a method that returns <code>true</code> when an input string contains vowels and <code>false</code> otherwise.</p>\n<p>Create and populate a <code>package.json</code> file at the root of our git-hooks folder by running</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">npm</span> init <span class=\"token parameter variable\">--yes</span>\n</li></ol>\n</code></pre>\n<p>Install the project dependencies like this:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">npm</span> <span class=\"token function\">install</span> chai mocha jscs --save-dev\n</li></ol>\n</code></pre>\n<p>Let’s write a test for our prospective <code>hasVowels</code> method.</p>\n<p><code>git-hooks/test/test.js</code></p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> expect <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;chai&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">expect</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;../src/index&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;Test hasVowels&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;should return false if the string has no vowels&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;N VWLS&apos;</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">to</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">equal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;should return true if the string has vowels&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;No vowels&apos;</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">to</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">equal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Introduce failing test</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;Has vowels&apos;</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">to</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">equal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><code>git-hooks/src/index.js</code></p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\">// Method returns true if a vowel exists in the input string. Returns false otherwise.</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">hasVowels</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> vowels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;[aeiou]&apos;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">&apos;i&apos;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> vowels<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>To configure the <a href=\"http://jscs.info/\">jscs</a> linter, fill the following into the <code>.jscsrc</code> file we’d created in the beginning.</p>\n<p><code>.jscsrc</code></p>\n<pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">&quot;preset&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;airbnb&quot;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;disallowMultipleLineBreaks&quot;</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">&quot;requireSemicolons&quot;</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Now add all the created files into the staging environment and trigger a commit.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> commit\n</li></ol>\n</code></pre>\n<p>What do you think will happen?</p>\n<p>You’re right. Git prevents us from making a commit. Rightfully so, because our tests have failed.\nWorry not. Our pre-commit script has helpfully provided us with hints regarding what could be wrong.</p>\n<p>This is what it tells us:</p>\n<pre class=\"\"><code>1 tests have failed. You cannot commit until all tests pass.\n        Commit exiting with a non-zero status.\n</code></pre>\n<p>If you can’t take my word for it, the screenshot below serves as confirmation.</p>\n<p><img alt=\"pre-commit-fail-test\" src=\"https://scotch-res.cloudinary.com/image/upload/media/8976/oCgFhG7oSWCNlgPUjBr7_git-hooks%20fail-test.png\" /></p>\n<p>Let’s fix things. Edit <strong>line 13</strong> in <code>test/test.js</code> to</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;Has vowels&apos;</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">to</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">equal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Next, add the files to your staging environment, <code>git add .</code> like we did before, and <code>git commit</code></p>\n<p>Git still prevents us from committing.</p>\n<pre class=\"\"><code>Linting errors present. ./test/test.js: line 10, col 49, requireSemicolons: Missing semicolon after statement\n</code></pre>\n<p>Edit <strong>line 10</strong> in <code>test/test.js</code> to</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">&apos;No vowels&apos;</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasVowels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">to</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">equal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Now, running <code>git commit</code> after <code>git add .</code> should provide no challenges because our tests and linting have both passed.</p>\n<p>You can skip the pre-commit hook by running <code>git commit --no-verify</code>.</p>\n<h3 id=\"prepare-commit-msg\"><a href=\"#prepare-commit-msg\">prepare-commit-msg</a><a class=\"hash-anchor\" href=\"#prepare-commit-msg\"></a></h3>\n<p>The prepare-commit-msg hook is executed after the pre-commit hook and its execution populates the vi editor commit message.</p>\n<p>This hook takes one, two, or three arguments.</p>\n<ol>\n<li>The name of the file that contains the commit message to be used.</li>\n<li>The type of commit. This can be message, template, merge, or squash.</li>\n<li>The SHA-1/hash of a commit (when operating on an existing commit).</li>\n</ol>\n<p>In the code below, we’re electing to populate the commit editor workspace with a helpful commit message format reminder prefaced by the name of the current branch.</p>\n<p><code>.git/hooks/prepare-commit-msg</code></p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Result will be output in place of the default commit message on running git commit</span>\n<span class=\"token assign-left variable\">current_branch</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">git</span> rev-parse --abbrev-ref HEAD<span class=\"token variable\">`</span></span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;#<span class=\"token variable\">&#x24;current_branch</span> Commit messages should be of the form [#StoryID:CommitType] Commit Message.&quot;</span> <span class=\"token operator\">&gt;</span> <span class=\"token variable\">&#x24;1</span>\n</code></pre>\n<p>Running <code>git commit</code> will yield the following in the commit text editor</p>\n<pre class=\"\"><code>#$main Commit messages should be of the form [#StoryID:CommitType] Commit Message.\n</code></pre>\n<p>We can continue to edit our commit message and exit out of the editor as usual.</p>\n<h3 id=\"commit-msg\"><a href=\"#commit-msg\">commit-msg</a><a class=\"hash-anchor\" href=\"#commit-msg\"></a></h3>\n<p>This hook is executed after the prepare-commit-msg hook. It can be used to reformat the commit message after it has been input or to validate the message against some checks. For example, it could be used to check for commit message spelling errors or length, before the commit is allowed.</p>\n<p>This hook takes one argument, that is the location of the file that holds the commit message.</p>\n<p><code>.git/hooks/commit-msg</code></p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Validates whether commit message is of a certain format.</span>\n<span class=\"token comment\"># Aborts commit if message is unsatisfactory</span>\n\n<span class=\"token comment\"># Standard commit from Pivotal Tracker [#135316555:Feature]Create Kafka Audit Trail</span>\n<span class=\"token assign-left variable\">commit_standard_regex</span><span class=\"token operator\">=</span><span class=\"token string\">&apos;[#[0-9]{9,}:[a-z]{3,}]:[a-z].+|merge&apos;</span>\n<span class=\"token assign-left variable\">error_message</span><span class=\"token operator\">=</span><span class=\"token string\">&quot;Aborting commit. Please ensure your commit message meets the\n               standard requirement. &apos;[#StoryID:CommitType]Commit Message&apos;\n              Use &apos;[#135316555:Feature]Create Kafka Audit Trail&apos; for reference&quot;</span>\n\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-iqE</span> <span class=\"token string\">&quot;<span class=\"token variable\">&#x24;commit_standard_regex</span>&quot;</span> <span class=\"token string\">&quot;<span class=\"token variable\">&#x24;1</span>&quot;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;<span class=\"token variable\">&#x24;error_message</span>&quot;</span> <span class=\"token operator\">&gt;</span><span class=\"token file-descriptor important\">&amp;2</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n</code></pre>\n<p>In the code above, we’re validating the user-supplied commit message against a standard commit using a regular expression. If the supplied commit does not conform to the regular expression, an error message is directed to the shell’s standard output, the script exits with a status of one, and the commit is aborted.</p>\n<p>Go ahead. Create a change and try to make a commit of a form other than <code>[#135316555:Chore]Test commit-msg hook</code></p>\n<p>Git will abort the commit process and give you a handly little tip regarding the format of your commit message.</p>\n<p><img alt=\"commit-msg hook\" src=\"https://scotch-res.cloudinary.com/image/upload/media/8976/TK0kI5CyRFuzkf98UwFg_commit-msg%20hook.png\" /></p>\n<h3 id=\"post-commit\"><a href=\"#post-commit\">post-commit</a><a class=\"hash-anchor\" href=\"#post-commit\"></a></h3>\n<p>This hook is executed after the commit-msg hook and since the commit has already been made it cannot abort the commit process.</p>\n<p>It can however be used to notify the relevant stakeholders that a commit has been made to the remote repository.\nWe could write a post-commit hook, say, to email our project team lead whenever we make a commit to the organization’s remote repository.</p>\n<p>In this case, let’s congratulate ourselves on our hard work.</p>\n<p><code>.git/hooks/post-commit</code></p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\nsay Congratulations<span class=\"token operator\">!</span> You<span class=\"token punctuation\">\\</span>&apos;ve just made a commit<span class=\"token operator\">!</span> Time <span class=\"token keyword\">for</span> a break.\n</code></pre>\n<h3 id=\"post-checkout\"><a href=\"#post-checkout\">post-checkout</a><a class=\"hash-anchor\" href=\"#post-checkout\"></a></h3>\n<p>The post-checkout hook is executed after a successful git checkout is performed. It can be used to conveniently delete temporary files or prepare the checked out development environment by performing installations.</p>\n<p>Its exit status does not affect the checkout process.</p>\n<p>In the hook below, before checkout to another branch, we’ll pull changes made by others on the remote branch and perform some installation.</p>\n<p><code>.git/hooks/post-checkout</code></p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Executed immediately after a git checkout</span>\n<span class=\"token assign-left variable\">repository_name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">basename</span><span class=\"token variable\">`</span></span><span class=\"token function\">git</span> rev-parse --show-toplevel`<span class=\"token variable\"><span class=\"token variable\">`</span>\n<span class=\"token assign-left variable\">current_branch</span><span class=\"token operator\">=</span><span class=\"token variable\">`</span></span><span class=\"token function\">git</span> rev-parse --abbrev-ref HEAD<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token assign-left variable\">present_working_directory</span><span class=\"token operator\">=</span><span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token assign-left variable\">requirements</span><span class=\"token operator\">=</span><span class=\"token variable\">`</span></span><span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">&apos;requirements.txt&apos;</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Pulling remote branch .....&quot;</span>\n<span class=\"token function\">git</span> pull origin &#x24;current_branch\n\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Installing nodeJS dependencies .....&quot;</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Installing yarn package .....&quot;</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token function\">yarn</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Yarning dependencies ......&quot;</span>\n<span class=\"token function\">yarn</span>\n\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token comment\"># Only do this if you find a requirements.txt file at the root of the project</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> &#x24;present_working_directory <span class=\"token operator\">==</span> &#x24;repository_name <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> &#x24;requirements <span class=\"token operator\">==</span> <span class=\"token string\">&apos;requirements.txt&apos;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Creating virtual environments for project .......&quot;</span>\n  <span class=\"token builtin class-name\">source</span><span class=\"token variable\">`</span></span><span class=\"token function\">which</span> virtualenv`\n  <span class=\"token builtin class-name\">echo</span>\n  mkvirtualenv <span class=\"token variable\">&#x24;repository_name</span>/<span class=\"token variable\">&#x24;current_branch</span>\n  workon <span class=\"token variable\">&#x24;repository_name</span>/<span class=\"token variable\">&#x24;current_branch</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot;Installing python dependencies .......&quot;</span>\n  pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> requirements.txt\n<span class=\"token keyword\">fi</span>\n</code></pre>\n<p>Don’t forget to make the script executable.</p>\n<p>To test the script out, create another branch and check it out like this.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>new-branch<span class=\"token operator\">&gt;</span>\n</li></ol>\n</code></pre>\n<h3 id=\"pre-rebase\"><a href=\"#pre-rebase\">pre-rebase</a><a class=\"hash-anchor\" href=\"#pre-rebase\"></a></h3>\n<p>This hook is executed before a rebase and can be used to stop the rebase if it is not desirable.</p>\n<p>It takes one or two parameters:</p>\n<ol>\n<li>The upstream repository</li>\n<li>The branch to be rebased. (This parameter is empty if the rebase is being performed on the current branch)</li>\n</ol>\n<p>Let’s outlaw all rebasing on our repository.</p>\n<p><code>.git/hooks/pre-rebase</code></p>\n<pre class=\"language-bash\"><code><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">&quot; No rebasing until we grow up. Aborting rebase.&quot;</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n</code></pre>\n<p>Phew! We’ve gone through quite a number of client-side hooks. If you’re still with me, good work!</p>\n<h3 id=\"persisting-hooks\"><a href=\"#persisting-hooks\">Persisting hooks</a><a class=\"hash-anchor\" href=\"#persisting-hooks\"></a></h3>\n<p>I’ve got some bad news and good news. Which one would you like first?</p>\n<p><strong>The bad</strong></p>\n<p>The <code>.git/hooks</code> directory is not tagged by version control and so does not persist when we clone a remote repository or when we push changes to a remote repository. This is why we’d earlier stated that local hooks cannot be used to enforce commit policies.</p>\n<p><strong>The good</strong></p>\n<p>Now before you start sweating, there are a few ways we can get around this.</p>\n<ol>\n<li>We can use symbolic links or symlinks to link our custom hooks to the ones in the <code>.git/hooks</code> folder.</li>\n</ol>\n<p>Create a pre-rebase file in our <code>custom-hooks</code> directory and copy the pre-rebase hook we created in <code>.git/hooks/pre-rebase</code> into it. Next, the <code>rm</code> command removes the pre-rebase hook in <code>.git/hooks</code>:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">touch</span> custom-hooks/pre-rebase <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cp</span> .git/hooks/pre-rebase custom-hooks/pre-rebase <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> .git/hooks/pre-rebase\n</li></ol>\n</code></pre>\n<p>Next, use the <code>ln</code> command to link the <code>pre-rebase</code> file in <code>custom-hooks</code> to the <code>.git/hooks</code> directory.</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token comment\"># ln -s &lt;source&gt; &lt;target&gt;</span>\n</li><li><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> custom-hooks/pre-rebase .git/hooks/pre-rebase\n</li></ol>\n</code></pre>\n<p>To confirm that the files have been linked, run the following</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> .git/hooks\n</li></ol>\n</code></pre>\n<p>The output for the <code>pre-rebase</code> file should be similar to this:</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li>lrwxr-xr-x   <span class=\"token number\">1</span> emabishi  staff    23B Dec <span class=\"token number\">27</span> <span class=\"token number\">14</span>:57 pre-rebase -<span class=\"token operator\">&gt;</span> custom-hooks/pre-rebase\n</li></ol>\n</code></pre>\n<p>Notice the <code>l</code> character prefixing the filesystem file permissions line.</p>\n<p>To unlink the two files,</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li> unlink .git/hooks/pre-rebase\n</li></ol>\n</code></pre>\n<p>or</p>\n<pre class=\"prefixed command language-bash\"><code><ol><li><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> .git/hooks/pre-rebase\n</li></ol>\n</code></pre>\n<ol>\n<li>We can create a directory to store our hooks outside the <code>.git/hooks</code> directory. We’ve already done this by storing our pre-rebase hook in the <code>custom-hooks</code> directory. Like our other files, this folder can be pushed to our remote repository.</li>\n</ol>\n<h2 id=\"server-side-hooks\"><a href=\"#server-side-hooks\">Server-Side Hooks</a><a class=\"hash-anchor\" href=\"#server-side-hooks\"></a></h2>\n<p>These are hooks that are executed in a remote repository on the triggering of certain events.</p>\n<p>Is it clear now? Client-side hooks respond to events on a local repository whilst server-side hooks respond to events triggered on a remote repository.</p>\n<p>We’d come across some of them when we listed the files in the <code>.git/hooks</code> directory.</p>\n<p>Let’s look at a few of these hooks now.</p>\n<h3 id=\"order-of-execution\"><a href=\"#order-of-execution\">Order of execution</a><a class=\"hash-anchor\" href=\"#order-of-execution\"></a></h3>\n<p>The server-side hooks we’ll look at here are executed with the following hierarchy.</p>\n<pre class=\"\"><code>       &lt;pre-receive&gt;\n             |\n          &lt;update&gt;\n             |\n       &lt;post-receive&gt;\n</code></pre>\n<h3 id=\"pre-receive\"><a href=\"#pre-receive\">pre-receive</a><a class=\"hash-anchor\" href=\"#pre-receive\"></a></h3>\n<p>This hook is triggered on the remote repository just before the pushed files are updated and can abort the receive process if it exists with a non-zero status.</p>\n<p>Since the hook is executed just before the remote is updated, it can be used to enforce commit policies and reject the entire commit if it is deemed unsatisfactory.</p>\n<h3 id=\"update\"><a href=\"#update\">update</a><a class=\"hash-anchor\" href=\"#update\"></a></h3>\n<p>The update hook is called after the pre-receive hook and functions similarly. The difference is that ii filters each commit ref made to the remote repository independently. It can be used as a fine-tooth comb to reject or accept each ref being pushed.</p>\n<h3 id=\"post-receive\"><a href=\"#post-receive\">post-receive</a><a class=\"hash-anchor\" href=\"#post-receive\"></a></h3>\n<p>This hook is triggered after an update has been done on the remote repository and so cannot abort the update process. Like the post-commit client-side hook, it can be used to trigger notifications on a successful remote repository update.</p>\n<p>In fact, it is more suited for this because a log of the notifications will be stored on a remote server.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\">Conclusion</a><a class=\"hash-anchor\" href=\"#conclusion\"></a></h2>\n<p>We’ve looked at quite a few hooks which should get you up and running. However, I’d love for you to do some more exploration.</p>\n<p>For a more comprehensive look at git hooks, I’d like to direct you to:</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/it/v2/Customizing-Git-Git-Hooks\">The official git guide on hooks</a></li>\n<li><a href=\"https://git-scm.com/docs/githooks\">The git man page on hooks</a></li>\n<li><a href=\"https://www.atlassian.com/git/tutorials/git-hooks/local-hooks\">The Atlassian git hooks guide</a></li>\n</ul>\n<p>It’s a brave new world out there when it comes to git hooks, so luckily, you don’t always have to write your own custom scripts. You can find a pretty comprehensive list of useful frameworks <a href=\"http://githooks.com/\">here</a>.</p>\n<p>All the code we’ve written can be found <a href=\"https://github.com/andela-emabishi/git-hooks/tree/master\">here</a>.</p>",
    "pub_date": "2020-09-15T19:30:32.357Z",
    "upd_date": "2020-09-15T19:30:32.357Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:58.410Z",
    "updated": "2023-10-09T09:34:58.410Z",
    "tags": [
      98
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 112,
  "fields": {
    "feed": 9,
    "title": "We moved to London, UK!",
    "author": "Daniel Roy Greenfeld (daniel@feldroy.com)",
    "url": "https://daniel.feldroy.com/posts/2023-10-we-moved-to-london",
    "image_url": "https://daniel.feldroy.com/images/TODO.jpg",
    "description": "We're going to be in London, UK for a while, here's some of the details.",
    "summary": "We're going to be in London, UK for a while, here's some of the details.",
    "content": "<p>We're going to be here for a while in the United Kingdon, London to be precise.</p>\n<h1>Where are you living?</h1>\n<p>In central London, not far from Oxford Circus.</p>\n<p>We had looked at living more on the periphery, but the cost of rent was the same or barely cheaper - not enough to cover the cost of commuting to the office.</p>\n<h1>What about the USA?</h1>\n<p>The USA is our homeland and we're still US citizens. We still have family and friends there. We're planning on visiting the US at least once a year.</p>\n<h1>What about your daughter?</h1>\n<p>Uma loves London and is going to school here.</p>\n<h1>If I'm in London can I meet up with you?</h1>\n<p>Sure! Some options:</p>\n<ul>\n<li>As I work in the building, I almost always go to <a href=\"https://www.meetup.com/djangolondon/\">Django London</a></li>\n<li>I go to at least one other London tech meetup per month</li>\n<li>If you want to meet up for coffee, hit me up on social media</li>\n</ul>\n<h1>You work at <a href=\"https://kraken.tech/\">Kraken Tech</a>, aren't they connected to Octopus Energy?</h1>\n<p>I work at <a href=\"https://kraken.tech/\">Kraken Tech</a> building software for decarbonization- and electrification-focused retail energy companies like <a href=\"https://octopus.energy\">Octopus Energy</a>. They are sister companies intent on improving the world.</p>\n<p>You can read in detail why I work for them <a href=\"/posts/whats-the-best-thing-about-working-for-octopus-energy-part-1\">here</a>. Just replace everything saying \"Octopus Energy\" with \"Kraken Tech\" - the division in the USA was not there yet when I wrote it.</p>\n<h1>Do you have one of those Octopus Energy referral codes?</h1>\n<p>While I work for Kraken Tech I'm a customer of Octopus Energy. So if you are anywhere on the planet served by Octopus Energy, you should be able to <a href=\"https://share.octopus.energy/beige-dodo-940\">use my referral code to get a £50 credit on your energy bill</a>.</p>",
    "pub_date": "2023-10-10T15:45:00Z",
    "upd_date": "2023-10-10T15:45:00Z",
    "is_read": true,
    "is_favorite": false,
    "created": "2023-10-09T09:34:58.781Z",
    "updated": "2023-10-09T09:35:47.264Z",
    "tags": [
      100,
      103,
      102,
      99,
      101
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 113,
  "fields": {
    "feed": 9,
    "title": "TIL: Rich.console.status for slow processes",
    "author": "Daniel Roy Greenfeld (daniel@feldroy.com)",
    "url": "https://daniel.feldroy.com/posts/til-2023-10-rich-console-status-for-slow-processes",
    "image_url": "https://daniel.feldroy.com/images/profile.jpg",
    "description": "From the command-line a trick to inform users know the system hasn't died and they should wait until it is done.",
    "summary": "From the command-line a trick to inform users know the system hasn't died and they should wait until it is done.",
    "content": "<p>For building CLI, there's so much that <a href=\"https://pypi.org/project/rich/\">rich</a> provides that I can't imagine not using it. Here's adding a moving bar that updates:</p>\n<pre><code class=\"language-python\">from time import sleep\nfrom rich.console import Console\n\nconsole = Console()\n\nwith console.status(\n    \"[bold red]Starting...[/bold red]\", spinner=\"bouncingBar\"\n) as status:\n    console.log(\"Process started\")\n    sleep(3)\n    # If you want to be lazy, not closing the tags doesn't seem to have side effects\n    status.update(\"[bold yellow]still going...\")\n    console.log(\"Process still going\")\n    sleep(2)\n    status.update(\"[bold green]almost there...\")\n    console.log(\"Process getting close\", style=\"bold\")\n    sleep(1)\n    console.log(\"Finish!\", style=\"bold green\")\n</code></pre>\n<p>Rich comes with a lot of spinners to show the system processing. This script displays most of them in action:</p>\n<pre><code class=\"language-python\">from rich import console, spinner\n\nfrom time import sleep\n\nconsole = console.Console()\n\nwith console.status(\"Here we go...\") as status:\n    sleep(2)\n    for key in spinner.SPINNERS.keys():\n        # Skipping the 15 dot variations\n        if key.startswith(\"dots\"):\n            continue\n        status.update(key, spinner=key)\n        sleep(2)\n</code></pre>",
    "pub_date": "2023-10-02T15:45:00Z",
    "upd_date": "2023-10-02T15:45:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:59.038Z",
    "updated": "2023-10-09T09:34:59.038Z",
    "tags": [
      87,
      104
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 114,
  "fields": {
    "feed": 9,
    "title": "TIL: Finding and ignoring files with Glob",
    "author": "Daniel Roy Greenfeld (daniel@feldroy.com)",
    "url": "https://daniel.feldroy.com/posts/til-2023-09-ignoring-with-glob",
    "image_url": "https://daniel.feldroy.com/images/profile.jpg",
    "description": "How to find and ignore files and directories when using glob",
    "summary": "How to find and ignore files and directories when using glob",
    "content": "<p><a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">Glob</a> is a really handy tool for finding filepaths. It resembles regular expressions but the syntax is different. Finding matches is easy:</p>\n<pre><code class=\"language-bash\"># finds python files in the current working directory\n*.py\n# finds all the nested python files.\n**/*.py\n</code></pre>\n<p>What I didn't know until today is how to exclude files. That's done through the use of the <code>!</code> operator. So the inverse of the above is:</p>\n<pre><code class=\"language-bash\"># finds anything but python files in the current working directory\n*.[!py]*\n# finds anything but python files in the nested directory \n- **/*.[!py]*\n</code></pre>",
    "pub_date": "2023-09-27T15:45:00Z",
    "upd_date": "2023-09-27T15:45:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:59.335Z",
    "updated": "2023-10-09T09:34:59.335Z",
    "tags": [
      104
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 115,
  "fields": {
    "feed": 8,
    "title": "Passkeys: What the Heck and Why?",
    "author": "Neal Fennimore",
    "url": "https://css-tricks.com/passkeys-what-the-heck-and-why/",
    "image_url": "https://css-tricks.com/wp-json/social-image-generator/v1/image/377305",
    "description": "<p>These things called&#160;<strong>passkeys</strong>&#160;sure are making the rounds these days. They were a main attraction at&#160;<a href=\"https://www.w3.org/2022/09/TPAC/demos/passkeys.html\" rel=\"noopener\">W3C TPAC 2022</a>, gained support in&#160;<a href=\"https://developer.apple.com/documentation/safari-release-notes/safari-16_1-release-notes/\" rel=\"noopener\">Safari 16</a>, are finding their way into&#160;<a href=\"https://developer.apple.com/passkeys/\" rel=\"noopener\">macOS and iOS</a>, and are slated to &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/passkeys-what-the-heck-and-why/\" rel=\"nofollow\">Passkeys: What the Heck and Why?</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "summary": "<p>These things called&#160;<strong>passkeys</strong>&#160;sure are making the rounds these days. They were a main attraction at&#160;<a href=\"https://www.w3.org/2022/09/TPAC/demos/passkeys.html\" rel=\"noopener\">W3C TPAC 2022</a>, gained support in&#160;<a href=\"https://developer.apple.com/documentation/safari-release-notes/safari-16_1-release-notes/\" rel=\"noopener\">Safari 16</a>, are finding their way into&#160;<a href=\"https://developer.apple.com/passkeys/\" rel=\"noopener\">macOS and iOS</a>, and are slated to &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/passkeys-what-the-heck-and-why/\" rel=\"nofollow\">Passkeys: What the Heck and Why?</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "content": "<p>These things called&nbsp;<strong>passkeys</strong>&nbsp;sure are making the rounds these days. They were a main attraction at&nbsp;<a href=\"https://www.w3.org/2022/09/TPAC/demos/passkeys.html\" rel=\"noopener\">W3C TPAC 2022</a>, gained support in&nbsp;<a href=\"https://developer.apple.com/documentation/safari-release-notes/safari-16_1-release-notes/\" rel=\"noopener\">Safari 16</a>, are finding their way into&nbsp;<a href=\"https://developer.apple.com/passkeys/\" rel=\"noopener\">macOS and iOS</a>, and are slated to be&nbsp;<a href=\"https://www.future.1password.com/passkeys/\" rel=\"noopener\">the future for password managers like 1Password</a>. They are&nbsp;<a href=\"https://passkeys.dev/device-support/\" rel=\"noopener\">already supported</a>&nbsp;in Android, and will soon find their way into Chrome OS and Windows in future releases.</p>\n\n\n\n<p>Geeky OS security enhancements don’t exactly make big headlines in the front-end community, but it stands to reason that passkeys are going to be a “thing”. And considering how passwords and password apps affect the user experience of things like authentication and form processing, we might want to at least wrap our minds around them, so we know what’s coming.</p>\n\n\n\n<p>That’s the point of this article. I’ve been studying and experimenting with passkeys — and the WebAuthn API they are built on top of — for some time now. Let me share what I’ve learned.</p>\n\n\n\n<span id=\"more-377305\"></span>\n\n\n<h3 class=\"simpletoc-hidden wp-block-heading\" id=\"table-of-contents\">Table of contents</h3>\n\n<ul class=\"simpletoc-list\">\n</li><li>\n<a href=\"#terminology\">Terminology</a></li><li>\n<a href=\"#what-are-passkeys\">What are passkeys?</a></li><li>\n<a href=\"#how-do-passkeys-replace-passwords\">How do passkeys replace passwords?</a></li><li>\n<a href=\"#more-about-cryptography\">More about cryptography</a></li><li>\n<a href=\"#how-do-we-access-passkeys\">How do we access passkeys?</a></li><li>\n<a href=\"#the-difference-between-passkeys-and-webauthn\">The difference between passkeys and WebAuthn</a></li><li>\n<a href=\"#the-process-in-a-nutshell\">The process… in a nutshell</a></li><li>\n<a href=\"#the-meat-and-potatoes\">The meat and potatoes</a></li><li>\n<a href=\"#some-downsides\">Some downsides</a></li><li>\n<a href=\"#where-are-things-going\">Where are things going?</a></li><li>\n<a href=\"#resources\">Resources</a></li></ul>\n\n<h3 class=\"wp-block-heading\" id=\"terminology\">Terminology</h3>\n\n\n<p>Here’s the obligatory section of the terminology you’re going to want to know as we dig in. Like most tech, passkeys are wrought with esoteric verbiage and acronyms that are often roadblocks to understanding. I’ll try to de-mystify several for you here.</p>\n\n\n\n<ul>\n<li><strong>Relying Party:</strong>&nbsp;the server you will be authenticating against. We&#8217;ll use “server” to imply the Relying Party in this article.</li>\n\n\n\n<li><strong>Client:</strong>&nbsp;in our case, the web browser or operating system.</li>\n\n\n\n<li><strong>Authenticator:</strong>&nbsp;Software and/or hardware devices that allow generation and storage for public key pairs.</li>\n\n\n\n<li><strong>FIDO</strong>: An open standards body that also creates specifications around FIDO credentials.</li>\n\n\n\n<li><strong>WebAuthn</strong>: The underlying protocol for passkeys, Also known as a&nbsp;<a href=\"https://fidoalliance.org/fido2/\" rel=\"noopener\">FIDO2</a>&nbsp;credential or single-device FIDO credentials.</li>\n\n\n\n<li><strong>Passkeys</strong>: WebAuthn, but with cloud syncing (also called multi-device FIDO credentials, discoverable credentials, or resident credentials).</li>\n\n\n\n<li><strong>Public Key Cryptography:</strong>&nbsp;A generated key pair that includes a private and public key. Depending on the algorithm, it should either be used for signing and verification or encrypting and decrypting. This is also known as&nbsp;<em>asymmetric cryptography</em>.</li>\n\n\n\n<li><strong>RSA:</strong>&nbsp;An acronym of the creators’ names, Rivest Shamir and Adel. RSA is an older, but still useful, family of public key cryptography based on factoring primes.</li>\n\n\n\n<li><strong>Elliptic Curve Cryptography (ECC):</strong>&nbsp;A newer family of cryptography&nbsp;<a href=\"https://csrc.nist.gov/Projects/Elliptic-Curve-Cryptography\" rel=\"noopener\">based on elliptic curves</a>.</li>\n\n\n\n<li><strong>ES256:</strong>&nbsp;An elliptic curve public key that uses an ECDSA signing algorithm (<a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf\" rel=\"noopener\">PDF</a>) with&nbsp;<a href=\"https://en.wikipedia.org/wiki/SHA-2\" rel=\"noopener\">SHA256</a>&nbsp;for hashing.</li>\n\n\n\n<li><strong>RS256:</strong>&nbsp;Like ES256, but it uses RSA with&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/sign#rsassa-pkcs1-v1_5_2\" rel=\"noopener\">RSASSA-PKCS1-v1.5</a>&nbsp;and SHA256.</li>\n</ul>\n\n\n<h3 class=\"wp-block-heading\" id=\"what-are-passkeys\">What are passkeys?</h3>\n\n\n<p>Before we can talk specifically about passkeys, we need to talk about another protocol called&nbsp;<a href=\"https://webauthn.guide/\" rel=\"noopener\">WebAuthn</a>&nbsp;(also known as FIDO2). Passkeys are a specification that is built on top of WebAuthn. WebAuthn allows for public key cryptography to replace passwords. We use some sort of security device, such as a hardware key or&nbsp;<a href=\"https://learn.microsoft.com/en-us/windows/security/information-protection/tpm/trusted-platform-module-top-node\" rel=\"noopener\">Trusted Platform Module</a>&nbsp;(TPM), to create private and public keys.</p>\n\n\n\n<p>The public key is for anyone to use. The private key, however, cannot be removed from the device that generated it. This was one of the issues with WebAuthn; if you lose the device, you lose access.</p>\n\n\n\n<p>Passkeys solves this by providing a cloud sync of your credentials. In other words, what you generate on your computer can now also be used on your phone (though confusingly, there are single-device credentials too).</p>\n\n\n\n<p>Currently, at the time of writing, only iOS, macOS, and Android provide full support for cloud-synced passkeys, and even then, they are limited by the browser being used. Google and Apple provide an interface for syncing via their&nbsp;<a href=\"https://passwords.google.com/\" rel=\"noopener\">Google Password Manager</a> and&nbsp;<a href=\"https://support.apple.com/en-us/HT204085\" rel=\"noopener\">Apple iCloud Keychain</a>&nbsp;services, respectively.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"how-do-passkeys-replace-passwords\">How do passkeys replace passwords?</h3>\n\n\n<p>In public key cryptography, you can perform what is known as <em>signing</em>. Signing takes a piece of data and then runs it through a signing algorithm with the private key, where it can then be verified with the public key.</p>\n\n\n\n<p>Anyone can generate a public key pair, and it&#8217;s not attributable to any person since any person could have generated it in the first place. What makes it useful is that only data signed with the private key can be verified with the public key. That&#8217;s the portion that replaces a password — a server stores the public key, and we sign in by verifying that we have the other half (e.g. private key), by signing a random challenge.</p>\n\n\n\n<p>As an added benefit, since we&#8217;re storing the user&#8217;s public keys within a database, there is no longer concern with password breaches affecting millions of users. This reduces phishing, breaches, and a slew of other security issues that our password-dependent world currently faces. If a database is breached, all that&#8217;s stored in the user&#8217;s public keys, making it virtually useless to an attacker.</p>\n\n\n\n<p>No more forgotten emails and their associated passwords, either! The browser will remember which credentials you used for which website — all you need to do is make a couple of clicks, and you&#8217;re logged in. You can provide a secondary means of verification to use the passkey, such as biometrics or a pin, but those are still much faster than the passwords of yesteryear.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"more-about-cryptography\">More about cryptography</h3>\n\n\n<p>Public key cryptography involves having a private and a public key (known as a key pair). The keys are generated together and have separate uses. For example, the private key is intended to be kept secret, and the public key is intended for whomever you want to exchange messages with.</p>\n\n\n\n<p>When it comes to encrypting and decrypting a message, the recipient’s public key is used to encrypt a message so that only the recipient&#8217;s private key can decrypt the message. In security parlance, this is known as “providing confidentiality”. However, this doesn&#8217;t provide proof that the sender is who they say they are, as anyone can potentially use a public key to send someone an encrypted message.</p>\n\n\n\n<p>There are cases where we need to verify that a message did indeed come from its sender. In these cases, we use signing and signature verification to ensure that the sender is who they say they are (also known as&nbsp;<em>authenticity</em>). In public key (also called&nbsp;<em>asymmetric</em>) cryptography, this is generally done by signing the hash of a message, so that only the public key can correctly verify it. The hash and the sender&#8217;s private key produce a signature after running it through an algorithm, and then anyone can verify the message came from the sender with the sender&#8217;s public key.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"how-do-we-access-passkeys\">How do we access passkeys?</h3>\n\n\n<p>To access passkeys, we first need to generate and store them somewhere. Some of this functionality can be provided with an authenticator. An&nbsp;<em>authenticator</em>&nbsp;is any hardware or software-backed device that provides the ability for cryptographic key generation. Think of those one-time passwords you get from&nbsp;<a href=\"https://support.google.com/accounts/answer/1066447?hl=en&amp;co=GENIE.Platform%3DAndroid\" rel=\"noopener\">Google Authenticator</a>,&nbsp;<a href=\"https://1password.com/\" rel=\"noopener\">1Password</a>, or&nbsp;<a href=\"https://www.lastpass.com/\" rel=\"noopener\">LastPass</a>, among others.</p>\n\n\n\n<p>For example, a software authenticator can use the Trusted Platform Module (TPM) or secure enclave of a device to create credentials. The credentials can be then stored remotely and synced across devices e.g. passkeys. A hardware authenticator would be something like a&nbsp;<a href=\"https://www.yubico.com/\" rel=\"noopener\">YubiKey</a>, which can generate and store keys on the device itself.</p>\n\n\n\n<p>To access the authenticator, the browser needs to have access to hardware, and for that, we need an interface. The interface we use here is the Client to Authenticator Protocol (CTAP). It allows access to different authenticators over different mechanisms. For example, we can access an authenticator over NFC, USB, and Bluetooth by utilizing CTAP.</p>\n\n\n\n<p>One of the more interesting ways to use passkeys is by connecting your phone over Bluetooth to another device that might not support passkeys. When the devices are paired over Bluetooth, I can log into the browser on my computer using my phone as an intermediary!</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"the-difference-between-passkeys-and-webauthn\">The difference between passkeys and WebAuthn</h3>\n\n\n<p>Passkeys and WebAuthn keys differ in several ways. First, passkeys are considered multi-device credentials and can be synced across devices. By contrast, WebAuthn keys are single-device credentials — a fancy way of saying you’re bound to one device for verification.</p>\n\n\n\n<p>Second, to authenticate to a server, WebAuthn keys need to provide the user handle for login, after which an&nbsp;<code>allowCredentials</code>&nbsp;list is returned to the client from the server, which informs what credentials can be used to log in.&nbsp;<strong>Passkeys skip this step and use the server&#8217;s domain name to show which keys are already bound to that site.</strong>&nbsp;You’re able to select the passkey that is associated with that server, as it&#8217;s already known by your system.</p>\n\n\n\n<p>Otherwise, the keys are cryptographically the same; they only differ in how they&#8217;re stored and what information they use to start the login process.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"the-process-in-a-nutshell\">The process… in a nutshell</h3>\n\n\n<p>The process for generating a WebAuthn or a passkey is very similar: get a challenge from the server and then use the&nbsp;<code>navigator.credentials.create</code>&nbsp;web API to generate a public key pair. Then, send the challenge and the public key back to the server to be stored.</p>\n\n\n\n<p>Upon receiving the public key and challenge, the server validates the challenge and the session from which it was created. If that checks out, the public key is stored, as well as any other relevant information like the user identifier or attestation data, in the database.</p>\n\n\n\n<p>The user has one more step — retrieve another challenge from the server and use the&nbsp;<code>navigator.credentials.get</code>&nbsp;API to sign the challenge. We send back the signed challenge to the server, and the server verifies the challenge, then logs us in if the signature passes.</p>\n\n\n\n<p>There is, of course, quite a bit more to each step. But that is generally how we&#8217;d log into a website using WebAuthn or passkeys.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"the-meat-and-potatoes\">The meat and potatoes</h3>\n\n\n<p>Passkeys are used in two distinct phases: the&nbsp;<strong>attestation</strong>&nbsp;and&nbsp;<strong>assertion</strong>&nbsp;phases.</p>\n\n\n\n<p>The attestation phase can also be thought of as the registration phase. You&#8217;d sign up with an email and password for a new website, however, in this case, we&#8217;d be using our passkey.</p>\n\n\n\n<p>The assertion phase is similar to how you&#8217;d log in to a website after signing up.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"attestation\">Attestation</h4>\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/attestation.png?ssl=1\"><img alt=\"\" class=\"wp-image-377328\" height=\"569\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/attestation.png?resize=736%2C569&#038;ssl=1\" width=\"736\" /></a><figcaption class=\"wp-element-caption\"><a href=\"https://css-tricks.com/wp-content/uploads/2023/02/attestation.png\">View full size</a></figcaption></figure>\n\n\n\n<p>The&nbsp;<code>navigator.credentials.create</code>&nbsp;API is the focus of our attestation phase. We&#8217;re registered as a new user in the system and need to generate a new public key pair. However, we need to specify what kind of key pair we want to generate. That means we need to provide options to&nbsp;<code>navigator.credentials.create</code>.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\"><code>// The `challenge` is random and has to come from the server\nconst publicKey: PublicKeyCredentialCreationOptions = {\n  challenge: safeEncode(challenge),\n  rp: {\n    id: window.location.host,\n    name: document.title,\n  },\n  user: {\n    id: new TextEncoder().encode(crypto.randomUUID()), // Why not make it random?\n    name: 'Your username',\n    displayName: 'Display name in browser',\n  },\n  pubKeyCredParams: [\n    {\n      type: 'public-key',\n      alg: -7, // ES256\n    },\n    {\n      type: 'public-key',\n      alg: -256, // RS256\n    },\n  ],\n  authenticatorSelection: {\n    userVerification: 'preferred', // Do you want to use biometrics or a pin?\n    residentKey: 'required', // Create a resident key e.g. passkey\n  },\n  attestation: 'indirect', // indirect, direct, or none\n  timeout: 60_000,\n};</code></pre>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\"><code>const pubKeyCredential: PublicKeyCredential = await navigator.credentials.create({\n  publicKey\n});\nconst {\n  id // the key id a.k.a. kid\n} = pubKeyCredential;\nconst pubKey = pubKeyCredential.response.getPublicKey();\nconst { clientDataJSON, attestationObject } = pubKeyCredential.response;\nconst { type, challenge, origin } = JSON.parse(new TextDecoder().decode(clientDataJSON));\n// Send data off to the server for registration</code></pre>\n\n\n\n<p>We&#8217;ll get&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential\" rel=\"noopener\"><code>PublicKeyCredential</code></a>&nbsp;which contains an&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\" rel=\"noopener\"><code>AuthenticatorAttestationResponse</code></a>&nbsp;that comes back after creation. The credential has the generated key pair’s ID.</p>\n\n\n\n<p>The response provides a couple of bits of useful information. First, we have our public key in this response, and we need to send that to the server to be stored. Second, we also get back the&nbsp;<code>clientDataJSON</code>&nbsp;property which we can decode, and from there, get back the&nbsp;<code>type</code>,&nbsp;<code>challenge</code>, and&nbsp;<code>origin</code>&nbsp;of the passkey.</p>\n\n\n\n<p>For attestation, we want to validate the&nbsp;<code>type</code>,&nbsp;<code>challenge</code>, and&nbsp;<code>origin</code>&nbsp;on the server, as well as store the public key with its identifier, e.g. kid. We can also optionally store the&nbsp;<code>attestationObject</code>&nbsp;if we wish. Another useful property to store is the&nbsp;<a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\" rel=\"noopener\">COSE</a>&nbsp;algorithm, which is defined above in our &nbsp;<code>PublicKeyCredentialCreationOptions</code>&nbsp;with&nbsp;<code>alg: -7</code>&nbsp;or&nbsp;<code>alg: -256</code>, in order to easily verify any signed challenges in the assertion phase.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"assertion\">Assertion</h4>\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/assertion.png?ssl=1\"><img alt=\"\" class=\"wp-image-377330\" height=\"516\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/assertion.png?resize=717%2C516&#038;ssl=1\" width=\"717\" /></a><figcaption class=\"wp-element-caption\"><a href=\"https://css-tricks.com/wp-content/uploads/2023/02/assertion.png\">View full size</a></figcaption></figure>\n\n\n\n<p>The&nbsp;<code>navigator.credentials.get</code>&nbsp;API will be the focus of the assertion phase. Conceptually, this would be where the user logs in to the web application after signing up.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\"><code>// The `challenge` is random and has to come from the server\nconst publicKey: PublicKeyCredentialRequestOptions = {\n  challenge: new TextEncoder().encode(challenge),\n  rpId: window.location.host,\n  timeout: 60_000,\n};</code></pre>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\"><code>const publicKeyCredential: PublicKeyCredential = await navigator.credentials.get({\n  publicKey,\n  mediation: 'optional',\n});\nconst {\n  id // the key id, aka kid\n} = pubKeyCredential;\nconst { clientDataJSON, attestationObject, signature, userHandle } = pubKeyCredential.response;\nconst { type, challenge, origin } = JSON.parse(new TextDecoder().decode(clientDataJSON));\n// Send data off to the server for verification</code></pre>\n\n\n\n<p>We&#8217;ll again get a&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential\" rel=\"noopener\"><code>PublicKeyCredential</code></a>&nbsp;with an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\" rel=\"noopener\"><code>AuthenticatorAssertionResponse</code></a>&nbsp;this time. The credential again includes the key identifier.</p>\n\n\n\n<p>We also get the&nbsp;<code>type</code>,&nbsp;<code>challenge</code>, and&nbsp;<code>origin</code>&nbsp;from the&nbsp;<code>clientDataJSON</code>&nbsp;again. The&nbsp;<code>signature</code>&nbsp;is now included in the response, as well as the <code>authenticatorData</code>. We&#8217;ll need those and the&nbsp;<code>clientDataJSON</code>&nbsp;to verify that this was signed with the private key.</p>\n\n\n\n<p>The&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData\" rel=\"noopener\"><code>authenticatorData</code></a>&nbsp;includes some properties that are worth tracking First is the SHA256 hash of the origin you&#8217;re using, located within the first 32 bytes, which is useful for verifying that request comes from the same origin server. Second is the&nbsp;<code>signCount</code>, which is from byte 33 to 37. This is generated from the authenticator and should be compared to its previous value to ensure that nothing fishy is going on with the key. The value should always 0 when it’s a multi-device passkey and should be randomly larger than the previous signCount when it’s a single-device passkey.</p>\n\n\n\n<p>Once you&#8217;ve asserted your login, you should be logged in —&nbsp;<em>congratulations</em>! Passkeys is a pretty great protocol, but it does come with some caveats.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"some-downsides\">Some downsides</h3>\n\n\n<p>There&#8217;s a lot of upside to Passkeys, however, there are some issues with it at the time of this writing. For one thing, passkeys is somewhat still early support-wise, with only single-device credentials allowed on Windows and very little support for Linux systems.&nbsp;<a href=\"http://passkeys.dev/\" rel=\"noopener\">Passkeys.dev</a>&nbsp;provides a&nbsp;<a href=\"https://passkeys.dev/device-support/\" rel=\"noopener\">nice table that’s sort of like the Caniuse of this protocol</a>.</p>\n\n\n\n<p>Also, Google&#8217;s and Apple&#8217;s passkeys platforms do not communicate with each other. If you want to get your credentials from your Android phone over to your iPhone&#8230; well, you&#8217;re out of luck for now. That&#8217;s not to say there is no interoperability! You can log in to your computer by using your phone as an authenticator. But it would be much cleaner just to have it built into the operating system and synced without it being locked at the vendor level.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"where-are-things-going\">Where are things going?</h3>\n\n\n<p>What does the passkeys protocol of the future look like? It looks pretty good! Once it gains support from more operating systems, there should be an uptake in usage, and you&#8217;ll start seeing it used more and more in the wild. Some&nbsp;<a href=\"https://www.future.1password.com/passkeys\" rel=\"noopener\">password managers</a>&nbsp;are even going to support them first-hand.</p>\n\n\n\n<p>Passkeys are by no means only supported on the web.&nbsp;<a href=\"https://developer.android.com/training/sign-in/passkeys\" rel=\"noopener\">Android</a>&nbsp;and&nbsp;<a href=\"https://developer.apple.com/documentation/authenticationservices/public-private_key_authentication/supporting_passkeys\" rel=\"noopener\">iOS</a>&nbsp;will both support native passkeys as first-class citizens. We&#8217;re still in the early days of all this, but expect to see it mentioned more and more.</p>\n\n\n\n<p>After all, we eliminate the need for passwords, and by doing so, make the world safer for it!</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"resources\">Resources</h3>\n\n\n<p>Here are some more resources if you want to learn more about Passkeys. There’s also a repository and demo I put together for this article.</p>\n\n\n\n<ul>\n<li><a href=\"https://passkeys.neal.codes/\" rel=\"noopener\">Live Demo</a> (no actual information is collected by the form)</li>\n\n\n\n<li><a href=\"https://github.com/nealfennimore/passkeys\" rel=\"noopener\">Demo GitHub Repository</a></li>\n\n\n\n<li><a href=\"https://developers.yubico.com/Passkeys/\" rel=\"noopener\">YubiKey Documentation</a></li>\n\n\n\n<li><a href=\"https://passkeys.dev/\" rel=\"noopener\">Passkeys.dev</a></li>\n\n\n\n<li><a href=\"https://www.passkeys.io/\" rel=\"noopener\">Passkeys.io</a></li>\n\n\n\n<li><a href=\"https://webauthn.io/\" rel=\"noopener\">Webauthn.io</a></li>\n</ul>\n<hr />\n<p><small><a href=\"https://css-tricks.com/passkeys-what-the-heck-and-why/\" rel=\"nofollow\">Passkeys: What the Heck and Why?</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "pub_date": "2023-04-12T17:41:53Z",
    "upd_date": "2023-04-12T17:41:53Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:59.678Z",
    "updated": "2023-10-09T09:34:59.678Z",
    "tags": [
      105,
      106,
      82,
      107
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 116,
  "fields": {
    "feed": 8,
    "title": "Some Cross-Browser DevTools Features You Might Not Know",
    "author": "Pankaj Parashar",
    "url": "https://css-tricks.com/some-cross-browser-devtools-features-you-might-not-know/",
    "image_url": "https://css-tricks.com/wp-json/social-image-generator/v1/image/377264",
    "description": "<p>I spend a lot of time in DevTools, and I’m sure you do too. Sometimes I even bounce between them, especially when I’m debugging cross-browser issues. DevTools is a lot like browsers themselves — not all of the features in &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/some-cross-browser-devtools-features-you-might-not-know/\" rel=\"nofollow\">Some Cross-Browser DevTools Features You Might Not Know</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "summary": "<p>I spend a lot of time in DevTools, and I’m sure you do too. Sometimes I even bounce between them, especially when I’m debugging cross-browser issues. DevTools is a lot like browsers themselves — not all of the features in &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/some-cross-browser-devtools-features-you-might-not-know/\" rel=\"nofollow\">Some Cross-Browser DevTools Features You Might Not Know</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "content": "<p>I spend a lot of time in DevTools, and I’m sure you do too. Sometimes I even bounce between them, especially when I’m debugging cross-browser issues. DevTools is a lot like browsers themselves — not all of the features in one browser’s DevTools will be the same or supported in another browser’s DevTools.</p>\n\n\n\n<p>But there are quite a few DevTools features that are interoperable, even some lesser-known ones that I’m about to share with you.</p>\n\n\n\n<p>For the sake of brevity, I use “Chromium” to refer to all Chromium-based browsers, like Chrome, Edge, and Opera, in the article. Many of the DevTools in them offer the exact same features and capabilities as one another, so this is just my shorthand for referring to all of them at once.</p>\n\n\n\n<span id=\"more-377264\"></span>\n\n\n<h3 class=\"wp-block-heading\" id=\"search-nodes-in-the-dom-tree\">Search nodes in the DOM tree</h3>\n\n\n<p>Sometimes the DOM tree is full of nodes nested in nodes that are nested in other nodes, and so on. That makes it pretty tough to find the exact one you’re looking for, but you can quickly search the DOM tree using <code>Cmd</code> + <code>F</code> (macOS) or <code>Ctrl</code> + <code>F</code> (Windows).</p>\n\n\n\n<p>Additionally, you can also search using a valid CSS selector, like <code>.red</code>, or using an XPath, like <code>//div/h1</code>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"DevTools screenshots of all three browsers.\" class=\"wp-image-377265\" height=\"1048\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674209097213_image-1.png?resize=2378%2C1048&#038;ssl=1\" width=\"2378\" /><figcaption class=\"wp-element-caption\">Searching text in Chrome DevTools (left), selectors in Firefox DevTools (center), and XPath in Safari DevTools (right)</figcaption></figure>\n\n\n\n<p>In Chromium browsers, the focus automatically jumps to the node that matches the search criteria as you type, which could be annoying if you are working with longer search queries or a large DOM tree. Fortunately, you can disable this behavior by heading to <strong>Settings</strong> (<code>F1</code>) → <strong>Preferences</strong> → <strong>Global</strong> → <strong>Search as you type</strong> → <strong>Disable</strong>.</p>\n\n\n\n<p>After you have located the node in the DOM tree, you can scroll the page to bring the node within the viewport by right-clicking on the nod, and selecting “Scroll into view”.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Showing a highlighted node on a webpage with a contextual menu open to scroll into view\" class=\"wp-image-377270\" height=\"1118\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1675742347357_image.png?resize=1786%2C1118&#038;ssl=1\" width=\"1786\" /></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"access-nodes-from-the-console\">Access nodes from the console</h3>\n\n\n<p>DevTools provides many different ways to access a DOM node directly from the console.</p>\n\n\n\n<p>For example, you can use <code>$0</code> to access the currently selected node in the DOM tree. Chromium browsers take this one step further by allowing you to access nodes selected in the reverse chronological order of historic selection using, <code>$1</code>, <code>$2</code>, <code>$3</code>, etc.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Currently selected node accessed from the Console in Edge DevTools\" class=\"wp-image-377271\" height=\"1028\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674396487537_image-3.png?resize=1682%2C1028&#038;ssl=1\" width=\"1682\" /></figure>\n\n\n\n<p>Another thing that Chromium browsers allow you to do is copy the node path as a JavaScript expression in the form of <code>document.querySelector</code> by right-clicking on the node, and selecting <strong>Copy</strong> → <strong>Copy JS path</strong>, which can then be used to access the node in the console.</p>\n\n\n\n<figure class=\"wp-block-video wp-block-embed is-type-video is-provider-videopress\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n\n<p>Here’s another way to access a DOM node directly from the console: as a temporary variable. This option is available by right-clicking on the node and selecting an option. That option is labeled differently in each browser&#8217;s DevTools:</p>\n\n\n\n<ul>\n<li><strong>Chromium</strong>: Right click → “Store as global variable”</li>\n\n\n\n<li><strong>Firefox</strong>: Right click → “Use in Console”</li>\n\n\n\n<li><strong>Safari</strong>: Right click → “Log Element”</li>\n</ul>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Screenshot of DevTools contextual menus in all three browsers.\" class=\"wp-image-377274\" height=\"1440\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674633378298_Myproject-1.png?resize=2560%2C1440&#038;ssl=1\" width=\"2560\" /><figcaption class=\"wp-element-caption\">Access a node as a temporary variable in the console, as shown in Chrome (left), Firefox (center), and Safari (right)</figcaption></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"visualize-elements-with-badges\">Visualize elements with badges</h3>\n\n\n<p>DevTools can help visualize elements that match certain properties by displaying a badge next to the node. Badges are clickable, and different browsers offer a variety of different badges.</p>\n\n\n\n<p>In <strong>Safari</strong>, there is a badge button in the Elements panel toolbar which can be used to toggle the visibility of specific badges. For example, if a node has a <code>display: grid</code> or <code>display: inline-grid</code> CSS declaration applied to it, a <code>grid</code> badge is displayed next to it. Clicking on the badge will highlight grid areas, track sizes, line numbers, and more, on the page.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"A grid overlay visualized on top of a three-by-three grid.\" class=\"wp-image-377277\" height=\"1082\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674708049378_Screenshot2023-01-26at10.05.40.png?resize=1738%2C1082&#038;ssl=1\" width=\"1738\" /><figcaption class=\"wp-element-caption\">Grid overlay with badges in Safari DevTools</figcaption></figure>\n\n\n\n<p>The badges that are currently supported in <strong>Firefox</strong>’s DevTools are listed in the Firefox <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/page_inspector/how_to/examine_and_edit_html/index.html#html-tree\" rel=\"noopener\">source docs</a>. For example, a <code>scroll</code> badge indicates a scrollable element. Clicking on the badge highlights the element causing the overflow with an <code>overflow</code> badge next to it.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Overflow badge in Firefox DevTools located in the HTML panel\" class=\"wp-image-377279\" height=\"379\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/overflow_badge.png?resize=852%2C379&#038;ssl=1\" width=\"852\" /></figure>\n\n\n\n<p>In <strong>Chromium</strong> browsers, you can right-click on any node and select <strong>“Badge settings…”</strong> to open a container that lists all of the available badges. For example, elements with <code>scroll-snap-type</code> will have a <code>scroll-snap</code> badge next to it, which on click, will toggle the <code>scroll-snap</code> overlay on that element.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"\" class=\"wp-image-377296\" height=\"1082\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/tbuxzdUk.png?resize=1738%2C1082&#038;ssl=1\" width=\"1738\" /></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"taking-screenshots\">Taking screenshots</h3>\n\n\n<p>We’ve been able to take screenshots from some DevTools for a while now, but it’s now available in all of them and includes new ways to take full-page shots.</p>\n\n\n\n<p>The process starts by right-clicking on the DOM node you want to capture. Then select the option to capture the node, which is labeled differently depending on which DevTools you’re using.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Screenshot of DevTools in all three browsers.\" class=\"wp-image-377282\" height=\"1700\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674721274966_Myproject-1.png?resize=2560%2C1700&#038;ssl=1\" width=\"2560\" /><figcaption class=\"wp-element-caption\">Chrome (left), Safari (middle), and Firefox (right)</figcaption></figure>\n\n\n\n<p>Repeat the same steps on the <code>html</code> node to take a full-page screenshot. When you do, though, it’s worth noting that Safari retains the transparency of the element’s background color — Chromium and Firefox will capture it as a white background.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Two screenshots of the same element, one with a background and one without.\" class=\"wp-image-377283\" height=\"1082\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674721838803_Screenshot2023-01-26at14.00.01.png?resize=1506%2C1082&#038;ssl=1\" width=\"1506\" /><figcaption class=\"wp-element-caption\">Comparing screenshots in Safari (left) and Chromium (right)</figcaption></figure>\n\n\n\n<p>There’s another option! You can take a “responsive” screenshot of the page, which allows you to capture the page at a specific viewport width. As you might expect, each browser has different ways to get there.</p>\n\n\n\n<ul>\n<li><strong>Chromium</strong>: <code>Cmd</code> + <code>Shift</code> + <code>M</code> (macOS) or <code>Ctrl</code> + <code>Shift</code> + <code>M</code> (Windows). Or click the “Devices” icon next to the “Inspect” icon.</li>\n\n\n\n<li><strong>Firefox</strong>: Tools → Browser Tools → “Responsive Design Mode”</li>\n\n\n\n<li><strong>Safari</strong>: Develop → “Enter Responsive Design Mode”</li>\n</ul>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Enter responsive mode options in DevTools for all three browsers.\" class=\"wp-image-377285\" height=\"1700\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/02/s_7E25E76B5C1A2A0120D43B477F8F8B0FA75578B215D36F3A918DC29D997AA0F4_1674755907874_screenshot.png?resize=2550%2C1700&#038;ssl=1\" width=\"2550\" /><figcaption class=\"wp-element-caption\">Launching responsive design mode in Safari (left), Firefox (right), and Chromium (bottom)</figcaption></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"chrome-tip-inspect-the-top-layer\">Chrome tip: Inspect the top layer</h3>\n\n\n<p>Chrome lets you visualize and inspect top-layer elements, like a dialog, alert, or modal. When an element is added to the <code>#top-layer</code>, it gets a <code>top-layer</code> badge next to it, which on click, jumps you to the top-layer container located just after the <code>&lt;/html&gt;</code> tag.</p>\n\n\n\n<p>The order of the elements in the <code>top-layer</code> container follows the stacking order, which means the last one is on the top. Click the <code>reveal</code> badge to jump back to the node.</p>\n\n\n\n<figure class=\"wp-block-video wp-block-embed is-type-video is-provider-videopress\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"firefox-tip-jump-to-id\">Firefox tip: Jump to ID</h3>\n\n\n<p>Firefox links the element referencing the ID attribute to its target element in the same DOM and highlights it with an underline. Use <code>CMD</code> + <code>Click</code> (macOS) or <code>CTRL</code> + <code>Click</code> (Windows) )to jump to the target element with the identifier.</p>\n\n\n\n<figure class=\"wp-block-video wp-block-embed is-type-video is-provider-videopress\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n<h3 class=\"wp-block-heading\" id=\"wrapping-up\">Wrapping up</h3>\n\n\n<p>Quite a few things, right? It’s awesome that there are some incredibly useful DevTools features that are supported in Chromium, Firefox, and Safari alike. Are there any other lesser-known features supported by all three that you like?</p>\n\n\n\n<p>There are a few resources I keep close by to stay on top of what’s new. I thought I’d share them with here:</p>\n\n\n\n<ul>\n<li><a href=\"https://devtoolstips.org/\" rel=\"noopener\">DevTools Tips</a> (Patrick Brosset): A curated collection of helpful cross-browser DevTools tips and tricks.</li>\n\n\n\n<li><a href=\"https://umaar.com/dev-tips/\" rel=\"noopener\">Dev Tips</a> (Umar Hansa): DevTools tips sent to your inbox!</li>\n\n\n\n<li><a href=\"https://www.canidev.tools/\" rel=\"noopener\">Can I DevTools?</a>: The <a href=\"https://caniuse.com\" rel=\"noopener\">Can</a><a href=\"https://caniuse.com\" rel=\"noopener\">iuse</a> for DevTools.</li>\n</ul>\n<hr />\n<p><small><a href=\"https://css-tricks.com/some-cross-browser-devtools-features-you-might-not-know/\" rel=\"nofollow\">Some Cross-Browser DevTools Features You Might Not Know</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "pub_date": "2023-03-22T20:22:42Z",
    "upd_date": "2023-03-22T20:22:42Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:59.780Z",
    "updated": "2023-10-09T09:34:59.780Z",
    "tags": [
      105,
      108,
      109
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 117,
  "fields": {
    "feed": 8,
    "title": "Making Calendars With Accessibility and Internationalization in Mind",
    "author": "Mads Stoumann",
    "url": "https://css-tricks.com/making-calendars-with-accessibility-and-internationalization-in-mind/",
    "image_url": "https://css-tricks.com/wp-json/social-image-generator/v1/image/376950",
    "description": "<p>Doing a quick search here on CSS-Tricks shows just how many different ways there are to approach calendars. Some show how <a href=\"https://css-tricks.com/a-calendar-in-three-lines-of-css/\">CSS Grid can create the layout efficiently</a>. Some attempt to <a href=\"https://css-tricks.com/how-to-make-a-monthly-calendar-with-real-data/\">bring actual data into the mix</a>. Some &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/making-calendars-with-accessibility-and-internationalization-in-mind/\" rel=\"nofollow\">Making Calendars With Accessibility and Internationalization in Mind</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "summary": "<p>Doing a quick search here on CSS-Tricks shows just how many different ways there are to approach calendars. Some show how <a href=\"https://css-tricks.com/a-calendar-in-three-lines-of-css/\">CSS Grid can create the layout efficiently</a>. Some attempt to <a href=\"https://css-tricks.com/how-to-make-a-monthly-calendar-with-real-data/\">bring actual data into the mix</a>. Some &#8230;</p>\n<hr />\n<p><small><a href=\"https://css-tricks.com/making-calendars-with-accessibility-and-internationalization-in-mind/\" rel=\"nofollow\">Making Calendars With Accessibility and Internationalization in Mind</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "content": "<p>Doing a quick search here on CSS-Tricks shows just how many different ways there are to approach calendars. Some show how <a href=\"https://css-tricks.com/a-calendar-in-three-lines-of-css/\">CSS Grid can create the layout efficiently</a>. Some attempt to <a href=\"https://css-tricks.com/how-to-make-a-monthly-calendar-with-real-data/\">bring actual data into the mix</a>. Some <a href=\"https://css-tricks.com/lets-make-a-vue-powered-monthly-calendar/\">rely on a framework</a> to help with state management.</p>\n\n\n\n<p>There are many considerations when building a calendar component — far more than what is covered in the articles I linked up. If you think about it, calendars are fraught with nuance, from handling timezones and date formats to localization and even making sure dates flow from one month to the next… and that’s before we even get into accessibility and additional layout considerations depending on where the calendar is displayed and whatnot.</p>\n\n\n\n<p>Many developers fear the <a href=\"https://css-tricks.com/everything-you-need-to-know-about-date-in-javascript/\"><code>Date()</code> object</a> and stick with older libraries like <a href=\"https://momentjs.com\" rel=\"noopener\"><code>moment.js</code></a>. But while there are many “gotchas” when it comes to dates and formatting, JavaScript has a lot of cool APIs and stuff to help out!</p>\n\n\n\n<span id=\"more-376950\"></span>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"January 2023 calendar grid.\" class=\"wp-image-376951\" height=\"251\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672583219797_image.png?resize=464%2C251&#038;ssl=1\" width=\"464\" /></figure>\n\n\n\n<p>I don’t want to re-create the wheel here, but I will show you how we can get a dang good calendar with vanilla JavaScript. We’ll look into <strong>accessibility</strong>, using semantic markup and screenreader-friendly <code>&lt;time&gt;</code> -tags — as well as <strong>internationalization</strong> and <strong>formatting</strong>, using the <code>Intl.Locale</code>, <code>Intl.DateTimeFormat</code> and <code>Intl.NumberFormat</code>-APIs.</p>\n\n\n\n<p>In other words, we’re making a calendar… only without the extra dependencies you might typically see used in a tutorial like this, and with some of the nuances you might not typically see. And, in the process, I hope you’ll gain a new appreciation for newer things that JavaScript can do while getting an idea of the sorts of things that cross my mind when I’m putting something like this together.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"first-off-naming\">First off, naming</h3>\n\n\n<p>What should we call our calendar component? In my native language, it would be called “kalender element”, so let’s use that and shorten that to “Kal-El” — also known as <a href=\"https://the-superman.fandom.com/wiki/Kal-El\" rel=\"noopener\">Superman’s name on the planet Krypton</a>.</p>\n\n\n\n<p>Let’s create a function to get things going:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>function kalEl(settings = {}) { ... }</code></pre>\n\n\n\n<p>This method will render <strong>a single month</strong>. Later we’ll call this method from <code>[...Array(12).keys()]</code> to render an entire year.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"initial-data-and-internationalization\">Initial data and internationalization</h3>\n\n\n<p>One of the common things a typical online calendar does is highlight the current date. So let’s create a reference for that:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const today = new Date();</code></pre>\n\n\n\n<p>Next, we’ll create a “configuration object” that we’ll merge with the optional <code>settings</code> object of the primary method:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const config = Object.assign(\n  {\n    locale: (document.documentElement.getAttribute('lang') || 'en-US'), \n    today: { \n      day: today.getDate(),\n      month: today.getMonth(),\n      year: today.getFullYear() \n    } \n  }, settings\n);</code></pre>\n\n\n\n<p>We check, if the root element (<code>&lt;html&gt;</code>) contains a <code>lang</code>-attribute with <strong>locale</strong> info; otherwise, we’ll fallback to using <code>en-US</code>. This is the first step toward <a href=\"https://www.w3.org/International/questions/qa-html-language-declarations\" rel=\"noopener\">internationalizing the calendar</a>.</p>\n\n\n\n<p>We also need to determine which month to initially display when the calendar is rendered. That&#8217;s why we extended the <code>config</code> object with the primary <code>date</code>. This way, if no date is provided in the <code>settings</code> object, we’ll use the <code>today</code> reference instead:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const date = config.date ? new Date(config.date) : today;</code></pre>\n\n\n\n<p>We need a little more info to properly format the calendar based on locale. For example, we might not know whether the first day of the week is Sunday or Monday, depending on the locale. If we have the info, great! But if not, we’ll update it using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale\" rel=\"noopener\"><code>Intl.Locale</code> API</a>. The API has a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/weekInfo\" rel=\"noopener\"><code>weekInfo</code> object</a> that returns a <code>firstDay</code> property that gives us exactly what we’re looking for without any hassle. We can also get which days of the week are assigned to the <code>weekend</code>:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>if (!config.info) config.info = new Intl.Locale(config.locale).weekInfo || { \n  firstDay: 7,\n  weekend: [6, 7] \n};</code></pre>\n\n\n\n<p>Again, we create fallbacks. The “first day” of the week for <code>en-US</code> is Sunday, so it defaults to a value of <code>7</code>. This is a little confusing, as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\" rel=\"noopener\"><code>getDay</code> method</a> in JavaScript returns the days as <code>[0-6]</code>, where <code>0</code> is Sunday… don’t ask me why. The weekends are Saturday and Sunday, hence <code>[6, 7]</code>.</p>\n\n\n\n<p>Before we had the <code>Intl.Locale</code> API and its <code>weekInfo</code> method, it was pretty hard to create an international calendar without many **objects and arrays with information about each locale or region. Nowadays, it’s easy-peasy. If we pass in <code>en-GB</code>, the method returns:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>// en-GB\n{\n  firstDay: 1,\n  weekend: [6, 7],\n  minimalDays: 4\n}</code></pre>\n\n\n\n<p>In a country like Brunei (<code>ms-BN</code>), the weekend is Friday and Sunday:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>// ms-BN\n{\n  firstDay: 7,\n  weekend: [5, 7],\n  minimalDays: 1\n}</code></pre>\n\n\n\n<p class=\"is-style-explanation\">You might wonder what that <code>minimalDays</code> property is. That’s the <a href=\"https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Patterns_Week_Elements\" rel=\"noopener\">fewest days required in the first week of a month to be counted as a full week</a>. In some regions, it might be just one day. For others, it might be a full seven days.</p>\n\n\n\n<p>Next, we’ll create a <code>render</code> method within our <code>kalEl</code>-method:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const render = (date, locale) => { ... }</code></pre>\n\n\n\n<p>We still need some more data to work with before we render anything:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const month = date.getMonth();\nconst year = date.getFullYear();\nconst numOfDays = new Date(year, month + 1, 0).getDate();\nconst renderToday = (year === config.today.year) &amp;&amp; (month === config.today.month);</code></pre>\n\n\n\n<p>The last one is a <code>Boolean</code> that checks whether <code>today</code> exists in the month we’re about to render.</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"semantic-markup\">Semantic markup</h3>\n\n\n<p>We’re going to get deeper in rendering in just a moment. But first, I want to make sure that the details we set up have semantic HTML tags associated with them. Setting that up right out of the box gives us accessibility benefits from the start.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"calendar-wrapper\">Calendar wrapper</h4>\n\n\n<p>First, we have the non-semantic wrapper: <code>&lt;kal-el&gt;</code>. That’s fine because there isn’t a semantic <code>&lt;calendar&gt;</code> tag or anything like that. If we weren’t making a custom element, <code>&lt;article&gt;</code> might be the most appropriate element since the calendar could stand on its own page.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"month-names\">Month names</h4>\n\n\n<p>The <code>&lt;time&gt;</code> element is going to be a big one for us because it helps translate dates into a format that screenreaders and search engines can parse more accurately and consistently. For example, here’s how we can convey “January 2023” in our markup:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;time datetime=\"2023-01\">January &lt;i>2023&lt;/i>&lt;/time></code></pre>\n\n\n<h4 class=\"wp-block-heading\" id=\"day-names\">Day names</h4>\n\n\n<p>The row above the calendar’s dates containing the names of the days of the week can be tricky. It’s ideal if we can write out the full names for each day — e.g. Sunday, Monday, Tuesday, etc. — but that can take up a lot of space. So, let’s abbreviate the names for now inside of an <code>&lt;ol&gt;</code> where each day is a <code>&lt;li&gt;</code>:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;ol>\n  &lt;li>&lt;abbr title=\"Sunday\">Sun&lt;/abbr>&lt;/li>\n  &lt;li>&lt;abbr title=\"Monday\">Mon&lt;/abbr>&lt;/li>\n  &lt;!-- etc. -->\n&lt;/ol></code></pre>\n\n\n\n<p>We could get tricky with CSS to get the best of both worlds. For example, if we modified the markup a bit like this:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;ol>\n  &lt;li>\n    &lt;abbr title=\"S\">Sunday&lt;/abbr>\n  &lt;/li>\n&lt;/ol></code></pre>\n\n\n\n<p>…we get the full names by default. We can then “hide” the full name when space runs out and display the <code>title</code> attribute instead:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>@media all and (max-width: 800px) {\n  li abbr::after {\n    content: attr(title);\n  }\n}</code></pre>\n\n\n\n<p>But, we’re not going that way because the <code>Intl.DateTimeFormat</code> API can help here as well. We’ll get to that in the next section when we cover rendering.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"day-numbers\">Day numbers</h4>\n\n\n<p>Each date in the calendar grid gets a number. Each number is a list item (<code>&lt;li&gt;</code>) in an ordered list (<code>&lt;ol&gt;</code>), and the inline <code>&lt;time&gt;</code> tag wraps the actual number.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;li>\n  &lt;time datetime=\"2023-01-01\">1&lt;/time>\n&lt;/li></code></pre>\n\n\n\n<p>And while I’m not planning to do any styling just yet, I know I will want some way to style the date numbers. That’s possible as-is, but I also want to be able to style weekday numbers differently than weekend numbers if I need to. So, I’m going to include <a href=\"https://css-tricks.com/a-complete-guide-to-data-attributes/\"><code>data-*</code> attributes</a> specifically for that: <code>data-weekend</code> and <code>data-today</code>.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"week-numbers\">Week numbers</h4>\n\n\n<p>There are 52 weeks in a year, sometimes 53. While it’s not super common, it can be nice to display the number for a given week in the calendar for additional context. I like having it now, even if I don&#8217;t wind up not using it. But we’ll totally use it in this tutorial.</p>\n\n\n\n<p>We’ll use a <code>data-weeknumber</code> attribute as a styling hook and include it in the markup for each date that is the week&#8217;s first date.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;li data-day=\"7\" data-weeknumber=\"1\" data-weekend=\"\">\n  &lt;time datetime=\"2023-01-08\">8&lt;/time>\n&lt;/li></code></pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"rendering\">Rendering</h3>\n\n\n<p>Let’s get the calendar on a page! We already know that <code>&lt;kal-el&gt;</code> is the name of our custom element. First thing we need to configure it is to set the <code>firstDay</code> property on it, so the calendar knows whether Sunday or some other day is the first day of the week.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;kal-el data-firstday=\"${ config.info.firstDay }\"></code></pre>\n\n\n\n<p>We’ll be using <a href=\"https://css-tricks.com/template-literals/\">template literals</a> to render the markup. To format the dates for an international audience, we’ll use the <code>Intl.DateTimeFormat</code> API, again using the <code>locale</code> we specified earlier.</p>\n\n\n<h4 class=\"wp-block-heading\" id=\"the-month-and-year\">The month and year</h4>\n\n\n<p>When we call the <code>month</code>, we can set whether we want to use the <code>long</code> name (e.g. February) or the <code>short</code> name (e.g. Feb.). Let’s use the <code>long</code> name since it’s the title above the calendar:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;time datetime=\"${year}-${(pad(month))}\">\n  ${new Intl.DateTimeFormat(\n    locale,\n    { month:'long'}).format(date)} &lt;i>${year}&lt;/i>\n&lt;/time></code></pre>\n\n\n<h4 class=\"wp-block-heading\" id=\"weekday-names\">Weekday names</h4>\n\n\n<p>For weekdays displayed above the grid of dates, we need both the <code>long</code> (e.g. “Sunday”) and <code>short</code> (abbreviated, ie. “Sun”) names. This way, we can use the “short” name when the calendar is short on space:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>Intl.DateTimeFormat([locale], { weekday: 'long' })\nIntl.DateTimeFormat([locale], { weekday: 'short' })</code></pre>\n\n\n\n<p>Let’s make a small helper method that makes it a little easier to call each one:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const weekdays = (firstDay, locale) => {\n  const date = new Date(0);\n  const arr = [...Array(7).keys()].map(i => {\n    date.setDate(5 + i)\n    return {\n      long: new Intl.DateTimeFormat([locale], { weekday: 'long'}).format(date),\n      short: new Intl.DateTimeFormat([locale], { weekday: 'short'}).format(date)\n    }\n  })\n  for (let i = 0; i &lt; 8 - firstDay; i++) arr.splice(0, 0, arr.pop());\n  return arr;\n}</code></pre>\n\n\n\n<p>Here’s how we invoke that in the template:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;ol>\n  ${weekdays(config.info.firstDay,locale).map(name => `\n    &lt;li>\n      &lt;abbr title=\"${name.long}\">${name.short}&lt;/abbr>\n    &lt;/li>`).join('')\n  }\n&lt;/ol></code></pre>\n\n\n<h4 class=\"wp-block-heading\" id=\"day-numbers\">Day numbers</h4>\n\n\n<p>And finally, the days, wrapped in an <code>&lt;ol&gt;</code> element:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>${[...Array(numOfDays).keys()].map(i => {\n  const cur = new Date(year, month, i + 1);\n  let day = cur.getDay(); if (day === 0) day = 7;\n  const today = renderToday &amp;&amp; (config.today.day === i + 1) ? ' data-today':'';\n  return `\n    &lt;li data-day=\"${day}\"${today}${i === 0 || day === config.info.firstDay ? ` data-weeknumber=\"${new Intl.NumberFormat(locale).format(getWeek(cur))}\"`:''}${config.info.weekend.includes(day) ? ` data-weekend`:''}>\n      &lt;time datetime=\"${year}-${(pad(month))}-${pad(i)}\" tabindex=\"0\">\n        ${new Intl.NumberFormat(locale).format(i + 1)}\n      &lt;/time>\n    &lt;/li>`\n}).join('')}</code></pre>\n\n\n\n<p>Let’s break that down:</p>\n\n\n\n<ol>\n<li>We create a “dummy” array, based on the “number of days” variable, which we’ll use to iterate.</li>\n\n\n\n<li>We create a <code>day</code> variable for the current day in the iteration.</li>\n\n\n\n<li>We fix the discrepancy between the <code>Intl.Locale</code> API and <code>getDay()</code>.</li>\n\n\n\n<li>If the <code>day</code> is equal to <code>today</code>, we add a <code>data-*</code> attribute.</li>\n\n\n\n<li>Finally, we return the <code>&lt;li&gt;</code> element as a string with merged data.</li>\n\n\n\n<li><code>tabindex=\"0\"</code> makes the element focusable, when using keyboard navigation, after any positive tabindex values (Note: you should <strong>never</strong> add <strong>positive</strong> tabindex-values)</li>\n</ol>\n\n\n\n<p>To <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\" rel=\"noopener\">“pad” the numbers</a> in the <code>datetime</code> attribute, we use a little helper method:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>const pad = (val) => (val + 1).toString().padStart(2, '0');</code></pre>\n\n\n<h4 class=\"wp-block-heading\" id=\"week-number\">Week number</h4>\n\n\n<p>Again, the “week number” is where a week falls in a 52-week calendar. We use a little helper method for that as well:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>function getWeek(cur) {\n  const date = new Date(cur.getTime());\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n  const week = new Date(date.getFullYear(), 0, 4);\n  return 1 + Math.round(((date.getTime() - week.getTime()) / 86400000 - 3 + (week.getDay() + 6) % 7) / 7);\n}</code></pre>\n\n\n\n<p class=\"is-style-explanation\">I didn’t write this <code>getWeek</code>-method. It’s a cleaned up version of <a href=\"https://weeknumber.com/how-to/javascript\" rel=\"noopener\">this script</a>.</p>\n\n\n\n<p>And that’s it! Thanks to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale\" rel=\"noopener\"><code>Intl.Locale</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\"><code>Intl.DateTimeFormat</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\" rel=\"noopener\"><code>Intl.NumberFormat</code></a> APIs, we can now simply change the <code>lang</code>-attribute of the <code>&lt;html&gt;</code> element to change the context of the calendar based on the current region:</p>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-8 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img alt=\"January 2023 calendar grid.\" class=\"wp-image-376959\" height=\"284\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672589519354_image.png?resize=456%2C284&#038;ssl=1\" width=\"456\" /><figcaption class=\"wp-element-caption\"><code>de-DE</code></figcaption></figure>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img alt=\"January 2023 calendar grid.\" class=\"wp-image-376960\" height=\"253\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672589309595_image.png?resize=444%2C253&#038;ssl=1\" width=\"444\" /><figcaption class=\"wp-element-caption\"><code>fa-IR</code></figcaption></figure>\n</div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img alt=\"January 2023 calendar grid.\" class=\"wp-image-376961\" height=\"257\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672589340340_image.png?resize=451%2C257&#038;ssl=1\" width=\"451\" /><figcaption class=\"wp-element-caption\"><code>zh-Hans-CN-u-nu-hanidec</code></figcaption></figure>\n</div>\n</div>\n\n\n<h3 class=\"wp-block-heading\" id=\"styling-the-calendar\">Styling the calendar</h3>\n\n\n<p>You might recall how all the days are just one <code>&lt;ol&gt;</code> with list items. To style these into a readable calendar, we dive into the wonderful world of CSS Grid. In fact, we can repurpose the same grid from <a href=\"https://css-tricks.com/snippets/css/css-grid-starter-layouts/\">a starter calendar template right here on CSS-Tricks</a>, but updated a smidge with the <code>:is()</code> relational pseudo to optimize the code.</p>\n\n\n\n<p>Notice that I’m defining configurable CSS variables along the way (and prefixing them with <code>---kalel-</code> to avoid conflicts).</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>kal-el :is(ol, ul) {\n  display: grid;\n  font-size: var(--kalel-fz, small);\n  grid-row-gap: var(--kalel-row-gap, .33em);\n  grid-template-columns: var(--kalel-gtc, repeat(7, 1fr));\n  list-style: none;\n  margin: unset;\n  padding: unset;\n  position: relative;\n}</code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Seven-column calendar grid with grid lines shown.\" class=\"wp-image-376958\" height=\"266\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672590153826_image.png?resize=397%2C266&#038;ssl=1\" width=\"397\" /></figure>\n\n\n\n<p>Let’s draw borders around the date numbers to help separate them visually:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>kal-el :is(ol, ul) li {\n  border-color: var(--kalel-li-bdc, hsl(0, 0%, 80%));\n  border-style: var(--kalel-li-bds, solid);\n  border-width: var(--kalel-li-bdw, 0 0 1px 0);\n  grid-column: var(--kalel-li-gc, initial);\n  text-align: var(--kalel-li-tal, end); \n}</code></pre>\n\n\n\n<p>The seven-column grid works fine when the first day of the month is <em>also</em> the first day of the week for the selected locale). But that’s the exception rather than the rule. Most times, we’ll need to shift the first day of the month to a different weekday.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img alt=\"Showing the first day of the month falling on a Thursday.\" class=\"wp-image-376964\" height=\"266\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2023/01/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1672590297938_image.png?resize=390%2C266&#038;ssl=1\" width=\"390\" /></figure>\n\n\n\n<p>Remember all the extra <code>data-*</code> attributes we defined when writing our markup? We can hook into those to update which grid column (<code>--kalel-li-gc</code>) the first date number of the month is placed on:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>[data-firstday=\"1\"] [data-day=\"3\"]:first-child {\n  --kalel-li-gc: 1 / 4;\n}</code></pre>\n\n\n\n<p>In this case, we’re spanning from the first grid column to the fourth grid column — which will automatically “push” the next item (Day 2) to the fifth grid column, and so forth.</p>\n\n\n\n<p>Let’s add a little style to the “current” date, so it stands out. These are just my styles. You can totally do what you’d like here.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>[data-today] {\n  --kalel-day-bdrs: 50%;\n  --kalel-day-bg: hsl(0, 86%, 40%);\n  --kalel-day-hover-bgc: hsl(0, 86%, 70%);\n  --kalel-day-c: #fff;\n}</code></pre>\n\n\n\n<p>I like the idea of styling the date numbers for weekends differently than weekdays. I’m going to use a reddish color to style those. Note that we can reach for the <code>:not()</code> pseudo-class to select them while leaving the current date alone:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>[data-weekend]:not([data-today]) { \n  --kalel-day-c: var(--kalel-weekend-c, hsl(0, 86%, 46%));\n}</code></pre>\n\n\n\n<p>Oh, and let’s not forget the week numbers that go before the first date number of each week. We used a <code>data-weeknumber</code> attribute in the markup for that, but the numbers won’t actually display unless we reveal them with CSS, which we can do on the <code>::before</code> pseudo-element:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>[data-weeknumber]::before {\n  display: var(--kalel-weeknumber-d, inline-block);\n  content: attr(data-weeknumber);\n  position: absolute;\n  inset-inline-start: 0;\n  /* additional styles */\n}</code></pre>\n\n\n\n<p>We’re technically done at this point! We can render a calendar grid that shows the dates for the current month, complete with considerations for localizing the data by locale, and ensuring that the calendar uses proper semantics. And all we used was vanilla JavaScript and CSS!</p>\n\n\n\n<p>But let’s take this <em>one more step</em>…</p>\n\n\n<h3 class=\"wp-block-heading\" id=\"rendering-an-entire-year\">Rendering an entire year</h3>\n\n\n<p>Maybe you need to display a full year of dates! So, rather than render the current month, you might want to display all of the month grids for the current year.</p>\n\n\n\n<p>Well, the nice thing about the approach we’re using is that we can call the <code>render</code> method as many times as we want and merely change the integer that identifies the month on each instance. Let’s call it 12 times based on the current year.</p>\n\n\n\n<p>as simple as calling the <code>render</code>-method 12 times, and just change the integer for <code>month</code> — <code>i</code>:</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-javascript\" rel=\"javascript\"><code>[...Array(12).keys()].map(i =>\n  render(\n    new Date(date.getFullYear(),\n    i,\n    date.getDate()),\n    config.locale,\n    date.getMonth()\n  )\n).join('')</code></pre>\n\n\n\n<p>It’s probably a good idea to create a new parent wrapper for the rendered year. Each calendar grid is a <code>&lt;kal-el&gt;</code> element. Let’s call the new parent wrapper <code>&lt;jor-el&gt;</code>, where <a href=\"https://superman.fandom.com/wiki/Jor-El\" rel=\"noopener\">Jor-El is the name of Kal-El’s father</a>.</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-markup\" rel=\"html\"><code>&lt;jor-el id=\"app\" data-year=\"true\">\n  &lt;kal-el data-firstday=\"7\">\n    &lt;!-- etc. -->\n  &lt;/kal-el>\n\n  &lt;!-- other months -->\n&lt;/jor-el></code></pre>\n\n\n\n<p>We can use <code>&lt;jor-el&gt;</code> to create a grid for our grids. So meta!</p>\n\n\n\n<pre class=\"wp-block-csstricks-code-block language-css\" rel=\"css\"><code>jor-el {\n  background: var(--jorel-bg, none);\n  display: var(--jorel-d, grid);\n  gap: var(--jorel-gap, 2.5rem);\n  grid-template-columns: var(--jorel-gtc, repeat(auto-fill, minmax(320px, 1fr)));\n  padding: var(--jorel-p, 0);\n}</code></pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"final-demo\">Final demo</h3>\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\">CodePen Embed Fallback</div>\n\n\n<h3 class=\"wp-block-heading\" id=\"bonus-confetti-calendar\">Bonus: Confetti Calendar</h3>\n\n\n<p>I read an excellent book called <em><a href=\"https://www.goodreads.com/book/show/35863579-making-and-breaking-the-grid\" rel=\"noopener\">Making and Breaking the Grid</a></em> the other day and stumbled on this beautiful “New Year’s poster”:</p>\n\n\n\n<figure class=\"wp-block-image\"><img alt=\"\" src=\"https://i0.wp.com/paper-attachments.dropboxusercontent.com/s_5F326355ADAED13048ECB603E300F82A04D113F56D11D632592576A458AB8C94_1673333960043_IMG_1264.jpeg?ssl=1\" /><figcaption class=\"wp-element-caption\">Source: <em><a href=\"https://www.goodreads.com/book/show/35863579-making-and-breaking-the-grid\" rel=\"noopener\">Making and Breaking the Grid (2nd Edition)</a></em> by Timothy Samara</figcaption></figure>\n\n\n\n<p>I figured we could do something similar without changing anything in the HTML or JavaScript. I’ve taken the liberty to include full names for months, and numbers instead of day names, to make it more readable. Enjoy!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\">CodePen Embed Fallback</div>\n<hr />\n<p><small><a href=\"https://css-tricks.com/making-calendars-with-accessibility-and-internationalization-in-mind/\" rel=\"nofollow\">Making Calendars With Accessibility and Internationalization in Mind</a> originally published on <a href=\"https://css-tricks.com\" rel=\"nofollow\">CSS-Tricks</a>, which is part of the <a href=\"https://try.digitalocean.com/css-tricks/?utm_medium=rss&amp;utm_source=css-tricks.com&amp;utm_campaign=family_&amp;utm_content=\">DigitalOcean</a> family. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>",
    "pub_date": "2023-03-13T13:23:52Z",
    "upd_date": "2023-03-13T13:23:52Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:34:59.922Z",
    "updated": "2023-10-09T09:34:59.922Z",
    "tags": [
      105,
      110,
      111,
      112
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 118,
  "fields": {
    "feed": 7,
    "title": "Introduction to the OWASP Top 10 (at GoodHuman in May 2023)",
    "author": null,
    "url": "https://brntn.me/blog/talk-introduction-to-the-owasp-top-10-at-goodhuman-in-may-2023/",
    "image_url": "https://media.brntn.me/owasp-top10.0.png",
    "description": "<blockquote>\n<p>This is an edited transcript of a talk I gave at GoodHuman about the OWASP Top 10. The talk is available in my <a href=\"https://github.com/sesh/quick-presentations\">quick-presentations</a> repository.</p>\n<p>The transcript was created OpenAI's Whisper API, then edited by myself and Claude2 using a similar strategy to <a href=\"https://simonwillison.net/2023/Aug/6/annotated-presentations/\">Simon Willison</a>. Screenshots were created using <a href=\"https://shot-scraper.datasette.io/en/stable/\">shot-scraper</a>.</p>\n</blockquote>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.0.png\" /></p>\n<p>Good morning. Today I'm going to cover the OWASP Top 10. \nIf you're not across the OWASP Top 10, that's fine. This is just a super high-level introduction. I'm going to run through each of the 10 items on the list and then talk about some public exploits for each one.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.1.png\" /></p>\n<p>So what is the <a href=\"https://owasp.org/www-project-top-ten/\">OWASP Top 10</a>? It's a regularly updated list of the most critical security risks to web applications.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.2.png\" /></p>\n<p>It's produced by the Open Worldwide Application Security Project.</p>\n<p>That's a group of about 50,000 security professionals who have joined as members. And you <a href=\"https://owasp.org/membership/\">can be a member</a>. It only costs $50 to join for a year, which helps support the projects that they do.</p>\n<p>They get together for in-person events where they talk about this stuff. But they also have a really huge online community of security-focused web developers and security professionals.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.3.png\" /></p>\n<p>Here's the top 10. I'm just going to dive into this.</p>\n<p>But first I want to just caveat it all a little bit. For each of these items in the top 10, you could probably spend an entire day doing a workshop on them. And I'm going to try to spend two minutes on each one. So that's the depth that we're going to get to here.</p>\n<p>I'm hoping to give you the exposure to what they are so that you can start to think about these things and how they apply within our application and the code that you're writing.</p>\n<p>Let's jump in.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.4.png\" /></p>\n<p>Number one on the list is broken access control, which is any situation where a user can access something that's outside of their intended set of permissions. We see that happen all the time. It's number one on the list because it's incredibly common and it can have a really high impact. There's a high risk of data exposure when you allow users to access things that they're not supposed to.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.6.png\" /></p>\n<p>We see it happening through things like manipulating URLs, changing the contents of cookies, changing the contents of JWTs or how they're signed, and just generally manipulating things to do with an HTTP request that we're making to a service.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.7.png\" /></p>\n<p>We also see missing access control on unexpected HTTP methods. This is a specific type of web vulnerability where, say, you've got the access control on the GET request, but then someone makes a PATCH request and that circumvents the access control and still returns the object.</p>\n<p>Things like that can be really common in web frameworks where you're relying on the framework to do a lot of that access control and checking.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.8.png\" /></p>\n<p>This is an example of what you might see in the network tab of Google Chrome or Firefox. If I ever see this URL, there's a 100% chance that I'm going to change that final 2 to a 3 and just see what happens.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.9.png\" /></p>\n<p>And in the case of Optus, what might happen is you return the full customer record for that next customer ID, regardless of who you're authenticated as.</p>\n<p>For each of these, I'm going to try to give you a brief example of how this has gone catastrophically wrong for somebody. And in the case of Optus, they had a public API endpoint to get customer information that took a customer ID and didn't require any authentication. Someone found that, just enumerated through all of the sequential customer IDs, and saved that data.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.10.png\" /></p>\n<p>Number two is cryptographic failures.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.11.png\" /></p>\n<p>Effectively, just bad cryptography that leads to unexpected data exposure, which is a pretty broad statement. And it's actually a really big category of different types of vulnerabilities.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.12.png\" /></p>\n<p>It encompasses things like weak TLS configurations that allow a person-in-the-middle attack. So that's having bad ciphers or having a weakly generated SSL certificate.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.13.png\" /></p>\n<p>Sticking with SSL, it also covers the HSTS header. If you're not across what the HSTS header does, it sets an amount of time that once a browser has accessed your website over HTTPS, it should never allow HTTP connections. If you don't set it up properly, you can suffer from downgrade attacks where an attacker will send the user to the HTTP version of your website and intercept that traffic.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.14.png\" /></p>\n<p>Another huge one here is the use of default passwords and secrets in the application. I'll share the slides later, but these four links down here are just to GitHub repos full of default passwords for things like routers and MongoDB instances and fresh installs of PHP apps and stuff like that. There are so many data breaches that happen because people just credential stuff with the default password for applications that are publicly available on the internet and then dump everything out of it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.15.png\" /></p>\n<p>It also covers the use of weak algorithms and keys with low entropy. So that's using bad password hashing algorithms.</p>\n<p>You should just use Bcrypt or Argon2 if you need to hash a password or do what we do and rely on Firebase, Auth0 or someone that gets paid a huge amount of money to get that stuff right.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.16.png\" /></p>\n<p>Accidental key exposure falls into this as well. With accidental key exposure, my example is from March of this year where GitHub accidentally included their RSA private key in a public GitHub repo.</p>\n<p>Heaps of people seem to have had access to that key, which is a bit scary considering that that's all you would have needed to intercept all SSH traffic to GitHub or to enable interception of SSH traffic to GitHub.</p>\n<p>One big thing that they got called out for was the sentence &quot;and out of an abundance of caution,&quot; they replaced the RSA key. They leaked the RSA key publicly. It's not an abundance of caution. The only behaviour that you can do after that happens is rotating the key.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.17.png\" /></p>\n<p>Everyone web developer's favourite: Injection.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.18.png\" /></p>\n<p>Injection is a situation where user supplied data is directly injected into your code. You're allowing a user to change the behaviour of your application when they submit data.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.19.png\" /></p>\n<p>Obviously SQL injection is something that we're all probably pretty aware of, but it's not just SQL that you have to care about here. Things like LDAP, NoSQL, if you're piping commands to a system command line to generate a PDF or something like that, that can also be vulnerable to injection and ORMs are not immune either. There are plenty of CVEs and pretty critical ones as well for ORM exploits that involve injection.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.20.png\" /></p>\n<p>The example is the Bobby Tables XKCD comic. It's about a mom that happened to name her son, Robert, quote, close bracket, colon drop table students, colon dash dash. And the school had a heap of problems with that name and yeah, that's the XKCD comic.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.21.png\" /></p>\n<p>Insecure design is next on the list. And it covers design and architectural flaws in your system.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.22.png\" /></p>\n<p>It's one that was introduced in 2021 because they want teams thinking more about the idea of secure by design, doing activities like threat modelling to understand the risks of changes that you're introducing and improving the security posture through training and through better design of the application that you're working on.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.23.png\" /></p>\n<p>Pretty much all of these things are design flaws, even something as simple as a SQL injection, right? It's like you've designed that API endpoint to allow the user to do that. And you can pick those things up at the design phase through better practices around security, but also through understanding the risks that you're potentially introducing.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.24.png\" /></p>\n<p>Huge, huge example here from November last year is LastPass. I link at the end to all of the examples and the LastPass security incident section on Wikipedia is probably longer than the rest of the article combined. It's huge.</p>\n<p>The issue that they had and what I would definitely classify as bad design in 2022 is someone got in and downloaded a whole bunch of backups. Backups of customer password vaults. And you would think, that's not the end of the world. They're encrypted with my master password or with my password that I've supplied to sort of add into the encryption key...</p>\n<p>The design flaw that they had was that only the passwords in the vault were encrypted. So now the attackers have a massive list of username / email address and account and where you have accounts based on what they were able to get out of those backups.</p>\n<p>And then there was a secondary design flaw which makes things even worse, which is effectively that if you hadn't changed your master password in the last few years, then it had only gone through a thousand rounds of hashing with their hashing algorithm, which meant that they were quite easy to crack.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.25.png\" /></p>\n<p>Next on the list, security misconfiguration, which is just like applications that are improperly secured because of a misconfiguration.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.26.png\" /></p>\n<p>Classic one in the web development world is like MongoDB that's open to the internet and it can grab everything out of it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.27.png\" />\nThis is also things where you've missed steps in like your go-live list or the hardening documentation of a piece of software that you're adding into your infrastructure.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.28.png\" />\nAnd also situations where you might accidentally deploy to production with development configs. The example I used a couple of years ago when I did a presentation about this was like Twitter deploying with source maps and the full unmodified source into production and things like that. Not something that you necessarily want do when you're a company that size.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.29.png\" /></p>\n<p>Another potential example here is features that aren't being used, features that are enabled that aren't being used that increase the attack surface. So that's enabling things that are still a work in progress or haven't been properly secured.</p>\n<p>That kind of goes into security by design and baking in security from day zero to make sure that when you enable something or if something gets accidentally enabled, you're not increasing the attack surface.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.30.png\" /></p>\n<p>An example here, and this has hit companies here in Australia, is this article from Krebs about how many public Salesforce sites are leaking private data.</p>\n<p>Effectively, there's a default configuration with public Salesforce sites that if you allow anonymous users to write data, then those anonymous users are able to read data as well, including data submitted by other anonymous users. So if you spin up a little site to just do a quiz or get some feedback from people or something like that, the anonymous users are able to just change the URL and see all of their responses.</p>\n<p>That's like the default configuration and this has hit banks and healthcare providers and government agencies who just pay consultants a heap of money to deploy a Salesforce site for something and then it doesn't get secured properly.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.31.png\" /></p>\n<p>Vulnerable and outdated components.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.32.png\" /></p>\n<p>So applications using components with known security vulnerabilities, you probably have all seen lthe of Dependabot and things like that before to detect vulnerabilities that are out of date and in particular detect vulnerabilities that have known security issues, which you need to update.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.33.png\" /></p>\n<p>This one will cover both accidental vulnerabilities and malicious changes. So in the case of open source projects, I suppose generally developers aren't intending to introduce vulnerabilities, so it's an accidental vulnerability, but malicious changes definitely do happen.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.34.png\" /></p>\n<p>When a malicious change is specifically targeting a set of users, that's become known as a supply chain attack where someone is specifically targeting you by modifying a dependency in your supply chain. And that's something that we've seen a lot of in the last three or four years.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.35.png\" /></p>\n<p>The example here is the node IPC library. In March 2022 after the Russian invasion of Ukraine, the developer updated that library to just delete files if you happen to install it from within Russia. We might support that action but it's something that you don't want to accidentally run in your build pipeline or on a build server or in your production environment where someone's package that they've updated deletes a bunch of files off of your computer.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.36.png\" /></p>\n<p>Identification and authentication failures which is allowing the wrong user to authenticate to a system.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.37.png\" /></p>\n<p>And that might be a malicious user or it might just be a user who has logged into one system and gets access to another system unintentionally. This covers things like account enumeration, which is something that I've seen a bunch of in the past with companies that I've worked for where attackers have just tried to log in with a whole bunch of leaked credentials.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.38.png\" /></p>\n<p>Account enumeration becomes a big deal for companies when you allow customers to have weak and previously leaked passwords. So being able to check against or being able to check password entropy when you're setting or changing the password is one way to combat this, but also checking against public databases of leaked passwords is a great action that we can do.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.39.png\" /></p>\n<p>This one also covers misconfiguration of authentication. So that's things like being able to bypass MFA. So if you've got a username and password for a customer, but the customer has MFA, hopefully that stops the attacker from being able to log in, but there are vulnerabilities where you can figure out MFA bypasses. That's sort of one where you'd be joining multiple attacks together, but it's something that we do see in the wild. That's what happened to Uber when they had one of their employees get hacked and they bypassed MFA to get access to their network and then found PowerShell scripts full of tokens that had access to customer data.</p>\n<p>OAuth scope creep. So that's where when someone logs in via OAuth and the attacker changes the scopes that are given. So you're logging in with a proper account, but you end up generating a token that has more privilege than you're expecting.</p>\n<p>And then unverified user registrations, which is something that I'm sure we are handling quite well, but it's situations where a user is able to register a new account, but they're not supposed to be.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.40.png\" /></p>\n<p>The example here is not really that much of an example, but if you haven't seen the Have I Been Pwned website, I linked to it at the end and I definitely recommend to go and have a look and enter your personal email address. For myself, my email address is in 19 data breaches on the site. Everyone's details are on the internet and we just have to deal with that.</p>\n<p>Using MFA and unique passwords is the best way to combat data breaches like these.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.41.png\" /></p>\n<p>Software and data integrity failures</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.42.png\" /></p>\n<p>So this was another one that was introduced in 2021 and it's about pipelines and assuming that the build that you just tested and built on your like build environment is actually what ends up being deployed.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.43.png\" /></p>\n<p>This also covers using dependencies from third parties without verifying the contents of them. So when we find a great third party library to do something, do we actually go and have a look at the source code and make sure that it's not doing something stupid?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.44.png\" /></p>\n<p>And then also this covers allowing untrusted code into like your ecosystem. So that's whether it's a dependency that you added or a new component that you're putting into your system. How much do you trust that piece of code?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.45.png\" /></p>\n<p>I'm not going to go into too much detail here about the SolarWinds attack because it's pretty old now, but the SolarWinds hack was a hack by Russian government hackers really that attacked a whole bunch of US companies and government agencies by updating the firmware on a network device. And the network device wasn't properly checking the signature of the firmware before updating. And then they were just sniffing all the traffic. It's definitely one to go and read about - there are books written about this hack. It's a really great one to dive deep into.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.46.png\" /></p>\n<p>Next up is security logging and monitoring failures.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.47.png\" /></p>\n<p>So this one covers not having enough information to investigate an issue. So when a security incident does occur, do you have enough information to figure out what the attacker actually had access to, how they got in, what customer information was exposed and those sorts of things?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.48.png\" /></p>\n<p>And then it also covers logging too much information. So if the attacker does get in and all they've got access to is your logs, but they're able to scrape your logs for customer information and passwords, that would be bad.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.49.png\" /></p>\n<p>An example of this, probably more the former, but could also end up being the latest Latitude Pay hack earlier this year, where initially they came out and announced that they'd been attacked and they think about 15,000 customer records had been accessed. And then a week later, it was 300,000. And then two weeks after that, it was seven or 8 million people. And that's just an example of they didn't have the information at hand to understand the impact level of the incident. And that sort of really dictates how you handle an incident like that.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.50.png\" /></p>\n<p>Lucky last on the list is server-side request forgery. It's kind of an odd one on the list here because it's very specific. And I think if you look at the OWASP Top 10 page, this one was added through a community survey. It is a really important vulnerability to understand.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.51.png\" /></p>\n<p>SSRF is effectively allowing your server to make requests to a resource provided by a user. And you see that manifest itself in things like making requests to reveal metadata about the service.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.52.png\" /></p>\n<p>A common attack is to make requests to the AWS metadata IP address from screenshot services. That would dump out a screenshot of the JSON file that includes the AWS tokens for that service and things like that.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.53.png\" /></p>\n<p>You can use this to trick servers into mining cryptocurrencies and stuff like that. So if you've got a form that accepts a URL and you enter a URL that's got a cryptocurrency miner, maybe that will just sit there and do that forever.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.54.png\" /></p>\n<p>The couple of examples here. So this URL, if anyone in the chat can tell me what that's actually gonna access, I'd love to know.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.55.png\" /></p>\n<p>And this URL, if anyone knows what that one accesses, both perfectly valid URLs and both things that you'll see in a pen test, I think.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.56.png\" /></p>\n<p>And the example here is this one from a hacker named Orange. I've linked to it at the end, but they basically took a pretty simple SSRF in GitHub Enterprise's handling of webhooks and turned that into a remote code exploit in Memcached within the GitHub Enterprise deployment. And got tens of thousands of dollars from the GitHub bug bounty for what was effectively just a really simple SSRF, what began as a really simple SSRF attack.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.57.png\" /></p>\n<p>Well, I'm 54 seconds over, but here's my super quick wrap up.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.58.png\" /></p>\n<p>The OWASP Top 10 is amazing. You should go and read it. It's highly, highly accessible. It's super straightforward to read through, but it's really only the first 10 of heaps of issues that we have to care about as web developers. So hopefully we can keep talking about this stuff more in the future.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.59.png\" /></p>\n<p>The advice that I want to leave everyone with is really just to think about security as early as possible during the planning and design phase of the work that we're doing and make sure that it's something that we're considering. And that's it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.60.png\" /></p>\n<p>Resources if you want to learn more</p>\n<ul>\n<li><a href=\"https://owasp.org/\">OWASP</a> (<a href=\"https://owasp.org/www-project-top-ten/\">Top 10</a>, <a href=\"https://cheatsheetseries.owasp.org/\">Cheat Sheet Series</a>, <a href=\"https://owasp.org/www-project-web-security-testing-guide/stable/\">Testing Guide</a>)</li>\n<li><a href=\"https://www.pentesterlab.com/bootcamp\">Pentester Labs Bootcamp</a></li>\n<li><a href=\"https://www.picoctf.org/\">PicoCTF</a></li>\n<li><a href=\"https://risky.biz/\">Risky Business</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.61.png\" /></p>\n<p>Exposure links</p>\n<ul>\n<li><a href=\"https://verse.systems/blog/post/2022-09-25-optus-breach/\">Optus breach details</a></li>\n<li><a href=\"https://github.blog/2023-03-23-we-updated-our-rsa-ssh-host-key/\">Github RSA key leak</a></li>\n<li><a href=\"https://xkcd.com/327/\">Exploits of a Mom</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/LastPass#Security_incidents\">Lastpass Security Incidents</a></li>\n<li><a href=\"https://krebsonsecurity.com/2023/04/many-public-salesforce-sites-are-leaking-private-data/\">Salesforce public sites</a></li>\n<li><a href=\"https://www.theregister.com/2022/03/18/protestware_javascript_node_ipc/\">node-ipc updated to support Ukraine</a></li>\n<li><a href=\"https://haveibeenpwned.com\">Have I Been Pwned?</a></li>\n<li><a href=\"https://www.wired.com/story/russia-solarwinds-hack-roundup/\">Solarwinds</a> (<a href=\"https://archive.md/3RizK\">non-paywalled link</a>)</li>\n<li><a href=\"https://ia.acs.org.au/article/2023/latitude-breach-just-got-much-worse.html\">Latitude breach just got much worse</a></li>\n<li><a href=\"http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html\">Github SSRF Exploit Chain</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.62.png\" /></p>",
    "summary": "<blockquote>\n<p>This is an edited transcript of a talk I gave at GoodHuman about the OWASP Top 10. The talk is available in my <a href=\"https://github.com/sesh/quick-presentations\">quick-presentations</a> repository.</p>\n<p>The transcript was created OpenAI's Whisper API, then edited by myself and Claude2 using a similar strategy to <a href=\"https://simonwillison.net/2023/Aug/6/annotated-presentations/\">Simon Willison</a>. Screenshots were created using <a href=\"https://shot-scraper.datasette.io/en/stable/\">shot-scraper</a>.</p>\n</blockquote>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.0.png\" /></p>\n<p>Good morning. Today I'm going to cover the OWASP Top 10. \nIf you're not across the OWASP Top 10, that's fine. This is just a super high-level introduction. I'm going to run through each of the 10 items on the list and then talk about some public exploits for each one.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.1.png\" /></p>\n<p>So what is the <a href=\"https://owasp.org/www-project-top-ten/\">OWASP Top 10</a>? It's a regularly updated list of the most critical security risks to web applications.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.2.png\" /></p>\n<p>It's produced by the Open Worldwide Application Security Project.</p>\n<p>That's a group of about 50,000 security professionals who have joined as members. And you <a href=\"https://owasp.org/membership/\">can be a member</a>. It only costs $50 to join for a year, which helps support the projects that they do.</p>\n<p>They get together for in-person events where they talk about this stuff. But they also have a really huge online community of security-focused web developers and security professionals.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.3.png\" /></p>\n<p>Here's the top 10. I'm just going to dive into this.</p>\n<p>But first I want to just caveat it all a little bit. For each of these items in the top 10, you could probably spend an entire day doing a workshop on them. And I'm going to try to spend two minutes on each one. So that's the depth that we're going to get to here.</p>\n<p>I'm hoping to give you the exposure to what they are so that you can start to think about these things and how they apply within our application and the code that you're writing.</p>\n<p>Let's jump in.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.4.png\" /></p>\n<p>Number one on the list is broken access control, which is any situation where a user can access something that's outside of their intended set of permissions. We see that happen all the time. It's number one on the list because it's incredibly common and it can have a really high impact. There's a high risk of data exposure when you allow users to access things that they're not supposed to.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.6.png\" /></p>\n<p>We see it happening through things like manipulating URLs, changing the contents of cookies, changing the contents of JWTs or how they're signed, and just generally manipulating things to do with an HTTP request that we're making to a service.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.7.png\" /></p>\n<p>We also see missing access control on unexpected HTTP methods. This is a specific type of web vulnerability where, say, you've got the access control on the GET request, but then someone makes a PATCH request and that circumvents the access control and still returns the object.</p>\n<p>Things like that can be really common in web frameworks where you're relying on the framework to do a lot of that access control and checking.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.8.png\" /></p>\n<p>This is an example of what you might see in the network tab of Google Chrome or Firefox. If I ever see this URL, there's a 100% chance that I'm going to change that final 2 to a 3 and just see what happens.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.9.png\" /></p>\n<p>And in the case of Optus, what might happen is you return the full customer record for that next customer ID, regardless of who you're authenticated as.</p>\n<p>For each of these, I'm going to try to give you a brief example of how this has gone catastrophically wrong for somebody. And in the case of Optus, they had a public API endpoint to get customer information that took a customer ID and didn't require any authentication. Someone found that, just enumerated through all of the sequential customer IDs, and saved that data.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.10.png\" /></p>\n<p>Number two is cryptographic failures.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.11.png\" /></p>\n<p>Effectively, just bad cryptography that leads to unexpected data exposure, which is a pretty broad statement. And it's actually a really big category of different types of vulnerabilities.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.12.png\" /></p>\n<p>It encompasses things like weak TLS configurations that allow a person-in-the-middle attack. So that's having bad ciphers or having a weakly generated SSL certificate.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.13.png\" /></p>\n<p>Sticking with SSL, it also covers the HSTS header. If you're not across what the HSTS header does, it sets an amount of time that once a browser has accessed your website over HTTPS, it should never allow HTTP connections. If you don't set it up properly, you can suffer from downgrade attacks where an attacker will send the user to the HTTP version of your website and intercept that traffic.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.14.png\" /></p>\n<p>Another huge one here is the use of default passwords and secrets in the application. I'll share the slides later, but these four links down here are just to GitHub repos full of default passwords for things like routers and MongoDB instances and fresh installs of PHP apps and stuff like that. There are so many data breaches that happen because people just credential stuff with the default password for applications that are publicly available on the internet and then dump everything out of it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.15.png\" /></p>\n<p>It also covers the use of weak algorithms and keys with low entropy. So that's using bad password hashing algorithms.</p>\n<p>You should just use Bcrypt or Argon2 if you need to hash a password or do what we do and rely on Firebase, Auth0 or someone that gets paid a huge amount of money to get that stuff right.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.16.png\" /></p>\n<p>Accidental key exposure falls into this as well. With accidental key exposure, my example is from March of this year where GitHub accidentally included their RSA private key in a public GitHub repo.</p>\n<p>Heaps of people seem to have had access to that key, which is a bit scary considering that that's all you would have needed to intercept all SSH traffic to GitHub or to enable interception of SSH traffic to GitHub.</p>\n<p>One big thing that they got called out for was the sentence &quot;and out of an abundance of caution,&quot; they replaced the RSA key. They leaked the RSA key publicly. It's not an abundance of caution. The only behaviour that you can do after that happens is rotating the key.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.17.png\" /></p>\n<p>Everyone web developer's favourite: Injection.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.18.png\" /></p>\n<p>Injection is a situation where user supplied data is directly injected into your code. You're allowing a user to change the behaviour of your application when they submit data.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.19.png\" /></p>\n<p>Obviously SQL injection is something that we're all probably pretty aware of, but it's not just SQL that you have to care about here. Things like LDAP, NoSQL, if you're piping commands to a system command line to generate a PDF or something like that, that can also be vulnerable to injection and ORMs are not immune either. There are plenty of CVEs and pretty critical ones as well for ORM exploits that involve injection.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.20.png\" /></p>\n<p>The example is the Bobby Tables XKCD comic. It's about a mom that happened to name her son, Robert, quote, close bracket, colon drop table students, colon dash dash. And the school had a heap of problems with that name and yeah, that's the XKCD comic.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.21.png\" /></p>\n<p>Insecure design is next on the list. And it covers design and architectural flaws in your system.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.22.png\" /></p>\n<p>It's one that was introduced in 2021 because they want teams thinking more about the idea of secure by design, doing activities like threat modelling to understand the risks of changes that you're introducing and improving the security posture through training and through better design of the application that you're working on.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.23.png\" /></p>\n<p>Pretty much all of these things are design flaws, even something as simple as a SQL injection, right? It's like you've designed that API endpoint to allow the user to do that. And you can pick those things up at the design phase through better practices around security, but also through understanding the risks that you're potentially introducing.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.24.png\" /></p>\n<p>Huge, huge example here from November last year is LastPass. I link at the end to all of the examples and the LastPass security incident section on Wikipedia is probably longer than the rest of the article combined. It's huge.</p>\n<p>The issue that they had and what I would definitely classify as bad design in 2022 is someone got in and downloaded a whole bunch of backups. Backups of customer password vaults. And you would think, that's not the end of the world. They're encrypted with my master password or with my password that I've supplied to sort of add into the encryption key...</p>\n<p>The design flaw that they had was that only the passwords in the vault were encrypted. So now the attackers have a massive list of username / email address and account and where you have accounts based on what they were able to get out of those backups.</p>\n<p>And then there was a secondary design flaw which makes things even worse, which is effectively that if you hadn't changed your master password in the last few years, then it had only gone through a thousand rounds of hashing with their hashing algorithm, which meant that they were quite easy to crack.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.25.png\" /></p>\n<p>Next on the list, security misconfiguration, which is just like applications that are improperly secured because of a misconfiguration.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.26.png\" /></p>\n<p>Classic one in the web development world is like MongoDB that's open to the internet and it can grab everything out of it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.27.png\" />\nThis is also things where you've missed steps in like your go-live list or the hardening documentation of a piece of software that you're adding into your infrastructure.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.28.png\" />\nAnd also situations where you might accidentally deploy to production with development configs. The example I used a couple of years ago when I did a presentation about this was like Twitter deploying with source maps and the full unmodified source into production and things like that. Not something that you necessarily want do when you're a company that size.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.29.png\" /></p>\n<p>Another potential example here is features that aren't being used, features that are enabled that aren't being used that increase the attack surface. So that's enabling things that are still a work in progress or haven't been properly secured.</p>\n<p>That kind of goes into security by design and baking in security from day zero to make sure that when you enable something or if something gets accidentally enabled, you're not increasing the attack surface.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.30.png\" /></p>\n<p>An example here, and this has hit companies here in Australia, is this article from Krebs about how many public Salesforce sites are leaking private data.</p>\n<p>Effectively, there's a default configuration with public Salesforce sites that if you allow anonymous users to write data, then those anonymous users are able to read data as well, including data submitted by other anonymous users. So if you spin up a little site to just do a quiz or get some feedback from people or something like that, the anonymous users are able to just change the URL and see all of their responses.</p>\n<p>That's like the default configuration and this has hit banks and healthcare providers and government agencies who just pay consultants a heap of money to deploy a Salesforce site for something and then it doesn't get secured properly.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.31.png\" /></p>\n<p>Vulnerable and outdated components.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.32.png\" /></p>\n<p>So applications using components with known security vulnerabilities, you probably have all seen lthe of Dependabot and things like that before to detect vulnerabilities that are out of date and in particular detect vulnerabilities that have known security issues, which you need to update.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.33.png\" /></p>\n<p>This one will cover both accidental vulnerabilities and malicious changes. So in the case of open source projects, I suppose generally developers aren't intending to introduce vulnerabilities, so it's an accidental vulnerability, but malicious changes definitely do happen.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.34.png\" /></p>\n<p>When a malicious change is specifically targeting a set of users, that's become known as a supply chain attack where someone is specifically targeting you by modifying a dependency in your supply chain. And that's something that we've seen a lot of in the last three or four years.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.35.png\" /></p>\n<p>The example here is the node IPC library. In March 2022 after the Russian invasion of Ukraine, the developer updated that library to just delete files if you happen to install it from within Russia. We might support that action but it's something that you don't want to accidentally run in your build pipeline or on a build server or in your production environment where someone's package that they've updated deletes a bunch of files off of your computer.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.36.png\" /></p>\n<p>Identification and authentication failures which is allowing the wrong user to authenticate to a system.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.37.png\" /></p>\n<p>And that might be a malicious user or it might just be a user who has logged into one system and gets access to another system unintentionally. This covers things like account enumeration, which is something that I've seen a bunch of in the past with companies that I've worked for where attackers have just tried to log in with a whole bunch of leaked credentials.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.38.png\" /></p>\n<p>Account enumeration becomes a big deal for companies when you allow customers to have weak and previously leaked passwords. So being able to check against or being able to check password entropy when you're setting or changing the password is one way to combat this, but also checking against public databases of leaked passwords is a great action that we can do.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.39.png\" /></p>\n<p>This one also covers misconfiguration of authentication. So that's things like being able to bypass MFA. So if you've got a username and password for a customer, but the customer has MFA, hopefully that stops the attacker from being able to log in, but there are vulnerabilities where you can figure out MFA bypasses. That's sort of one where you'd be joining multiple attacks together, but it's something that we do see in the wild. That's what happened to Uber when they had one of their employees get hacked and they bypassed MFA to get access to their network and then found PowerShell scripts full of tokens that had access to customer data.</p>\n<p>OAuth scope creep. So that's where when someone logs in via OAuth and the attacker changes the scopes that are given. So you're logging in with a proper account, but you end up generating a token that has more privilege than you're expecting.</p>\n<p>And then unverified user registrations, which is something that I'm sure we are handling quite well, but it's situations where a user is able to register a new account, but they're not supposed to be.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.40.png\" /></p>\n<p>The example here is not really that much of an example, but if you haven't seen the Have I Been Pwned website, I linked to it at the end and I definitely recommend to go and have a look and enter your personal email address. For myself, my email address is in 19 data breaches on the site. Everyone's details are on the internet and we just have to deal with that.</p>\n<p>Using MFA and unique passwords is the best way to combat data breaches like these.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.41.png\" /></p>\n<p>Software and data integrity failures</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.42.png\" /></p>\n<p>So this was another one that was introduced in 2021 and it's about pipelines and assuming that the build that you just tested and built on your like build environment is actually what ends up being deployed.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.43.png\" /></p>\n<p>This also covers using dependencies from third parties without verifying the contents of them. So when we find a great third party library to do something, do we actually go and have a look at the source code and make sure that it's not doing something stupid?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.44.png\" /></p>\n<p>And then also this covers allowing untrusted code into like your ecosystem. So that's whether it's a dependency that you added or a new component that you're putting into your system. How much do you trust that piece of code?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.45.png\" /></p>\n<p>I'm not going to go into too much detail here about the SolarWinds attack because it's pretty old now, but the SolarWinds hack was a hack by Russian government hackers really that attacked a whole bunch of US companies and government agencies by updating the firmware on a network device. And the network device wasn't properly checking the signature of the firmware before updating. And then they were just sniffing all the traffic. It's definitely one to go and read about - there are books written about this hack. It's a really great one to dive deep into.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.46.png\" /></p>\n<p>Next up is security logging and monitoring failures.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.47.png\" /></p>\n<p>So this one covers not having enough information to investigate an issue. So when a security incident does occur, do you have enough information to figure out what the attacker actually had access to, how they got in, what customer information was exposed and those sorts of things?</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.48.png\" /></p>\n<p>And then it also covers logging too much information. So if the attacker does get in and all they've got access to is your logs, but they're able to scrape your logs for customer information and passwords, that would be bad.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.49.png\" /></p>\n<p>An example of this, probably more the former, but could also end up being the latest Latitude Pay hack earlier this year, where initially they came out and announced that they'd been attacked and they think about 15,000 customer records had been accessed. And then a week later, it was 300,000. And then two weeks after that, it was seven or 8 million people. And that's just an example of they didn't have the information at hand to understand the impact level of the incident. And that sort of really dictates how you handle an incident like that.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.50.png\" /></p>\n<p>Lucky last on the list is server-side request forgery. It's kind of an odd one on the list here because it's very specific. And I think if you look at the OWASP Top 10 page, this one was added through a community survey. It is a really important vulnerability to understand.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.51.png\" /></p>\n<p>SSRF is effectively allowing your server to make requests to a resource provided by a user. And you see that manifest itself in things like making requests to reveal metadata about the service.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.52.png\" /></p>\n<p>A common attack is to make requests to the AWS metadata IP address from screenshot services. That would dump out a screenshot of the JSON file that includes the AWS tokens for that service and things like that.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.53.png\" /></p>\n<p>You can use this to trick servers into mining cryptocurrencies and stuff like that. So if you've got a form that accepts a URL and you enter a URL that's got a cryptocurrency miner, maybe that will just sit there and do that forever.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.54.png\" /></p>\n<p>The couple of examples here. So this URL, if anyone in the chat can tell me what that's actually gonna access, I'd love to know.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.55.png\" /></p>\n<p>And this URL, if anyone knows what that one accesses, both perfectly valid URLs and both things that you'll see in a pen test, I think.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.56.png\" /></p>\n<p>And the example here is this one from a hacker named Orange. I've linked to it at the end, but they basically took a pretty simple SSRF in GitHub Enterprise's handling of webhooks and turned that into a remote code exploit in Memcached within the GitHub Enterprise deployment. And got tens of thousands of dollars from the GitHub bug bounty for what was effectively just a really simple SSRF, what began as a really simple SSRF attack.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.57.png\" /></p>\n<p>Well, I'm 54 seconds over, but here's my super quick wrap up.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.58.png\" /></p>\n<p>The OWASP Top 10 is amazing. You should go and read it. It's highly, highly accessible. It's super straightforward to read through, but it's really only the first 10 of heaps of issues that we have to care about as web developers. So hopefully we can keep talking about this stuff more in the future.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.59.png\" /></p>\n<p>The advice that I want to leave everyone with is really just to think about security as early as possible during the planning and design phase of the work that we're doing and make sure that it's something that we're considering. And that's it.</p>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.60.png\" /></p>\n<p>Resources if you want to learn more</p>\n<ul>\n<li><a href=\"https://owasp.org/\">OWASP</a> (<a href=\"https://owasp.org/www-project-top-ten/\">Top 10</a>, <a href=\"https://cheatsheetseries.owasp.org/\">Cheat Sheet Series</a>, <a href=\"https://owasp.org/www-project-web-security-testing-guide/stable/\">Testing Guide</a>)</li>\n<li><a href=\"https://www.pentesterlab.com/bootcamp\">Pentester Labs Bootcamp</a></li>\n<li><a href=\"https://www.picoctf.org/\">PicoCTF</a></li>\n<li><a href=\"https://risky.biz/\">Risky Business</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.61.png\" /></p>\n<p>Exposure links</p>\n<ul>\n<li><a href=\"https://verse.systems/blog/post/2022-09-25-optus-breach/\">Optus breach details</a></li>\n<li><a href=\"https://github.blog/2023-03-23-we-updated-our-rsa-ssh-host-key/\">Github RSA key leak</a></li>\n<li><a href=\"https://xkcd.com/327/\">Exploits of a Mom</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/LastPass#Security_incidents\">Lastpass Security Incidents</a></li>\n<li><a href=\"https://krebsonsecurity.com/2023/04/many-public-salesforce-sites-are-leaking-private-data/\">Salesforce public sites</a></li>\n<li><a href=\"https://www.theregister.com/2022/03/18/protestware_javascript_node_ipc/\">node-ipc updated to support Ukraine</a></li>\n<li><a href=\"https://haveibeenpwned.com\">Have I Been Pwned?</a></li>\n<li><a href=\"https://www.wired.com/story/russia-solarwinds-hack-roundup/\">Solarwinds</a> (<a href=\"https://archive.md/3RizK\">non-paywalled link</a>)</li>\n<li><a href=\"https://ia.acs.org.au/article/2023/latitude-breach-just-got-much-worse.html\">Latitude breach just got much worse</a></li>\n<li><a href=\"http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html\">Github SSRF Exploit Chain</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://media.brntn.me/owasp-top10.62.png\" /></p>",
    "content": null,
    "pub_date": "2023-08-31T14:00:00Z",
    "upd_date": "2023-08-31T14:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:04.782Z",
    "updated": "2023-10-09T09:35:04.782Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 119,
  "fields": {
    "feed": 7,
    "title": "How I use Django's messages framework",
    "author": null,
    "url": "https://brntn.me/blog/how-i-use-djangos-messages-framework/",
    "image_url": "https://media.brntn.me/postie/2d83f82f.png",
    "description": "<!-- How I use Django's messages framework  -->\n<p><img alt=\"Screenshot of four messages displayed on a webpage\" src=\"https://media.brntn.me/postie/2d83f82f.png\" /></p>\n<p>This is just a quick post to share a few code snippets that I find useful when dealing with Django's <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/messages/\">messages framework</a>.</p>\n<p>Have you noticed that when you start a new Django project <code>django.contrib.messages</code> is included in your INSTALLED_APPS?\nThis is Django's lightweight framework for showing one-time notifications to users.</p>\n<p>&quot;One-time&quot; describes one off the messages framework's key features: once a message has been displayed to the user it will be dismissed and not displayed again.\nI use this all the time to display success and error messages to users in simple Django applications.</p>\n<p>Out of the box, messages supports the five standard levels of criticality (similar to Python's logging framework): DEBUG, INFO, SUCCESS, WARNING, ERROR.\nThe <a href=\"https://docs.djangoproject.com/en/dev/ref/settings/#std-setting-MESSAGE_LEVEL\"><code>MESSAGE_LEVEL</code></a> setting is used to specify the minimum level to display – by default Django will show INFO and above.</p>\n<p>When processing a request you can add a message with a snippet like:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">messages</span>\n\n<span class=\"n\">messages</span><span class=\"o\">.</span><span class=\"n\">add_message</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">messages</span><span class=\"o\">.</span><span class=\"n\">SUCCESS</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Rating created successfully.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n<p>The required middleware (<code>SessionMiddleware</code>) and template context processor (<code>django.contrib.messages.context_processors.messages</code>) are also installed by default.\nThis means that a <code>messages</code> variable it available in your template to access this message.</p>\n<p>I insert this HTML snippet into by base template where I want messages to be shown:</p>\n<div class=\"highlight\"><pre><span></span>{% if messages %}\n  <span class=\"p\">&lt;</span><span class=\"nt\">ul</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;messages&quot;</span><span class=\"p\">&gt;</span>\n    {% for message in messages %}\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"err\">{%</span> <span class=\"na\">if</span> <span class=\"na\">message</span><span class=\"err\">.</span><span class=\"na\">tags</span> <span class=\"err\">%}</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;{{ message.tags }}&quot;</span><span class=\"err\">{%</span> <span class=\"na\">endif</span> <span class=\"err\">%}</span><span class=\"p\">&gt;</span>{{ message }}<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    {% endfor %}\n  <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n{% endif %}\n</pre></div>\n<p>It uses a basic semantic structure to output the messages.\nTurns out that even though I've been copying this snippet from project to project for the last few years, this is <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/messages/#displaying-messages\">straight out of the documentation</a>.</p>\n<p>CSS classes will be used to change the style of the different message types.\nThe colours below are from the <a href=\"https://yeun.github.io/open-color/\">open-color</a> project.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">list-style</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">none</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">margin</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">padding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">padding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">width</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"kt\">%</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">line-height</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">2.0</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">info</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">debug</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#d0ebff</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">success</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#b2f2bb</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">message</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">warning</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#ffec99</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#ffe3e3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n<p>Combining these two snippets gives me a quick and easy way to give success and failure notifications to users.\nThe CSS provides some basic styling that can be extended on a per-project basis with some additional global styles.</p>",
    "summary": "<!-- How I use Django's messages framework  -->\n<p><img alt=\"Screenshot of four messages displayed on a webpage\" src=\"https://media.brntn.me/postie/2d83f82f.png\" /></p>\n<p>This is just a quick post to share a few code snippets that I find useful when dealing with Django's <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/messages/\">messages framework</a>.</p>\n<p>Have you noticed that when you start a new Django project <code>django.contrib.messages</code> is included in your INSTALLED_APPS?\nThis is Django's lightweight framework for showing one-time notifications to users.</p>\n<p>&quot;One-time&quot; describes one off the messages framework's key features: once a message has been displayed to the user it will be dismissed and not displayed again.\nI use this all the time to display success and error messages to users in simple Django applications.</p>\n<p>Out of the box, messages supports the five standard levels of criticality (similar to Python's logging framework): DEBUG, INFO, SUCCESS, WARNING, ERROR.\nThe <a href=\"https://docs.djangoproject.com/en/dev/ref/settings/#std-setting-MESSAGE_LEVEL\"><code>MESSAGE_LEVEL</code></a> setting is used to specify the minimum level to display – by default Django will show INFO and above.</p>\n<p>When processing a request you can add a message with a snippet like:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">messages</span>\n\n<span class=\"n\">messages</span><span class=\"o\">.</span><span class=\"n\">add_message</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">messages</span><span class=\"o\">.</span><span class=\"n\">SUCCESS</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Rating created successfully.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n<p>The required middleware (<code>SessionMiddleware</code>) and template context processor (<code>django.contrib.messages.context_processors.messages</code>) are also installed by default.\nThis means that a <code>messages</code> variable it available in your template to access this message.</p>\n<p>I insert this HTML snippet into by base template where I want messages to be shown:</p>\n<div class=\"highlight\"><pre><span></span>{% if messages %}\n  <span class=\"p\">&lt;</span><span class=\"nt\">ul</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;messages&quot;</span><span class=\"p\">&gt;</span>\n    {% for message in messages %}\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"err\">{%</span> <span class=\"na\">if</span> <span class=\"na\">message</span><span class=\"err\">.</span><span class=\"na\">tags</span> <span class=\"err\">%}</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;{{ message.tags }}&quot;</span><span class=\"err\">{%</span> <span class=\"na\">endif</span> <span class=\"err\">%}</span><span class=\"p\">&gt;</span>{{ message }}<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    {% endfor %}\n  <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n{% endif %}\n</pre></div>\n<p>It uses a basic semantic structure to output the messages.\nTurns out that even though I've been copying this snippet from project to project for the last few years, this is <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/messages/#displaying-messages\">straight out of the documentation</a>.</p>\n<p>CSS classes will be used to change the style of the different message types.\nThe colours below are from the <a href=\"https://yeun.github.io/open-color/\">open-color</a> project.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">list-style</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">none</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">margin</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">padding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">padding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">width</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"kt\">%</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">line-height</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">2.0</span><span class=\"kt\">em</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">info</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">debug</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#d0ebff</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">success</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#b2f2bb</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">message</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">warning</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#ffec99</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">.</span><span class=\"nc\">messages</span><span class=\"w\"> </span><span class=\"nt\">li</span><span class=\"p\">.</span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background-color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#ffe3e3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n<p>Combining these two snippets gives me a quick and easy way to give success and failure notifications to users.\nThe CSS provides some basic styling that can be extended on a per-project basis with some additional global styles.</p>",
    "content": null,
    "pub_date": "2023-08-30T00:30:04Z",
    "upd_date": "2023-08-30T00:30:04Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:06.492Z",
    "updated": "2023-10-09T09:35:06.492Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 120,
  "fields": {
    "feed": 7,
    "title": "August 28, 2023",
    "author": null,
    "url": "https://brntn.me/notes/LPqehFyLwx4/",
    "image_url": "",
    "description": "<div class=\"h-review\">\n                <p>\n                    📺 Watched\n                    <span class=\"h-item\">\n                        <a class=\"p-name u-url u-watch-of\" href=\"https://www.imdb.com/title/tt0472954/\">It's Always Sunny in Philadelphia (Season 16)</a>.\n            ★★★★</span>.\n                </p><p><img alt=\"Poster for It\" src=\"https://media.brntn.me/postie/a64be74c.jpg\" /></p></div>",
    "summary": "<div class=\"h-review\">\n                <p>\n                    📺 Watched\n                    <span class=\"h-item\">\n                        <a class=\"p-name u-url u-watch-of\" href=\"https://www.imdb.com/title/tt0472954/\">It's Always Sunny in Philadelphia (Season 16)</a>.\n            ★★★★</span>.\n                </p><p><img alt=\"Poster for It\" src=\"https://media.brntn.me/postie/a64be74c.jpg\" /></p></div>",
    "content": null,
    "pub_date": "2023-08-28T03:17:02Z",
    "upd_date": "2023-08-28T03:17:02Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:08.268Z",
    "updated": "2023-10-09T09:35:08.268Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 121,
  "fields": {
    "feed": 6,
    "title": "RegisterFields in Django",
    "author": "Tim Schilling (schillingt@better-simple.com)",
    "url": "https://www.better-simple.com/django/2023/10/03/registerfields-in-django/",
    "image_url": "https://www.better-simple.com/assets/images/2023/09/beef_roland_looking_out_window.jpg",
    "description": "An explanation of a Django model field that returns an instance of a class depending on a key.",
    "summary": "An explanation of a Django model field that returns an instance of a class depending on a key.",
    "content": "<p>A common (in my opinion) complex pattern in Django is storing a field that identifies what\nlogic should be used. This tends to happen when you have logic that’s similar about how\nit’s called and what it does, but how they function is significantly different.</p>\n\n<p>An example of this may be a notification system where it can send an SMS or an email. They both\nrequire message content and a recipient, but the mechanisms for the actual sending along with\ngenerating the complete payload are dramatically different. With Django Cairn this pattern\nmay be necessary to fetch content from different sources. A blog with an RSS feed has a different\nAPI than a YouTube channel, but both have lists of content and some way to find the new content.\nThis post seeks to explain this concept and provide some sample code to use in your project.</p>\n\n<p>In an ideal world, we would have a model field that when accessed returns an instance of a\ncustom class<sup id=\"fnref:1\"><a class=\"footnote\" href=\"https://www.better-simple.com/django/2023/10/03/registerfields-in-django/#fn:1\" rel=\"footnote\">1</a></sup>.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SourceBackend</span><span class=\"p\">:</span>\n    <span class=\"s\">\"\"\"This is an interface for defining how each Source backend should work\"\"\"</span>\n    <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">Source</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">source</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"s\">\"\"\"\n        Every subclass should define an update class.\n\n        An abstract base class is probably the better choice here.\n        \"\"\"</span>\n        <span class=\"k\">raise</span> <span class=\"nb\">NotImplementedError</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RSSBackend</span><span class=\"p\">(</span><span class=\"n\">SourceBackend</span><span class=\"p\">):</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s\">\"rss\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Do something based on source.url and RSS\n</span>        <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">YouTubeBackend</span><span class=\"p\">(</span><span class=\"n\">SourceBackend</span><span class=\"p\">):</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s\">\"youtube\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Do something based on source.url and YouTube's API\n</span>        <span class=\"k\">pass</span>\n\n<span class=\"c1\"># Define a mapping to allow look ups for each backend\n</span><span class=\"n\">backend_register</span> <span class=\"o\">=</span> <span class=\"n\">Register</span><span class=\"p\">()</span>\n<span class=\"n\">backend_register</span><span class=\"p\">[</span><span class=\"n\">RSSBackend</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">RSSBackend</span>\n<span class=\"n\">backend_register</span><span class=\"p\">[</span><span class=\"n\">YouTubeBackend</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">YouTubeBackend</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Source</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"s\">\"\"\"This is an example model for Django Cairn for fetching data\"\"\"</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">URLField</span><span class=\"p\">()</span>\n    <span class=\"n\">backend_key</span><span class=\"p\">,</span> <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">RegisterField</span><span class=\"p\">.</span><span class=\"n\">with_property</span><span class=\"p\">(</span><span class=\"n\">register</span><span class=\"o\">=</span><span class=\"n\">backend_register</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n\n    \n<span class=\"c1\"># This is what we're hoping to achieve:\n</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">Source</span><span class=\"p\">.</span><span class=\"n\">objects</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">backend_key</span> <span class=\"o\">==</span> <span class=\"s\">\"rss\"</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">RSSBackend</span><span class=\"p\">)</span>\n<span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<p>You probably noticed the <code class=\"language-plaintext highlighter-rouge\">RegisterField</code> class that’s not defined. Good catch. That’s what we’ll\nbe talking about for the most part, but let me finish setting up our scenario.</p>\n\n<p>The class <code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> is an interface that defines how it should be called. It’s fairly straightforward only containing the <code class=\"language-plaintext highlighter-rouge\">__init__</code> and <code class=\"language-plaintext highlighter-rouge\">update</code> methods. Effectively, as long as you can get it\na <code class=\"language-plaintext highlighter-rouge\">Source</code> instance the backend will be able to fetch the data for it. Since each content source could\nrequire an entirely different set of models to store a new post/video/[content], <code class=\"language-plaintext highlighter-rouge\">update</code> needs to stay\ngeneric. The <code class=\"language-plaintext highlighter-rouge\">key</code> attribute will eventually be used to identify this class in the database and go into\n<code class=\"language-plaintext highlighter-rouge\">backend_key</code>. We’ll talk about it more later though, but you may already see how everything will come\ntogether.</p>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">RSSBackend</code> through the magic of handwaving is super simple. I didn’t define the <code class=\"language-plaintext highlighter-rouge\">update</code> method\nhere because it’s irrelevant to what we’re doing. We can make the assumption it’ll do whatever it’s\nsupposed to do when it’s called. You can see that <code class=\"language-plaintext highlighter-rouge\">RSSBackend.key</code> is set to <code class=\"language-plaintext highlighter-rouge\">\"rss\"</code> and we’re using\ninheritance to define the <code class=\"language-plaintext highlighter-rouge\">__init__</code> method.</p>\n\n<p>There is another custom class called <code class=\"language-plaintext highlighter-rouge\">Register</code>. This is effectively a dictionary with a helper function.\nI’ll share the code for that later. For now, we add our backend classes to a specific instance of <code class=\"language-plaintext highlighter-rouge\">Register</code>\nand pass that to <code class=\"language-plaintext highlighter-rouge\">RegisterField</code>.</p>\n\n<p>This brings us to the sample code at the end of the block that demos what we’re hoping to achieve. The goal\nis to have a <code class=\"language-plaintext highlighter-rouge\">Source</code> instance that has a field called <code class=\"language-plaintext highlighter-rouge\">backend_key</code> whose value will match the relevant\n<code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> subclass’ <code class=\"language-plaintext highlighter-rouge\">key</code> attribute. In other words, if <code class=\"language-plaintext highlighter-rouge\">isinstance(source.backend, RSSBackend)</code>\nthen <code class=\"language-plaintext highlighter-rouge\">source.backend_key == \"rss\"</code>. Hopefully, you can see the power of this approach. The class\n<code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> could define many methods rather than just two. You also avoid having to litter your project\nwith various hook mappings to access the functionality you want.</p>\n\n<h2 id=\"implementation-details\">Implementation details</h2>\n\n<p>Let’s talk about <code class=\"language-plaintext highlighter-rouge\">Register</code> and <code class=\"language-plaintext highlighter-rouge\">RegisterField</code>. These are both utility classes that go hand-in-hand.\n<code class=\"language-plaintext highlighter-rouge\">Register</code> is straightforward; it has a single helper function <code class=\"language-plaintext highlighter-rouge\">from_value</code>:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">Register</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">key</span>\n        <span class=\"k\">raise</span> <span class=\"nb\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"Value not found: %r\"</span> <span class=\"o\">%</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>If you have a large amout of elements you may want to consider changing <code class=\"language-plaintext highlighter-rouge\">Register</code>’s implementation to\ninherit from <code class=\"language-plaintext highlighter-rouge\">collections.UserDict</code> and maintain a separate value to pair data structure. However, if\nyou are going to have less than 100 elements, the above is fine.</p>\n\n<p>The concept of a register is fairly common. It’s a lookup to determine what value (in our case functionality)\nto use based on a key. The register needs to be populated at the project level. You should not add items\nto the register dynamically.</p>\n\n<p>Let’s assume this is our project structure.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>myproject\n├── config\n│   ├── settings.py\n│   ├── urls.py\n│   ├── asgi.py\n│   └── wsgi.py\n│\n├── content\n│   ├── backends\n│   │   ├── rss.py      # RSSBackend is defined here\n│   │   └── youtube.py  # YouTubeBackend is defined here\n│   │\n│   ├── apps.py\n│   ├── backend.py      # SourceBackend, backend_register are defined here\n│   ├── register.py     # Register, RegisterField are defined here\n│   ├── models.py\n│   ├── views.py\n│   └── urls.css\n│\n├── README.md\n└── manage.py\n</code></pre></div></div>\n\n<p>The challenge now becomes how to register the various source backends into the <code class=\"language-plaintext highlighter-rouge\">backend_register</code>\ninstance. We could define a decorator similar to how the Django administration site can register\n<code class=\"language-plaintext highlighter-rouge\">ModelAdmin</code> classes or how signal receivers are defined. However, let’s start by keeping it simple\nand registering the backends in <code class=\"language-plaintext highlighter-rouge\">myproject.content.apps.ContentAppConfig.ready()</code>:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># myproject/content/backend.py\n</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.register</span> <span class=\"kn\">import</span> <span class=\"n\">Register</span>\n\n\n<span class=\"n\">backend_register</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">SourceBackend</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Register</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SourceBackend</span><span class=\"p\">:</span>\n    <span class=\"s\">\"\"\"This is an interface for defining how each Source backend should work\"\"\"</span>\n    <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">source</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"s\">\"\"\"\n        Every subclass should define an update class.\n\n        An abstract base class is probably the better choice here.\n        \"\"\"</span>\n        <span class=\"k\">raise</span> <span class=\"nb\">NotImplementedError</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># myproject/content/apps.py\n</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.backend</span> <span class=\"kn\">import</span> <span class=\"n\">backend_register</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.backends.rss</span> <span class=\"kn\">import</span> <span class=\"n\">RSSBackend</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.backends.youtube</span> <span class=\"kn\">import</span> <span class=\"n\">YouTubeBackend</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ContentAppConfig</span><span class=\"p\">(</span><span class=\"n\">AppConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"myproject.content\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">ready</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">backend_register</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n            <span class=\"n\">RSSBackend</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">RSSBackend</span><span class=\"p\">,</span>\n            <span class=\"n\">YouTubeBackend</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">YouTubeBackend</span><span class=\"p\">,</span>\n        <span class=\"p\">})</span>\n</code></pre></div></div>\n\n<p>Cool, our <code class=\"language-plaintext highlighter-rouge\">backend_register</code> now will contain records for each of our backend integrations\nwhenever we access it.</p>\n\n<h2 id=\"registerfield-explanation\"><code class=\"language-plaintext highlighter-rouge\">RegisterField</code> explanation</h2>\n\n<p>The next step is to use this register in a field class to be used on a model. Here’s all the\ncode. The explanations are in the comments. My hope is that everything is clear enough except\nfor <code class=\"language-plaintext highlighter-rouge\">with_property</code>. If something is confusing, let me know.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># myproject/content/register.py\n</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Register</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n    <span class=\"p\">...</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RegisterField</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">):</span>\n    <span class=\"s\">\"\"\"Simple key-value serialization and storage in the database.\"\"\"</span>\n\n    <span class=\"c1\"># A RegisterField must have an option selected. If you wish to have a\n</span>    <span class=\"c1\"># no-op option, then you'll need to create a sentinel value.\n</span>    <span class=\"n\">empty_strings_allowed</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"p\">:</span> <span class=\"n\">Register</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Require a new keyword argument named register.\n</span>        <span class=\"c1\"># Store it on the instance for later use.\n</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">register</span> <span class=\"o\">=</span> <span class=\"n\">register</span>\n        <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"o\">@</span><span class=\"nb\">classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">with_property</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"p\">:</span> <span class=\"n\">Register</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"s\">\"\"\"\n        Construct the field and create a wrapping property.\n        \n        This allows us to define the register key as the true CharField\n        but also provide the register value as a property on the model.\n        \n        There may be another way to do this, but I found this works well\n        enough.\n        \n        Usage:\n        \n            class MyModel(models.Model):\n                key, instance = RegisterField.with_property(register=SomeRegister, max_length=64)\n\n        \"\"\"</span>\n        <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">cls</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"o\">=</span><span class=\"n\">register</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"o\">@</span><span class=\"nb\">property</span>\n        <span class=\"k\">def</span> <span class=\"nf\">prop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">register</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"k\">else</span> <span class=\"bp\">None</span>\n\n        <span class=\"o\">@</span><span class=\"n\">prop</span><span class=\"p\">.</span><span class=\"n\">setter</span>\n        <span class=\"k\">def</span> <span class=\"nf\">prop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n            <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"p\">.</span><span class=\"n\">from_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">prop</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Remove dynamic choices to avoid constantly generating\n</span>        <span class=\"c1\"># new migrations.\n</span>        <span class=\"n\">kwargs</span><span class=\"p\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s\">\"choices\"</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Get the choices immediately before getting the form field\n</span>        <span class=\"c1\"># This allows the dynamic registration of elements in the register.\n</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">choices</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">formfield</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n</code></pre></div></div>\n\n<p>Assuming the <code class=\"language-plaintext highlighter-rouge\">__init__</code>, <code class=\"language-plaintext highlighter-rouge\">deconstruct</code> and <code class=\"language-plaintext highlighter-rouge\">formfield</code> all make sense, let’s move\nonto <code class=\"language-plaintext highlighter-rouge\">with_property</code>. This class method is designed to replace the typical usage of\n<code class=\"language-plaintext highlighter-rouge\">my_field = models.CharField()</code>. The end result is adding a register key field and a\nregister value property to your model instance.</p>\n\n<p>For example, if we have:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"k\">class</span> <span class=\"nc\">Source</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">backend_key</span><span class=\"p\">,</span> <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">RegisterField</span><span class=\"p\">.</span><span class=\"n\">with_property</span><span class=\"p\">(</span><span class=\"n\">register</span><span class=\"o\">=</span><span class=\"n\">backend_register</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n\n</code></pre></div></div>\n\n<p>When we fetch a <code class=\"language-plaintext highlighter-rouge\">Source</code> instance, we’ll be able to get both the register key (“rss” or “youtube”)\nas <code class=\"language-plaintext highlighter-rouge\">instance.backend_key</code> and the <code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> instance as <code class=\"language-plaintext highlighter-rouge\">instance.backend</code>.</p>\n\n<p>Expressed in code the following would be true:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">Source</span><span class=\"p\">.</span><span class=\"n\">objects</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">backend_key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s\">\"rss\"</span><span class=\"p\">,</span> <span class=\"s\">\"youtube\"</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"p\">(</span>\n    <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">RSSBackend</span><span class=\"p\">)</span>\n    <span class=\"ow\">or</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">YouTubeBackend</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n</code></pre></div></div>\n\n<p>The really neat thing about this is that if we want to change the backend of an instance\nwe can do so through either <code class=\"language-plaintext highlighter-rouge\">backend_key</code> or <code class=\"language-plaintext highlighter-rouge\">backend</code>:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">backend_key</span> <span class=\"o\">=</span> <span class=\"s\">\"rss\"</span>\n<span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">RSSBackend</span><span class=\"p\">()</span>\n\n</code></pre></div></div>\n\n<p>This is because of the inline <code class=\"language-plaintext highlighter-rouge\">prop</code>. The value when you access it is looked up from\nthe register each time. This implies that if you change <code class=\"language-plaintext highlighter-rouge\">backend_key</code> behind it, it will\nstill return the <code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> instance reflecting that change. Then because we have:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"o\">@</span><span class=\"n\">prop</span><span class=\"p\">.</span><span class=\"n\">setter</span>\n<span class=\"k\">def</span> <span class=\"nf\">prop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"p\">.</span><span class=\"n\">from_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n\n</code></pre></div></div>\n\n<p>We can change <code class=\"language-plaintext highlighter-rouge\">backend_key</code> by assigning a different <code class=\"language-plaintext highlighter-rouge\">SourceBackend</code> instance to\n<code class=\"language-plaintext highlighter-rouge\">instance.backend</code>. It will look up the key from the given <code class=\"language-plaintext highlighter-rouge\">SourceBackend</code>\ninstance and set <code class=\"language-plaintext highlighter-rouge\">backend_key</code> to that key.</p>\n\n<h2 id=\"so-what-does-this-all-mean\">So what does this all mean?</h2>\n\n<p>In short, it means we can do this:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">Source</span><span class=\"p\">.</span><span class=\"n\">objects</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p>A big credit to <a href=\"http://ryanhiebert.com/\">Ryan Hiebert</a> who implemented logic that I iterated on to get to this version. <a class=\"reversefootnote\" href=\"https://www.better-simple.com/django/2023/10/03/registerfields-in-django/#fnref:1\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>",
    "pub_date": "2023-10-03T00:00:00Z",
    "upd_date": "2023-10-03T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:09.005Z",
    "updated": "2023-10-09T09:35:09.005Z",
    "tags": [
      113,
      117,
      115,
      114,
      116
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 122,
  "fields": {
    "feed": 6,
    "title": "Descriptive Django Admin Search",
    "author": "Tim Schilling (schillingt@better-simple.com)",
    "url": "https://www.better-simple.com/django/2023/08/18/descriptive-django-admin-search/",
    "image_url": "https://www.better-simple.com/assets/images/2023/08/roland_intense_gaze.jpg",
    "description": "If you have people using the Django admin without knowing the code you can make their life easier by showing the fields that are actually being searched.",
    "summary": "If you have people using the Django admin without knowing the code you can make their life easier by showing the fields that are actually being searched.",
    "content": "<p>At my job we have a growing number of people solely focused on operations (they outnumber us devs!). One of them pointed\nout to me that she never knew when she could search for a tenant’s name in the search bar versus using the dropdown\n(<code class=\"language-plaintext highlighter-rouge\">list_filter</code>). It didn’t take me long to realize we have a critical usability issue in our application. We can support\nall this search functionality in the admin, but if a person doesn’t know what it can do they can’t use it.</p>\n\n<p><strong>Problem:</strong> Staff doesn’t know what the search does.</p>\n\n<p><strong>Solution:</strong> List the fields that are being searched.</p>\n\n<p>Composition to the rescue!<sup id=\"fnref:1\"><a class=\"footnote\" href=\"https://www.better-simple.com/django/2023/08/18/descriptive-django-admin-search/#fn:1\" rel=\"footnote\">1</a></sup></p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">DescriptiveSearchMixin</span><span class=\"p\">:</span>\n    <span class=\"s\">\"\"\"\n    Add the verbose model and field names to the search help text.\n\n    This will include the model and field name for each search field.\n    If a relationship is more than one related model, it will only display\n    the last model of the relationship.\n\n    If a ModelAdmin class has a value for search_help_text, the descriptive\n    search text will not be added.\n    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_search_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"s\">\"\"\"\n        Override get_search_fields to dynamically set search_help_text\n        \n        This is potentially problematic if you're doing something more complicated\n        with the admin already. In my case the search functionality is vanilla so this\n        works.\n        \"\"\"</span>\n        <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">get_search_fields</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">search_fields</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">search_help_text</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">field_strings</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">search_field</span> <span class=\"ow\">in</span> <span class=\"n\">search_fields</span><span class=\"p\">:</span>\n                <span class=\"n\">current_model_meta</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">model</span><span class=\"p\">.</span><span class=\"n\">_meta</span>\n                <span class=\"k\">if</span> <span class=\"s\">\"__\"</span> <span class=\"ow\">in</span> <span class=\"n\">search_field</span><span class=\"p\">:</span>\n                    <span class=\"n\">field_path</span> <span class=\"o\">=</span> <span class=\"n\">search_field</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">\"__\"</span><span class=\"p\">)</span>\n                    <span class=\"c1\"># Follow the relationships down to the last path.\n</span>                    <span class=\"k\">for</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"n\">field_path</span><span class=\"p\">:</span>\n                        <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">current_model_meta</span><span class=\"p\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s\">\"related_model\"</span><span class=\"p\">):</span>\n                            <span class=\"k\">break</span>\n                        <span class=\"n\">current_model_meta</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">related_model</span><span class=\"p\">.</span><span class=\"n\">_meta</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">current_model_meta</span><span class=\"p\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">search_field</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Include the human-readable version of the model and field name.\n</span>                <span class=\"n\">field_strings</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s\">\"</span><span class=\"si\">{</span><span class=\"n\">current_model_meta</span><span class=\"p\">.</span><span class=\"n\">verbose_name</span><span class=\"p\">.</span><span class=\"n\">title</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s\">'s </span><span class=\"si\">{</span><span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">verbose_name</span><span class=\"p\">.</span><span class=\"n\">title</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s\">\"</span>\n                <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">search_help_text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s\">'Search by: </span><span class=\"si\">{</span><span class=\"s\">\", \"</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">field_strings</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s\">'</span>\n        <span class=\"k\">return</span> <span class=\"n\">search_fields</span>\n</code></pre></div></div>\n\n<p>To use this, simply inherit from the mixin class:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"kn\">from</span> <span class=\"nn\">my_wonderful_app.models</span> <span class=\"kn\">import</span> <span class=\"n\">Plan</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PlanAdmin</span><span class=\"p\">(</span><span class=\"n\">DescriptiveSearchMixin</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"name\"</span><span class=\"p\">,</span> <span class=\"s\">\"creator__name\"</span><span class=\"p\">,</span> <span class=\"s\">\"creator__email\"</span><span class=\"p\">,</span> <span class=\"s\">\"organization__name\"</span><span class=\"p\">]</span>\n\n</code></pre></div></div>\n\n<p>Now when you browse to <code class=\"language-plaintext highlighter-rouge\">/admin/plan/</code> you’ll see:</p>\n\n<blockquote>\n  <p>Search by: Plan’s Name, User’s Name, User’s Email, Organization’s Name</p>\n</blockquote>\n\n<p>At the end of the day it doesn’t matter what you build if nobody knows about it. Be better than me at informing your\nusers what’s possible!</p>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p>I can’t pass up a opportunity to hop on the Django zeitgeist (See <a href=\"https://406.ch/writing/composition-over-inheritance-the-case-for-function-based-views/\">Matthias’ post</a> and <a href=\"https://noumenal.es/posts/musings-on-classes/VrP/\">Carlton’s post</a> on composition) <a class=\"reversefootnote\" href=\"https://www.better-simple.com/django/2023/08/18/descriptive-django-admin-search/#fnref:1\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>",
    "pub_date": "2023-08-18T10:50:00Z",
    "upd_date": "2023-08-18T10:50:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:09.353Z",
    "updated": "2023-10-09T09:35:09.353Z",
    "tags": [
      113
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 123,
  "fields": {
    "feed": 6,
    "title": "Professional Djangonaut skills",
    "author": "Tim Schilling (schillingt@better-simple.com)",
    "url": "https://www.better-simple.com/django/2023/08/18/pro-djangonaut-skills/",
    "image_url": "https://www.better-simple.com/assets/images/2023/08/beef-teeth-roland-above.jpg",
    "description": "A brief description of various skills, experiences and technologies I feel that a professional Djangonaut has.",
    "summary": "A brief description of various skills, experiences and technologies I feel that a professional Djangonaut has.",
    "content": "<p>A common question I see on the Django Discord<sup id=\"fnref:1\"><a class=\"footnote\" href=\"https://www.better-simple.com/django/2023/08/18/pro-djangonaut-skills/#fn:1\" rel=\"footnote\">1</a></sup> is “what do I need to know to get a job in Django?” This is a\ndifficult\nthing to answer. The ultimate answer is, “whatever your employer wants you to know when they hire you.” But that’s avoiding\nthe underlying question. I believe these people are asking what should I know to give myself the best chance at getting\nhired at a company that primarily uses Django. I think that’s something I can provide some guidance on. Or at the very\nleast try to start the conversation so that we as a community can help the new folks out. So here are my list of skills:</p>\n\n<ul>\n  <li><strong>Learn how to deploy</strong>\n    <ul>\n      <li>Static files</li>\n      <li>Media files</li>\n      <li><a href=\"https://sentry.io/\">Set up Sentry</a></li>\n      <li>Set up logging</li>\n    </ul>\n  </li>\n  <li><strong>Writing and running tests</strong>\n    <ul>\n      <li>Data setup</li>\n      <li>Unit vs integration</li>\n      <li>End to end</li>\n      <li>Test coverage</li>\n    </ul>\n  </li>\n  <li><strong>Debugging</strong>\n    <ul>\n      <li><a href=\"https://realpython.com/python-traceback/\">Reading a traceback</a></li>\n      <li>Importance of logging</li>\n      <li>Need of a production-like area</li>\n    </ul>\n  </li>\n  <li><strong>Digital citizenship</strong>\n    <ul>\n      <li>Asking questions</li>\n      <li><a href=\"https://www.pythondiscord.com/pages/guides/pydis-guides/helping-others/\">Answering questions</a></li>\n      <li>Filing tickets</li>\n    </ul>\n  </li>\n  <li><strong>Data modeling</strong>\n    <ul>\n      <li>Relationships</li>\n      <li>Generic foreign keys</li>\n      <li>Normal form levels</li>\n      <li>Real world conversions</li>\n    </ul>\n  </li>\n  <li><strong>Migrations</strong>\n    <ul>\n      <li>Schema vs <a href=\"https://docs.djangoproject.com/en/4.2/topics/migrations/#data-migrations\">data</a></li>\n      <li><a href=\"https://www.better-simple.com/django/2023/06/03/django-migrations-and-your-database/\">Deleting migrations</a></li>\n      <li>Zero downtime</li>\n    </ul>\n  </li>\n  <li><strong>Templates</strong>\n    <ul>\n      <li>Inheritance</li>\n      <li>Includes</li>\n      <li>Template tags and filters</li>\n    </ul>\n  </li>\n  <li><strong>Views</strong>\n    <ul>\n      <li>Auth and auth &gt; CRUD operation &gt; create template context &gt; render</li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/http/middleware/\">Middleware</a></li>\n    </ul>\n  </li>\n  <li><strong>Forms</strong>\n    <ul>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/forms/modelforms/\">Form vs model form</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/forms/validation/\">Custom validation</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/forms/renderers/#overriding-built-in-form-templates\">Form templates</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/forms/formsets/\">Formsets</a></li>\n    </ul>\n  </li>\n  <li><strong>Auth</strong>\n    <ul>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/auth/\">Authentication and authorization</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/auth/default/#permissions-and-authorization\">Permissions</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/auth/default/#groups\">Groups</a></li>\n      <li>Single sign on</li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/auth/customizing/#writing-an-authentication-backend\">Customize backend</a></li>\n    </ul>\n  </li>\n  <li><strong>ORM</strong>\n    <ul>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#select-related\">Select related</a>, <a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#prefetch-related\">Prefetch related</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#django.db.models.query.QuerySet.annotate\">Annotations</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/expressions/#subquery-expressions\">Subqueries</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#update-or-create\">Update or create</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#bulk-create\">Bulk create</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#bulk-update\">Bulk update</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/topics/db/transactions/#django.db.transaction.atomic\">Atomic Transactions</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/querysets/#select-for-update\">Select for update</a></li>\n      <li><a href=\"https://docs.djangoproject.com/en/4.2/ref/models/lookups/#query-expression\">Custom expressions for aggregates</a></li>\n    </ul>\n  </li>\n  <li><strong>Database</strong>\n    <ul>\n      <li>Explain analyze</li>\n      <li>Indexes</li>\n      <li>Constraints</li>\n      <li>Materialized views</li>\n    </ul>\n  </li>\n  <li><strong>Celery</strong>\n    <ul>\n      <li>Periodic tasks</li>\n      <li>Adhoc async tasks</li>\n      <li>Complex chains</li>\n      <li>Monitoring</li>\n    </ul>\n  </li>\n  <li><strong>Common web app features</strong>\n    <ul>\n      <li>Feature flags</li>\n      <li>User uploads</li>\n      <li>Inbound email</li>\n      <li>Webhooks</li>\n      <li>Reports</li>\n      <li>Notifications</li>\n    </ul>\n  </li>\n  <li><strong>Tricky Internet</strong>\n    <ul>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\">Cookies</a></li>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a></li>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP\">CSP</a></li>\n    </ul>\n  </li>\n  <li><strong>AJAX</strong>\n    <ul>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">fetch</a></li>\n      <li><a href=\"https://htmx.org/\">htmx</a></li>\n    </ul>\n  </li>\n  <li><strong>API</strong>\n    <ul>\n      <li><a href=\"https://www.django-rest-framework.org/\">DRF</a></li>\n      <li><a href=\"https://strawberry.rocks/\">GraphQL</a></li>\n      <li><a href=\"https://oauth.net/2/\">OAuth</a></li>\n    </ul>\n  </li>\n  <li><strong>Dev tools</strong>\n    <ul>\n      <li><a href=\"https://docs.github.com/en/get-started/getting-started-with-git\">Git</a></li>\n      <li><a href=\"https://docs.github.com/en/get-started/quickstart/hello-world\">GitHub</a></li>\n      <li><a href=\"https://github.com/psf/black\">Black</a></li>\n      <li><a href=\"https://flake8.pycqa.org/\">Flake8</a></li>\n      <li><a href=\"https://tox.wiki/en/4.9.0/\">Tox</a></li>\n      <li><a href=\"https://github.com/jazzband/django-debug-toolbar/\">Django Debug Toolbar</a></li>\n      <li><a href=\"https://github.com/django-extensions/django-extensions/\">Django Extensions</a></li>\n    </ul>\n  </li>\n  <li><strong>Reliability</strong>\n    <ul>\n      <li>Continuous integration</li>\n      <li>Database backups and restore</li>\n      <li>Set up APM</li>\n      <li>Set up observability</li>\n      <li>Set up <a href=\"https://deadmanssnitch.com\">site monitoring</a> and <a href=\"https://pagerduty.com\">alerting</a></li>\n    </ul>\n  </li>\n  <li><strong>Teamwork</strong>\n    <ul>\n      <li>Creating pull requests</li>\n      <li>Code reviews</li>\n      <li>Asking questions</li>\n      <li>Evaluating an idea</li>\n      <li>Estimating work</li>\n    </ul>\n  </li>\n</ul>\n\n<p>Disclaimers:</p>\n\n<ul>\n  <li>The order is somewhat structured, but ultimately doesn’t matter</li>\n  <li>It’s been a while since I’ve worked at a large company</li>\n  <li>I did a long stint of work as a freelancer with small companies or individuals</li>\n  <li>I have a formal education in Computer Engineering</li>\n  <li>My primary mission as an engineer is to deliver value</li>\n  <li>Edit: I entirely skipped frontend concerns outside of interacting with the backend</li>\n</ul>\n\n<p>I’m strongly considering turning this list into a syllabus and running a lab based course. The current version in my\nmind involves a 14-week course consisting of 3 hours of lectures a week and 3 hours of personal code review time. The\ntrouble is that my napkin math shows that this would be a full-time job for me which causes all sorts of problems.\nBut I feel very strongly that one-on-one mentorship and review dramatically increases a person’s engineering skills.\nIf this is something that you’d be interested in let me know. I’d like to kick the tires on the idea.</p>\n\n<p>If you thought this list was interesting, you may find my <a href=\"https://www.better-simple.com/unsung-developer-thoughts/\">Unsung Developer Thoughts</a> worth\nyour time as well.</p>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p><a href=\"https://discord.gg/xcRH6mN4fa\">Come say hi!</a> <a class=\"reversefootnote\" href=\"https://www.better-simple.com/django/2023/08/18/pro-djangonaut-skills/#fnref:1\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>",
    "pub_date": "2023-08-18T00:00:00Z",
    "upd_date": "2023-08-18T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:09.699Z",
    "updated": "2023-10-09T09:35:09.699Z",
    "tags": [
      113
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 124,
  "fields": {
    "feed": 5,
    "title": "How to Check Whether an Inline Fields Contains a Value with Obsidian Dataview",
    "author": null,
    "url": "https://www.bencodezen.io/blog/how-to-check-whether-an-inline-fields-contains-a-value-with-obsidian-dataview",
    "image_url": "",
    "description": "Recently, I came across a problem where I struggled to query notes with inline fields properly. And after searching high and low in the forums and docs, I figured out a solution and wanted to share it here.",
    "summary": "Recently, I came across a problem where I struggled to query notes with inline fields properly. And after searching high and low in the forums and docs, I figured out a solution and wanted to share it here.",
    "content": null,
    "pub_date": "2023-08-10T00:11:23Z",
    "upd_date": "2023-08-10T00:11:23Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:11.034Z",
    "updated": "2023-10-09T09:35:11.034Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 125,
  "fields": {
    "feed": 5,
    "title": "My Favorite Underrated Vue 3 Feature",
    "author": null,
    "url": "https://www.bencodezen.io/blog/my-favorite-underrated-vue-3-feature",
    "image_url": "",
    "description": "When it comes to JavaScript frameworks, it's common to focus on well... the JavaScript stuff. But of all the features in Vue 3 that I love, mine is actually on a CSS feature (with some JavaScript 😜).",
    "summary": "When it comes to JavaScript frameworks, it's common to focus on well... the JavaScript stuff. But of all the features in Vue 3 that I love, mine is actually on a CSS feature (with some JavaScript 😜).",
    "content": null,
    "pub_date": "2023-08-09T00:32:39Z",
    "upd_date": "2023-08-09T00:32:39Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:11.344Z",
    "updated": "2023-10-09T09:35:11.344Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 126,
  "fields": {
    "feed": 5,
    "title": "Meeting Your Standards",
    "author": null,
    "url": "https://www.bencodezen.io/blog/meeting-your-standards",
    "image_url": "",
    "description": "You don't achieve your goals. You meet your standards.\n\n— Source unknown",
    "summary": "You don't achieve your goals. You meet your standards.\n\n— Source unknown",
    "content": null,
    "pub_date": "2023-08-07T18:12:39Z",
    "upd_date": "2023-08-07T18:12:39Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:11.632Z",
    "updated": "2023-10-09T09:35:11.632Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 127,
  "fields": {
    "feed": 4,
    "title": "Leveraging GraphQL for Next-Generation API Platforms",
    "author": null,
    "url": "https://www.apollographql.com/blog/leveraging-graphql-for-next-generation-api-platforms/",
    "image_url": "/blog/static/Splashdown-L-2-05a3004326319b726d77f33f1525ec1b.png",
    "description": "An Integrated Blueprint from Kong and Apollo Not a day goes by where the tech press fails to mention industry advancements in AI, connected devices, or personalization. Consumers can now use AI to create anything from digital illustrations to vacation ideas. At the core of these initiatives is one tried-and-true constant – APIs. If an […]",
    "summary": "An Integrated Blueprint from Kong and Apollo Not a day goes by where the tech press fails to mention industry advancements in AI, connected devices, or personalization. Consumers can now use AI to create anything from digital illustrations to vacation ideas. At the core of these initiatives is one tried-and-true constant – APIs. If an […]",
    "content": "<p><em>An Integrated Blueprint from Kong and Apollo</em> </p>\n\n\n\n<p>Not a day goes by where the tech press fails to mention industry advancements in AI, connected devices, or personalization. Consumers can now use AI to create anything from digital illustrations to vacation ideas. At the core of these initiatives is one tried-and-true constant – APIs. If an organization cannot safely and securely deliver service updates across any number of interfaces, these modernization initiatives will fail to gain traction.</p>\n\n\n\n<p>APIs are more heterogeneous than ever though. An enterprise considering incorporating gRPC APIs may still have legacy SOAP APIs in the mix. A new feature could require data from 20 different services – all of which are managed by different teams at different cadences using varying protocols. If a Product Manager wants to incorporate data from legacy APIs as well as new options like ChatGPT, how can API platform teams provide a standardized means to iterate, secure access, and scale all of them? And then how do they ensure that client teams can get the data they need in a self-service fashion?</p>\n\n\n\n<p>Kong and Apollo are industry leaders in the API space. Our customers come to us with these very real problems everyday. The API ecosystem often positions REST and GraphQL as competing technologies, but they are highly complementary and are instrumental in developing a modern API platform that accomplishes the goals above. Through a balanced exploration of Kong&#8217;s perspective on flexible, heterogeneous API ecosystems and Apollo&#8217;s expertise in GraphQL, we’ve captured the vendor-neutral best practices that combine API management and GraphQL into a unified reference architecture for building and operating a modern API platform.</p>\n\n\n\n<p>Learn more with our joint <a href=\"https://new.apollographql.com/leveraging-graphql-for-next-generation-api-platforms.pdf\">paper and reference architecture</a> that shows how to:</p>\n\n\n\n<ol>\n<li>Leverage GraphQL and a supergraph as a new layer in the stack atop existing microservices and API management.</li>\n\n\n\n<li>Streamline the developer experience in building and consuming APIs.</li>\n\n\n\n<li>Ensure secure, efficient runtime connectivity and implement robust governance mechanisms with API management best practices.</li>\n</ol>\n\n\n\n<p> </p>",
    "pub_date": "2023-10-06T12:20:25Z",
    "upd_date": "2023-10-06T12:20:25Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:13.993Z",
    "updated": "2023-10-09T09:35:13.993Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 128,
  "fields": {
    "feed": 4,
    "title": "GraphQLNullable is not a trap!",
    "author": null,
    "url": "https://www.apollographql.com/blog/graphqlnullable-is-not-a-trap/",
    "image_url": "/blog/static/Untitled-294583ed6eed717b4eae73be741ce34b.png",
    "description": "Nullability is a fundamental concept in many programming languages giving us the ability to express the absence of a value or assigned object. This is particularly relevant in strongly typed languages where each constant or variable must be defined with one of the language data types or explicitly allowed to be null. GraphQL is strongly-typed […]",
    "summary": "Nullability is a fundamental concept in many programming languages giving us the ability to express the absence of a value or assigned object. This is particularly relevant in strongly typed languages where each constant or variable must be defined with one of the language data types or explicitly allowed to be null. GraphQL is strongly-typed […]",
    "content": "<p>Nullability is a fundamental concept in many programming languages giving us the ability to express the absence of a value or assigned object. This is particularly relevant in strongly typed languages where each constant or variable must be defined with one of the language data types or explicitly allowed to be null.</p>\n\n\n\n<p>GraphQL is strongly-typed and all fields are, by default, nullable with <code>null</code> being a valid response for any field unless explicitly declared otherwise. In GraphQL syntax a trailing exclamation mark is used to denote a field that uses a <a href=\"https://spec.graphql.org/draft/#sec-Non-Null\">Non-Null</a> type, like this:</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">{\n  nullableField: String\n  nonNullableField: String!\n}</code></pre>\n\n\n\n<p>Strong typing is also one of the defining characteristics of Swift where the use of the <a href=\"https://developer.apple.com/documentation/swift/optional\"><code>Optional</code></a> type ensures that nullable (<code>nil</code>) values are handled explicitly. Swift default type behavior is the opposite of GraphQL, though, and types are defined as non-null unless explicitly declared otherwise. The question mark on a type declaration indicates that the value it contains is optional (nullable), like this:</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">let nonOptionalValue: String\nlet optionalValue: String?</code></pre>\n\n\n\n<p><em><strong>Note: </strong>GraphQL has <a href=\"https://spec.graphql.org/draft/#sec-Non-Null.Nullable-vs-Optional\">concepts</a> of both Nullable and Optional, and there is semantic overlap with the Swift <code><a href=\"https://developer.apple.com/documentation/swift/optional\">Optional</a></code> type. It is worth taking the time to understand each to avoid confusion.</em></p>\n\n\n\n<h2 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#nullability-in-generated-swift\" id=\"nullability-in-generated-swift\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Nullability in generated Swift</h2>\n\n\n\n<p>In the section above, we showed how nullability is an integral part of both languages. Let’s explore how nullability is used in the Swift code generated by Apollo iOS.</p>\n\n\n\n<p>During code generation when a GraphQL field type is defined as nullable, Apollo iOS will translate that into a Swift <code>Optional</code> type, allowing the generated model to receive <code>null</code> as a valid response for that field.</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">type Query {\n  allAnimals: [Animal]\n}\n\ninterface Animal {\n  species: String # <- nullable\n}\n\ntype Predator implements Animal {\n  species: String # <- nullable\n}\n\ntype Pet implements Animal {\n  species: String # <- nullable\n  name: String # <- nullable\n}</code></pre>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">query AllAnimals {\n  allAnimals {\n    species\n  }\n}</code></pre>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">class AllAnimalsQuery: GraphQLQuery {\n  struct Data: SelectionSet {\n    struct AllAnimal: SelectionSet {\n      var species: String? { get } // <- optional\n    }\n  }\n}</code></pre>\n\n\n\n<p><em><strong>Note: </strong>There are cases where non-nullable fields will be generated as nullable by using the <code>@include</code> or <code>@skip</code> directives. In these cases, the field can be returned as <code>null</code> and therefore a Swift <code>Optional</code> type is needed.</em></p>\n\n\n\n<p>If you’ve used Apollo iOS to generate Swift code before you might have noticed that some fragment accessors are generated as optional too. This is because the fragment’s fields might not be returned in the response depending on the object’s type.</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">query AllAnimals {\n  allAnimals {\n    species\n    ... on Pet {\n      ...PetDetails\n    }\n  }\n}\n\nfragment PetDetails on Pet {\n  name\n}</code></pre>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">class AllAnimalsQuery: GraphQLQuery {\n  struct Data: SelectionSet {\n    struct AllAnimal: SelectionSet {\n      var species: String? { get } // <- optional\n      var asPet?: AsPet { _asInlineFragment() } // <- optional\n      \n      struct AsPet: InlineFragment {\n        var name: String? { get } // <- optional\n      }\n    }\n  }\n}</code></pre>\n\n\n\n<h3 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#where-is-graphqlnullable\" id=\"where-is-graphqlnullable\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a><strong>Where is <code>GraphQLNullable</code>?</strong></h3>\n\n\n\n<p>So far we’ve explored nullability in GraphQL and Swift, but we still haven’t encountered the <code>GraphQLNullable</code> type yet. Looking at the way nullable types are defined in both languages it is reasonable to assume that they can be expressed in the same way, albeit with slightly different syntax. However, that’s not true.</p>\n\n\n\n<p>A Swift <code>Optional</code> either has a value, which must be unwrapped, or there is no value. Similarly, GraphQL types either have a value or there is no value but, most importantly, <a href=\"https://spec.graphql.org/draft/#sec-Null-Value\">null</a> values have two semantically different ways to represent the lack of a value: <em>explicitly</em> by providing the literal value: <code>null</code>; <em>implicitly</em> by not providing a value at all. Trying to reconcile this difference is where <code>GraphQLNullable</code> is required.</p>\n\n\n\n<p>n the same way that Swift’s <code>Optional</code> type is an enum, <code>GraphQLNullable</code> is also a Swift <code>enum</code> providing the <code>some</code> and <code>none</code> cases but additionally the third possible case allowed by GraphQL - <code>null</code>.</p>\n\n\n\n<ul>\n<li><code>some</code> represents the presence of a value</li>\n\n\n\n<li><code>none</code> represents the <em>implicit</em> absence of a value, aka <code>nil</code></li>\n\n\n\n<li><code>null</code> represents an <em>explicitly</em> null value</li>\n</ul>\n\n\n\n<p><code>GraphQLNullable</code> is not needed in the generated response models though because whether a GraphQL response contains <code>null</code> for a field or the field is not present, both are represented in the generated response as a Swift optional. The only time a field is allowed to be missing from a GraphQL response is as a result of the <code>@include</code>, <code>@skip</code> or <code>@defer</code> directives. Any other time a field is missing would indicate a partial response due to a <a href=\"https://spec.graphql.org/draft/#sec-Errors.Field-Errors\">field error</a>.</p>\n\n\n\n<p>It is only on input types where the subtle <a href=\"https://spec.graphql.org/draft/#sec-Null-Value\">difference</a> between <code>nil</code> and <code>null</code> becomes important. In a mutation or input variable, an explicit <code>null</code> value could be taken to represent the deletion of a field, whereas the absence of an explicit value (i.e.: <code>nil</code>) could be taken to imply no change to the field. Unfortunately, some GraphQL server implementations simply treat them the same, and many developers who use GraphQL are unaware of the difference. This is also in contrast to type-safe languages which cannot discern the difference between explicit or implicit <code>nil</code>.</p>\n\n\n\n<h3 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#but-why\" id=\"but-why\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>But why?</h3>\n\n\n\n<p>Apollo iOS is a general-purpose GraphQL client and must comply with the full <a href=\"https://spec.graphql.org/\">GraphQL specification</a>. We needed to make it clear that there is a difference, and you should be explicit in what you want. Therefore, the design of <code>GraphQLNullable</code> forces the user to select a case that signals their intent without question.</p>\n\n\n\n<p><code>GraphQLNullable</code> was introduced with the major <code>1.0</code> release and is, without doubt, an improvement over the previous syntax of double-optional. Developers were often confused by this syntax where an inner optional with a value of <code>nil</code> combined with an outer optional value of <code>some</code> would mean the GraphQL value <code>null</code>, while an outmost optional of <code>nil</code> would mean the absence of a value, aka. <code>nil</code>. We received plenty of questions about why values were doubly wrapped in optional and it would often lead to easy mistakes in using <code>nil</code> when you actually wanted <code>null</code> but the compiler could never know what your intent was.</p>\n\n\n\n<p>The change to <code>GraphQLNullable</code> hasn’t been without friction, though, and most of the feedback we have received is from developers who say they do not need to be concerned with the difference between <code>nil</code> and <code>null</code>. We believe in the value of being explicit, but it does make the usage of these fields more cumbersome because of having to use the verbose syntax of <code>.some()</code> or <code>GraphQLNullable()</code>, especially when combined with another <code>enum</code> type such as <code>GraphQLEnum</code>.</p>\n\n\n\n<h2 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#examples\" id=\"examples\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Examples</h2>\n\n\n\n<p>Consider the following definitions:</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">struct Filter {\n  let species: String\n  let name: String? = nil\n  let predator: Bool\n}\n\nvar filter: GraphQLNullable\n\n// Implicitly stating the absence of a value, aka nil.\nfilter = .none \n\n// Explicitly stating a null value\nfilter = .null\n\n// Stating the presence of a value\nfilter = .some(.init(\n  species: \"Canine\", \n  predator: false\n))</code></pre>\n\n\n\n<p>As you can see above, the <code>none</code> and <code>null</code> cases are easy enough to use and clear in their semantics, whereas having to wrap values in <code>some</code> is awkward and less clear to someone reading the code who may be unfamiliar with <code>GraphQLNullable</code>.</p>\n\n\n\n<p>For additional convenience, you'll find that <code>GraphQLNullable</code> conforms to Swift’s <code>ExpressibleBy</code> protocols that match GraphQL's scalar types, such as <code>ExpressibleByStringLiteral</code>, <code>ExpressibleByIntegerLiteral</code>, etc. So if your <code>GraphQLNullable</code> property is wrapping a GraphQL scalar type, then initialization can be done as follows:</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">let aString: GraphQLNullable = \"value\"\nlet aBool: GraphQLNullable = true\nlet aInt: GraphQLNullable = 123\nlet aDouble: GraphQLNullable = 1.1</code></pre>\n\n\n\n<p><code>GraphQLNullable</code> also has a convenient nil coalescing operator useful in cases where the value being evaluated is optional itself:</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">let species: GraphQLNullable = optionalValue ?? .null</code></pre>\n\n\n\n<h3 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#improvements\" id=\"improvements\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Improvements</h3>\n\n\n\n<p>Despite the conveniences, we’ve seen that the <code>some</code> case is still awkward to use. For those who aren’t concerned about the semantic difference of <code>nil</code> and <code>null</code> there have been suggestions from the community for an extension on <code>GraphQLNullable</code> that can help with the initialization of nullable values.</p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-swift\">extension GraphQLNullable {\n  init(optionalValue value: Wrapped?) {\n    if let value {\n      self = .some(value)\n    } else {\n      self = .none // <- change this to .null if your server requires\n    }\n  }\n}</code></pre>\n\n\n\n<p><em><strong>Note: </strong>We choose not to provide this extension by default in Apollo iOS because the decision to return <code>.none</code> vs. <code>.null</code> is going to be specific to how your connecting GraphQL server interprets nullable values. You should take the time to fully understand the impact of this extension and what the resultant input field value is signaling to your server.</em></p>\n\n\n\n<h2 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#wrapping-up\" id=\"wrapping-up\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Wrapping up</h2>\n\n\n\n<p>GraphQL and Swift are a good fit. They are both strongly typed and have nullability built-in. Their syntax is quite similar even if the defaults are different and the details of handling <code>null</code> vs <code>nil</code> can get complicated for input values.</p>\n\n\n\n<p>I hope this article cleared up some of the confusion around <code>GraphQLNullable</code> and provided you with some insight into its design.</p>\n\n\n\n<p>We welcome your feedback, and please don’t hesitate to reach out on <a href=\"https://github.com/apollographql/apollo-ios\">GitHub</a>, the <a href=\"https://community.apollographql.com/tag/mobile\">Apollo Community</a>, or the <a href=\"https://discord.gg/graphos\">Apollo Discord</a> server.</p>",
    "pub_date": "2023-10-03T09:53:34Z",
    "upd_date": "2023-10-03T09:53:34Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:14.496Z",
    "updated": "2023-10-09T09:35:14.496Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 129,
  "fields": {
    "feed": 4,
    "title": "Office Hours: Apollo Server with Trevor Scheer",
    "author": null,
    "url": "https://www.apollographql.com/blog/office-hours-apollo-server-with-trevor-scheer/",
    "image_url": "/blog/static/Galaxy-L-e82b3ab61bd32515fcc407f4027449fb.png",
    "description": "Trevor Scheer (Apollo Server maintainer) joined Jeff Auriemma (Engineering Manager) to discuss all things Apollo Server. Originally streamed live in the Apollo Discord on August 25, 2023. Listen to the Podcast recording, or read the full transcript below. Topics Links Transcript Jeff: Hey everybody, welcome back to Office Hours. Office Hours at Apollo GraphQL. I’m Jeff, Jeff […]",
    "summary": "Trevor Scheer (Apollo Server maintainer) joined Jeff Auriemma (Engineering Manager) to discuss all things Apollo Server. Originally streamed live in the Apollo Discord on August 25, 2023. Listen to the Podcast recording, or read the full transcript below. Topics Links Transcript Jeff: Hey everybody, welcome back to Office Hours. Office Hours at Apollo GraphQL. I’m Jeff, Jeff […]",
    "content": "<p>Trevor Scheer (Apollo Server maintainer) joined Jeff Auriemma (Engineering Manager) to discuss all things Apollo Server. Originally streamed live in the&nbsp;<a href=\"https://discord.gg/M6FT5cNR5B\">Apollo Discord</a>&nbsp;on August 25, 2023. Listen to the <a href=\"https://podcasters.spotify.com/pod/show/apollo-graphql\">Podcast</a> recording, or read the full transcript below.</p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-spotify wp-block-embed-spotify wp-embed-aspect-21-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n\n</div></figure>\n\n\n\n<h3 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#topics\" id=\"topics\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Topics</h3>\n\n\n\n<ul>\n<li>Apollo Server 3 to 4 migration</li>\n\n\n\n<li><code>dataSources</code></li>\n\n\n\n<li>Pagination</li>\n\n\n\n<li>Plugins</li>\n\n\n\n<li>Federation</li>\n\n\n\n<li>Federated Mutations</li>\n\n\n\n<li>Federated Subscriptions</li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#links\" id=\"links\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Links</h3>\n\n\n\n<ul>\n<li><a href=\"https://www.apollographql.com/docs/apollo-server/migration/\">Apollo Server 4 migration guide</a></li>\n\n\n\n<li><a href=\"https://dev.to/mandiwise/graphql-pagination-primer-offset-vs-cursor-vs-relay-style-pagination-1a60\">GraphQL pagination guide</a></li>\n\n\n\n<li><a href=\"https://www.apollographql.com/docs/apollo-server/integrations/plugins\">Creating Apollo Server plugins</a></li>\n\n\n\n<li><a href=\"https://www.apollographql.com/blog/announcement/backend/federated-subscriptions-in-graphos-real-time-data-at-scale/\">Federated Subscriptions</a></li>\n\n\n\n<li><a href=\"https://summit.graphql.com/\">GraphQL Summit</a></li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\"><a class=\"aal_anchor\" href=\"#transcript\" id=\"transcript\"><svg class=\"aal_svg\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" fill-rule=\"evenodd\"></path></svg></a>Transcript</h2>\n\n\n\n<p>Jeff: <br />Hey everybody, welcome back to Office Hours. Office Hours at Apollo GraphQL. I&#8217;m Jeff, Jeff Auriemma. I am an engineering manager here serving the. maintainers of Apollo Client, Apollo iOS, and Apollo Kotlin. I live over in Connecticut, and that&#8217;s where I am joining you from today with my esteemed colleague, Trevor Scheer. Trevor, you want to tell us a little about yourself as well?</p>\n\n\n\n<p>Trevor:<br />Yeah, I&#8217;m Trevor Scheer. I&#8217;m an engineer, staff engineer. Been at Apollo for nearly five years now. Worked on a handful of projects, most notably Apollo Server and currently Apollo Federation.</p>\n\n\n\n<p>Jeff:<br />That is awesome. And so we are doing sort of a special episode of Apollo Office Hours today, talking through Apollo Server. And usually we&#8217;re talking about the client, so we&#8217;re really excited that you were available to join us, Trevor.</p>\n\n\n\n<p>Trevor:<br />Happy to join.</p>\n\n\n\n<p>Jeff:<br />The hot topic that I always hear about with Apollo Server is, of course, Apollo Server 4, which I think we&#8217;re farther along in that major version now. Last I checked, we&#8217;re in 4.9. Is that accurate? Am I getting my numbers right?</p>\n\n\n\n<p>Trevor:<br />That sounds right.</p>\n\n\n\n<p>Jeff:<br />All right. So Apollo Server 4, though, is still somewhat recent, I think, over the life of the project. We introduced it last year, if I recall correctly. And I was hoping that you could walk the audience through the big changes between Apollo Server 3 and Apollo Server 4.</p>\n\n\n\n<p>Trevor:<br />Yeah. As far as user facing goes, a lot of the changes were really internal so that we could deliver on a couple major user facing features, the top one being multi-part responses. So we were tasked with being able to implement&nbsp;<code>@defer</code>&nbsp;as part of AS4. And in trying to do so, we were pretty hamstrung by the existing architecture of Apollo Server 3 and decided that it was a good time to implement some previously suggested architecture overhauls that would allow us to do that. So as far as user facing goes, Apollo Server 4 was never meant to be super feature packed, but we did deliver on defer support, which is coming in GraphQL JS 17. It&#8217;s usable now in its alpha form, but but right now that&#8217;s not the latest release. Another thing that I was excited to ship was the context correctness throughout the internals of Apollo Server 4 and our plugin system. So there was an attempt to push that context type all the way through the Apollo Server internals in v3, but it was pretty riddled with errors. And we were kind of stuck with it because like fixing those errors would have been a breaking change. So Apollo server four kind of gave us the opportunity to fix that for our TypeScript users.</p>\n\n\n\n<p>Jeff:<br />Nice. Those are some big changes, obviously. One of the things that I remember reading about too in the release notes was about some of these third party integrations like AWS Lambda, Cloudflare, et cetera. And as I understand it, those integrations were removed from the library. I&#8217;m curious as to why that choice was made.</p>\n\n\n\n<p>Trevor:<br />Yeah, we had a few reasons for making the decision. Namely, we are GraphQL experts here, and not every other Node.js framework experts. So part of that was to kind of offload the maintenance burden of having to know the intricacies of each of these frameworks ourselves, and kind of lead that up to experts in the ecosystem. So hopefully someone that liked Next enough, as well as Apollo Server, would be willing to maintain one of those integration packages. We also, after the architecture changes, we ended up with a pretty straightforward API for integrating with Apollo Server. It was really entangled before, and so maintaining integrations was a lot more of a pain. So we decided that the level of lift required to maintain and write these integrations was a lot lower than it was before. And so we felt pretty comfortable leaving that up to community members to carry if they felt passionate about it. And if not, someone can come along and write that 100 line wrapper and maintain it themselves if they prefer in their own project.</p>\n\n\n\n<p>Jeff:<br />When I hear about those changes, I think, like, simplicity, that&#8217;s the word that comes to mind.</p>\n\n\n\n<p>Trevor:<br />Yeah.</p>\n\n\n\n<p>Jeff:<br />And I know features are often the first things people see, though. They don&#8217;t necessarily see simplicity right away. So like, paint a picture for us. How will this architecture benefit Apollo Server users down the road?</p>\n\n\n\n<p>Trevor:<br />Sure. I think it makes us&#8230; Well, it definitely lightens the maintenance burden for us, so we&#8217;re able to focus on the issues of Apollo Server, you know, not the issues of Next and Micro and all these various other things. I think that the outcome has been a success so far. Our previous lead, Glasser, has been able to step away and work on other projects while I maintain Apollo Server at about half time. We don&#8217;t have any big yak shaves that we&#8217;re looking at getting into a next major version. And this is after about a year. So I think so far, the V4 ship has been a success as far as our expected outcomes and goals were. So maintainability, simplicity. We also have like, we dropped. support for subscriptions- Rather, we dropped the built-in bolted on version of subscriptions and as well as GraphQL Playground in favor of our own. That was mostly to allow users to bring their own subscriptions rather than us be tied to specific versions of things. So removing some dependencies, it, it gives our users a more secure implementation because they&#8217;re not tied to those dependencies. That was something that we suffered from in version 3 with uploads and subscriptions, both seeing security issues then caused security issues for our users that we had to either backport fixes for or fork the library for, and that&#8217;s just not a good position for us to be in.</p>\n\n\n\n<p>Jeff:<br />Sure, yeah, makes sense. A lot of these things come in, like not everybody&#8217;s doing real time all the time, right, or these other features, right? So we can, it sounds more modular to me that I&#8217;m hearing this.</p>\n\n\n\n<p>Trevor:<br />Exactly. And if we do decide to support subscriptions in the future, it&#8217;ll be in a way that doesn&#8217;t expose our users to that same security problem.</p>\n\n\n\n<p>Jeff:<br />And to be clear, it&#8217;s still a pretty straightforward implementation to add subscriptions if you&#8217;re working on that. Like, folks who were using Apollo Server 4 are still running subscriptions in production.</p>\n\n\n\n<p>Trevor:<br />Right.</p>\n\n\n\n<p>Jeff:<br />It&#8217;s just the pathway there is a little different.</p>\n\n\n\n<p>Trevor:<br />Yep, and we provided in the migration guide a way to go about still implementing those.</p>\n\n\n\n<p>Jeff:<br />Yeah, let me get that&nbsp;<a href=\"https://www.apollographql.com/docs/apollo-server/migration/\">migration guide</a>&nbsp;into the chat too, for that, so that folks could follow along in case they&#8217;re hanging on to version three or a previous version and want to know what&#8217;s ahead here. I&#8217;m popping it into Discord and YouTube. If you are tuning in from either of those platforms, please do feel free to drop in something to the chat if there&#8217;s a topic that you want to hear covered. We&#8217;re here for it. So go ahead and let us know. Yeah, and I think that we can also, if you&#8217;re catching up with this later, I think we have feeds now on Spotify, if I&#8217;m not mistaken, and a few other platforms. So we&#8217;re really excited to be coming at you through those as well. All right. So one other thing that comes to mind about Apollo Server 3 versus 4 is the data sources API, which I understand changed quite a bit. And we&#8217;ll talk about the differences between major versions in a minute, First, I&#8217;m curious, could you just give listeners an idea of what are data sources?</p>\n\n\n\n<p>Trevor:<br />Sure. GraphQL is really just kind of a middle layer to our API. We know that the data is stored somewhere else in anything but the smallest cases. So data sources are a means to access those bits of data from your other services, whether it be a REST API or straight to a database, for example. So you can imagine data source as just a means to communicate to your actual back ends.</p>\n\n\n\n<p>Jeff:<br />Right. And it sounds simple, right? At least it sounds simple to me, but I&#8217;m curious, what are the big differences between versions 3 and 4 regarding the data sources API, which is a critical layer.</p>\n\n\n\n<p>Trevor:<br />Yeah. So fundamentally, there&#8217;s no difference in how the data source works or what a data source does. That&#8217;s all up to the user to write their data source, consume it how they want within the resolvers. Apollo Server 3 had this little magic constructor option called&nbsp;<code>dataSources</code>&nbsp;(camel case). Really all that did was on every request, called your data sources function, which recreated your data sources for that request. And it would initialize them with the context that your context function returned, as well as the cache, the internal Apollo Server cache. In Apollo Server 4, we got rid of that constructor option. There were a couple of reasons for that. And I can elaborate. It&#8217;s a little bit wordy, but yeah.</p>\n\n\n\n<p>Jeff:<br />I&#8217;m here for it. We&#8217;re here for the deep cuts.</p>\n\n\n\n<p>Trevor:<br />Yeah. One, we had a number of issues that would roll in every so often, same issue every time. Hey, why is my data source being constructed on every request? So a lot of people got the impression that the data sources function was called once on startup, which would knew your data sources, and that on every request it would reuse those data sources. That&#8217;s not the case. Because that cache is shared, you don&#8217;t want to be reusing those data sources across multiple requests. So eliminating the magic, that hidden layer of what&#8217;s actually happening with your data sources under the hood was one motivation for removing that function. The other was that getting the context typing correct in Apollo Server was actually really challenging with that&nbsp;<code>dataSources</code>&nbsp;function there. Because the&nbsp;<code>dataSources</code>&nbsp;ends up on the context, we have kind of this context creation in two different places, or rather like a context creation and a context update. And so being able to tell Apollo Server and its plugins, what like the type of context was, was actually pretty much impossible because we don&#8217;t know what&#8217;s going to happen in that&nbsp;<code>dataSources</code>&nbsp;function, what&#8217;s gonna end up there. And so removing that allowed us to know at the time of writing your code, at compile time, what the type of your context function actually is. Those are my words.</p>\n\n\n\n<p>Jeff:<br />Yeah, a lot of words. I love the words, though. Type safety has become such in the front of people&#8217;s minds. And we get a lot of questions about that on the client too about type safety and what things are possible and what are not, depending. I mean, runtime is so dynamic and there&#8217;s only so much we can do. So yeah, interesting.</p>\n\n\n\n<p>Trevor:<br />Yep. And, you know, being able to give people the context correctness in their resolvers, in their plugins and everything was a pretty big motivating factor for us. So getting that right this time was pretty exciting.</p>\n\n\n\n<p>Jeff:<br />Hmm. Yeah, well, I&#8217;m curious to talk about plugins later, because that is an interesting point there. And I think if we go back in time a bit to what we were talking about earlier, that notion of simplifying the amount of integrations we do, and then also at the same time giving the tools to write better integrations, especially through type safety, it sounds kind of exciting, honestly. Very cool. Nice. Well, as excited as I am about&nbsp;<code>dataSources</code>, we get a ton of questions about this, I think, everywhere. Well, it&#8217;s a common problem for any application developer, I think. It&#8217;s not just a GraphQL thing. But in GraphQL, I think a lot of folks pay attention to this a lot. And there are a lot of different ways to do it. So one of the most frequent ones is concerning pagination.</p>\n\n\n\n<p>Trevor:<br />Yeah.</p>\n\n\n\n<p>Jeff:<br />If you’re creating a list, right, what options are available for Apollo Server users who want to implement paginated lists?</p>\n\n\n\n<p>Trevor:<br />Yeah, we tend to steer people towards common approaches towards solving pagination, both cursor and offset-based. People who are familiar with GraphQL are probably also familiar with Relay, which Apollo Server doesn&#8217;t implement for you, but it definitely doesn&#8217;t stop you from using that. I think that&#8217;s a pretty well-loved approach to pagination in GraphQL. So yeah, those are, I guess the approaches I would look at and consider. And as far as within Apollo Server and GraphQL, if you&#8217;re not using Relay, if you&#8217;re using either the cursor or offset based approach, those can just be arguments to your resolvers. So often those, well, one or the other is passed along to, say, your REST API. you might pass your&nbsp;<code>limit=10</code>&nbsp;or whatever your pagination parameters are down to your REST service or as a part of your SQL query, if you&#8217;re querying the database directly. And so I would just pass those in as a field level arguments when I&#8217;m solving pagination at GraphQL level.</p>\n\n\n\n<p>Jeff:<br />And when we hear those terms like offset, cursor, and Relay, could we go to a little more detail there? When I hear offset, I think like a page number or an offset number and then a limit. Is that what you&#8217;re referring to?</p>\n\n\n\n<p>Trevor:<br />Yeah. Exactly.</p>\n\n\n\n<p>Jeff:<br />Like pages of 20, page 1, page 2, or whatever.</p>\n\n\n\n<p>Trevor:<br />Yep, I might say we&#8217;ve got 100 items. My offset tells me where I start on that list. So maybe I start on item 50. And then the limit would be how many I&#8217;m looking for in that request, so maybe 10. That allows me to determine, well, rather to request for certain sizes of data. Maybe if I&#8217;m just going to the next page, I only want 10 or so. Or if I&#8217;m prefetching a bunch of data in advance for the user. Maybe I can ask for 100 or some reasonable number of items that have them ready for as soon as they page through.</p>\n\n\n\n<p>Jeff:<br />There you go. And that question of what&#8217;s a reasonable number, I guess your mileage may vary.</p>\n\n\n\n<p>Trevor:<br />Your mileage may vary 100%.</p>\n\n\n\n<p>Jeff:<br />Cool. And when it comes to cursor, and I understand that we&#8217;ll get to Relay, which I think is a specific type of cursor. But I feel like cursor pagination and therefore Relay is kind of underappreciated, or at least it&#8217;s not as widely as understood as I wish. So I&#8217;m wondering if you can give us just a quick overview of what a cursor is and why pagination with cursor can be a good choice for developers.</p>\n\n\n\n<p>Trevor:<br />I might need, I think you&#8217;ve got something in mind here. And.</p>\n\n\n\n<p>Jeff:<br />Oh, just a quick overview. That&#8217;s all. Yeah, I know this is a bit off script. But when it comes to cursors, I think a lot of folks know that it exists. But I&#8217;m wondering what&#8217;s the practical impact of choosing that sort of paradigm as opposed to something like an offset. Like, the idea of kind of selecting, to me, when I was doing my first GraphQL backend, I remember implementing cursor in a way. And I enjoyed that, but I had to look it up a lot. And one of the things that I liked about it, though, it seemed like it was more precise in some ways, but it had some foot guns, too. But yeah, anyway. Are there like, do you see folks coming in talking about the tangible benefits of cursor? Or is there, I don&#8217;t know, I&#8217;m just curious as to what an application developer might consider with that choice.</p>\n\n\n\n<p>Trevor:<br />Interestingly, I&#8217;m not super exposed to the implementation or the regular application of pagination and these general server topics. As a server engineer, I am surprisingly unexposed to these.</p>\n\n\n\n<p>Jeff:<br />It just gives the arguments, right? It will give you the data.</p>\n\n\n\n<p>Trevor:<br />Yeah, exactly. So I&#8217;m afraid I don&#8217;t have a good answer for you there, unfortunately.</p>\n\n\n\n<p>Jeff:<br />We&#8217;ll find some articles to link people to, and we&#8217;ll put those in the show notes, folks. Rad. So speaking of lists, because we&#8217;re on the topic, one common complaint about GraphQL regards the N+1 problem. What is that for folks, and how do folks work around that in development?</p>\n\n\n\n<p>Trevor:<br />So the N+1 problem, I always get it mixed up. So I usually think of it as the 1+N problem. You usually start with asking for a list of something. But within that list, each of those objects also have something that they might want to query for. So if I have, say, users and their posts. My first query might be for users and each of those users then would want to query for their posts. So here we have the one, which is the users query. I get my list of users. The N is the number of posts queries that I&#8217;m about to make for each of those user. N users. We solve that with typically in GraphQL, there are other approaches to solving this problem elsewhere, but we have a data loader, which is a batching solution. So if you pass your data loader around in context and use the data loader to make your requests, you can then rely on the data loader to handle taking say 10 different requests for posts, batching them all together, resolving that one query under the hood, and then responding to each of those 10 queries individually once that one request is resolved.</p>\n\n\n\n<p>Jeff:<br />So there you go. Asked and answered.</p>\n\n\n\n<p>Trevor:<br />Did I do an okay job of explaining N+1?</p>\n\n\n\n<p>Jeff:<br />Oh, you&#8217;re the expert here. I&#8217;m generally aware of it. There are so many different user landways to do it, and I find it fascinating. So thanks. It&#8217;s always great to get perspectives on it. So let&#8217;s swing it around. I&#8217;d like to go back to the talk about plugins. You had mentioned before in type safety about making an interface for better plugins. And so let&#8217;s go back to that. Whenever I see a software with a great plugin API, and a great ecosystem too, because I know there&#8217;s a ton of plugins out there for Apollo Server, people just solving little problems, big problems on their own. And it just makes me smile. So what sort of plugins have you seen people create for Apollo Server? And in the course of what you&#8217;ve seen, without calling anybody out, of course, what mistakes do people often make? Any advice there?</p>\n\n\n\n<p>Trevor:<br />Yeah, I&#8217;ve got a few thoughts. One, I haven&#8217;t seen too many extremely useful plugin implementations. I would say that they&#8217;re generally good for solving problems quickly, working around little issues, maybe some infrastructure quirks. Maybe your requests come in a little funky or you need your response to go out a little funky. You can do that kind of modification on the fly, and get something working. Tracing, logging, observability, all good for those because you have insight into different parts of the request lifecycle, such as, like, GraphQL validation and parsing, maybe more interesting field resolution if we&#8217;re talking metrics and timing data. There&#8217;s not a whole lot that you can mess up, especially if you&#8217;re using TypeScript. Since we&#8217;ve got those types nailed down, TypeScript will tell you if you&#8217;re doing something wrong. Our plugin authoring story isn&#8217;t too complex, but there&#8217;s some gotchas. So maybe not gotchas, but some syntax funniness. Like we&#8217;ve got a&nbsp;<code>requestDidStart</code>, which is one of our hooks, which actually returns an object of hooks. And that might be just a little funny on the eyes. But if you are using TypeScript, it&#8217;ll, it&#8217;ll help you all the way.</p>\n\n\n\n<p>Jeff:<br />Nice. That&#8217;s awesome. Do we have like, we have a&#8230; I may have to follow up on this afterwards, but I&#8217;d love to share a&#8230; Oh yeah, here we are in the documentation,&nbsp;<a href=\"https://www.apollographql.com/docs/apollo-server/integrations/plugins\">creating Apollo server plugins</a>. I just wanted to make sure that folks had that in case they were interested in spinning up their own plugin. They&#8217;ve been meaning to solve a specific problem, didn&#8217;t know where to start. Well, I guess it&#8217;s today.</p>\n\n\n\n<p>Trevor:<br />You know, I might share that recently I implemented a plugin for our subscription callback protocol.</p>\n\n\n\n<p>Jeff:<br />Oh, nice.</p>\n\n\n\n<p>Trevor:<br />We&#8217;ll touch on that a bit later, but it turned out to be a pretty fast and easy way to get kind of a test run out the door that people can use today, rather than go and kind of embed everything into the Apollo Server internals just yet.</p>\n\n\n\n<p>Jeff:<br />All right. I got kind of a big idea question too that kind of zooms out a bit from Apollo Server. So I hope you won&#8217;t mind. And there&#8217;s a bit of backstory. I joined Apollo about a year ago. And when I first joined, I was already an Apollo Client user and fan and had dabbled in Apollo Server a bit on some personal projects, but we were a Ruby shop. We did Ruby on Rails. So we were using GraphQL Ruby on our backend. And we were also in the middle at this time of migrating kind of a Ruby on Rails monolith backend to smaller services. And all of our different kind of user facing backends, I guess you could say are sort of, for lack of a better word, backends for frontends, were&#8230; sourcing data either from our monolith or later on these smaller services independently. I came to Apollo and I learned that there was so much more we could have been doing. We threw around the term “supergraph” a lot and I&#8217;m wondering for folks who are in the shoes I was in not too long ago if you could maybe tell us a bit about what a supergraph is. Yeah, so I&#8217;ll give you the mic for that.</p>\n\n\n\n<p>Trevor:<br />Yeah, a supergraph is a way of&#8230; building out your services in discrete units and kind of merging them up into a single GraphQL graph. We have worked pretty hard on federation for the last four-ish years now. And&#8230;</p>\n\n\n\n<p>Jeff:<br />Federation being like how you get these together.</p>\n\n\n\n<p>Trevor:<br />Yeah. Composition would be the term we use for bringing various smaller subgraphs into a single supergraph. This was previously done most commonly via stitching in the past. And federation was kind of the next-gen stitching, if you will.</p>\n\n\n\n<p>Jeff:<br />Yeah, I think I remember reading about stitching. As I understood it, it was kind of a way to concatenate multiple schemas or something like that into something and then try to resolve any conflicts or whatever.</p>\n\n\n\n<p>Trevor:<br />Yeah, I think some of the problems that people faced there was in our case, well, I&#8217;m just going to call them subgraphs. That&#8217;s how we knowingly love them or lovingly know them. Subgraphs had to have knowledge of other subgraphs in order for, for stitching to work. And that was one of the main drawbacks there. Whereas with Federation, you can go and extend types. I might be speaking a little too far on what&#8217;s going on here, but you&#8217;re able to compose subgraphs together without them necessarily knowing about each other.</p>\n\n\n\n<p>Jeff:<br />Pretty cool. I think of that and I think of like, so there&#8217;s supergraphs and subgraphs and I think about smaller services, microservices architecture and things like that. So if I&#8217;m stitching together what you said, no pun intended, when folks think of a supergraph, they&#8217;re thinking a lot of smaller GraphQL servers that are composed together into- So when they are composed together, what is that thing that they are composed to? We call it a supergraph. What is the piece of software they need in order to run something like that?</p>\n\n\n\n<p>Trevor:<br />I don&#8217;t quite follow the question.</p>\n\n\n\n<p>Jeff:<br />Oh, like there&#8217;s like a gateway, right? Like a single kind of entry point that you query. So what are people&#8217;s options? Yeah, like what kinds of things could they consider installing?</p>\n\n\n\n<p>Trevor:<br />What do you do with your Supergraph once you have it?</p>\n\n\n\n<p>Jeff:<br />Yeah, what do you do with that thing?</p>\n\n\n\n<p>Trevor:<br />Yeah. We have the gateway, which has been the kind of long-standing node implementation for handling your Supergraph, handling federated queries, if you will. And nowadays it&#8217;s all about the Rust router. The router takes a Supergraph file-</p>\n\n\n\n<p>Jeff:<br />Apollo Router</p>\n\n\n\n<p>Trevor:<br />Yep, and it handles query planning exactly the same as Gateway and sends those queries out to your smaller GraphQL services.</p>\n\n\n\n<p>Jeff:<br />So you have this supergraph made of subgraphs that get together into a gateway or Apollo router, right? And if you have a bunch of, in hindsight, using that parlance, I see, like, you know, what I had in my last team as being a few different, I think we call them monographs, right, this idea of, like, they&#8217;re just standalone services. They stand on their own, a monograph. Plenty of people use Apollo Server every day and just stand alone and or they can use them to federate into a supergraph as I understand it. And I&#8217;m curious like does Apollo, I mean can people do both essentially into the future like does Apollo see Apollo Server and as having value both as a monograph server, like standing alone, and as a subgraph server?</p>\n\n\n\n<p>Trevor:<br />Yeah, I don&#8217;t think that- Apollo Server is certainly never going to stop supporting the single graph use case. You know, Federation is there to solve a problem for when you have it. Otherwise, you know, if you&#8217;re not having the scalability problem, then why introduce the complexity? Because there&#8217;s certainly an overhead to bringing in Federation and having to manage various subgraphs or another piece of infrastructure and all of that. So until you are feeling the pain of running a single graph, maybe you&#8217;ve got a handful of teams now working on the same graph, and that&#8217;s turning out to be cumbersome, that might be a good time to consider that. If you know you&#8217;re going that direction, you might start out federated. You certainly don&#8217;t have to be feeling pain to move on if you know that that&#8217;s the end goal anyway. And it might be simpler to do it earlier rather than later. But it&#8217;s certainly not a requirement to successfully run a graph.</p>\n\n\n\n<p>Jeff:<br />Yeah, like in hindsight, when I look at the team I was on, where we had two different independent services and in the middle of some larger initiatives that were taking shape in our backend, I wish I had known more about this architecture because we were definitely at that point where we were feeling the pain and as the number of services continued to grow, I wish I had known about it. So thanks for diving into that a little bit. And if you find yourself wondering whether that&#8217;s the case, it is something you can try out. And so we actually have a- we have a question coming in from Eran, and I hope I&#8217;m pronouncing your name correctly. And the question is, can you share how mutations work in a federated architecture? Mutation can only reach one subgraph, correct? How would I implement an operation that involves multiple services?</p>\n\n\n\n<p>Trevor:<br />I think, so I will make an assumption. Eran, please feel free to correct my assumption if it&#8217;s wrong. So I&#8217;m gonna say we&#8217;ve got a users posts service and we&#8217;re gonna, let&#8217;s say we need to make mutations across both of those. You now have a GraphQL server which needs to send a mutation to another GraphQL server. This does turn into a bit of a transaction problem where if your second step of the mutation fails, you wanna be able to roll that back and finally respond to the user with that failure because you might have success at the first level of the mutation, but if you don&#8217;t succeed at the second level, then&#8230; you need to handle that correctly. So if you do have that entanglement of writing twice or some number of times, it is important to handle those as transactions and carefully. The other thing that Eran might have meant is if you have multiple fields that are doing mutations, Federation handles that fine. Mutations by the spec are handled in sequence. And so whatever your first field of the mutation is will run before the second field. Both of those will run serially.</p>\n\n\n\n<p>Jeff:<br />As I understand it, with operations like this, and I&#8217;m going pretty far afield from my day-to-day experience, there&#8217;s also the query planner as part of Apollo router that can kind of give you, I think, compile time view as to how requests will execute against the various subgraph servers you have. And I think that includes mutations as well, but I&#8217;ll dig into the documentation.</p>\n\n\n\n<p>Trevor:<br />I recall years ago actually implementing that GraphQL spec, serial nature into the query planner because when we first implemented it, it didn&#8217;t respect that part of the spec. So when you send a mutation to the gateway or the router, it does run those top-level fields serially. And that&#8217;s part of query planning, yes.</p>\n\n\n\n<p>Jeff:<br />That&#8217;s really cool. One of my favorite things to dig into is those kinds of like query planning and brings me back to the days of SQL debugging and things like that, using the explain command. And whenever I look at our query planner, I kind of get vibes of that, which is a lot of fun. Keep the questions coming folks. Oh, and I see right above, and I apologize, I didn&#8217;t scroll up far enough.&nbsp;Onyishi&nbsp;asks if you can say something on the build subgraph schema. I was having issues with it recently do you have enough detail there? Do we need to get a little more?</p>\n\n\n\n<p>Trevor:<br />I don&#8217;t. I can share some current top-of-mind thoughts on build subgraph schema, but it would be helpful if you clarified a little bit&nbsp;Onyishi.</p>\n\n\n\n<p>Jeff:<br />Okay.</p>\n\n\n\n<p>Trevor:<br />Right now, build subgraph schema just accepts an array of type defs and resolvers, which is commonly used for building a schema that a Apollo Server can use. In a number of ways, this is&#8230; not quite what people need or it&#8217;s insufficient. A lot of people end up having to take that schema that we give them and run additional transformations on it for accommodating custom directives. So there are examples out on the internet of how people are going about doing this and solving that problem. So it can be done in userland. But I think we have room for improvement there. I actually have an open issue pretty recently on the Federation repo to improve the ergonomics there. There&#8217;s another equivalent, if you will, called&nbsp;<code>makeExecutableSchema</code>&nbsp;from GraphQL Tools, which has been the de facto way of building a schema. And I think we should support basically that API, that same API one-to-one in order to&#8230; solve the troubles that users face there. I think that ergonomics is not quite what it could be.</p>\n\n\n\n<p>Jeff:<br />Thanks Trevor.</p>\n\n\n\n<p>Trevor:<br />Onyishi, if that did answer your question, that&#8217;s great. If not, feel free to clarify in the chat and I can talk a little bit more.</p>\n\n\n\n<p>Jeff:<br />Yeah, and I&#8217;ll use this opportunity to plug our&nbsp;<a href=\"https://discord.gg/chKx6T5bty\">Discord</a>. There&#8217;s a&nbsp;<a href=\"https://discord.com/channels/1022972389463687228/1040407011734585404\">backend</a>&nbsp;channel, which is a great place to kind of post Q&amp;A particularly if you want to share some technical details. We can always kind of had go ahead and zoom into the problem and try our best either community members or Apollo folks trying to engage with these issues and help you out as you build your app. All right. So I think about all this and federation, supergraph architecture, right? And I wonder, you mentioned subscriptions before, and how does it work with real-time data? It&#8217;s one thing to have a persistent connection to one, like subscriptions, for example. So I&#8217;m curious what you have to say about that.</p>\n\n\n\n<p>Trevor:<br />Yeah, this has been a subscription support at Apollo has been a long time ask. A lot of people want it. And it&#8217;s not always the right fit for the job. But for some people, it certainly is. And in the last six months, we&#8217;ve finally been able to prioritize it as an actual thing that we support, in the router anyway. This is all with respect to Federation. And Apollo Server supports the router&#8217;s form of communicating and handling subscriptions at the federation level now. So you can imagine where the difficulties might lie in real-time data across multiple services and managing that. You&#8217;ve got open connections with clients. The router itself becomes a client to the subgraphs, where it&#8217;s sending requests and expecting updates as they come in. So the router becomes a bit more stateful than it usually needs to be. It has to maintain those connections with subgraphs and expect updates coming in, being pushed to it. This is the callback protocol that we&#8217;ve implemented recently. So yeah, lots of challenges there for sure. I think we&#8217;ve got it all mostly working, so that&#8217;s pretty cool.</p>\n\n\n\n<p>Jeff:<br />That is rad.</p>\n\n\n\n<p>Trevor:<br />Yeah.</p>\n\n\n\n<p>Jeff:<br />Yeah, seeing some of that being lifted from afar was pretty inspiring. Yeah, linking in the chats to a. to a bit of an overview on how you can use subscriptions and federation, which was a pretty intractable problem for a while, but it&#8217;s pretty cool to see an innovative solution. And that&#8217;s also, if I&#8217;m not mistaken, from the client side at least, because our team&#8217;s built out the client side part of this, it&#8217;s not using WebSockets, curiously, it&#8217;s using HTTP. So I always thought- or multipart, a novel protocol over HTTP, which is pretty rad.</p>\n\n\n\n<p>Trevor:<br />Yeah, I haven&#8217;t been up to speed on those changes, but it&#8217;s cool to see because I know a lot of people have concerns with WebSockets and their performance, especially when it comes to mobile devices and battery life. And yeah, it&#8217;s nice to see that client teams have been able to do that with just HTTP.</p>\n\n\n\n<p>Jeff:<br />Yeah, yeah. Well, it&#8217;s definitely client and router, both.</p>\n\n\n\n<p>Trevor:<br />Yeah, fair enough.</p>\n\n\n\n<p>Jeff:<br />They both got to speak the same language. But yeah, it was still a lot of fun and interesting way to go. But anyway, pretty cool. So Trevor, where can people find you on the internet? Where do you prefer? People want to talk Apollo Server. Should they just at you on GitHub? What&#8217;s the deal?</p>\n\n\n\n<p>Trevor:<br />Add me on GitHub. I follow my GitHub notifications pretty religiously. I have too many projects, too many little projects to keep track of. So you can definitely get me on there. I&#8217;ve got my handle in my name. I don&#8217;t know if that&#8217;s on the stream. I&#8217;ll put it in the chat.</p>\n\n\n\n<p>Jeff:<br />Yeah, yeah, it&#8217;s&nbsp;<code>@trevor-scheer</code>, right?</p>\n\n\n\n<p>Trevor:<br />Yeah, so you can get me there. I am on and off on our Discord. Sometimes I&#8217;ll catch a question and respond to it right away. And if I don&#8217;t, then I usually end up forgoing it, missing it altogether. You can try @ing me there and see if you get a response. Otherwise, maybe someone who watches it more closely will let me know.</p>\n\n\n\n<p>Jeff:<br />A lot of helpful folks on there.</p>\n\n\n\n<p>Trevor:<br />Yeah, open an issue on Apollo Server or Federation. I&#8217;ll see it.</p>\n\n\n\n<p>Jeff:<br />All right. Well, and as I understand it, you&#8217;re going to be hanging out in, I think we&#8217;re calling it the Apollo Garage at Summit, right?</p>\n\n\n\n<p>Trevor:<br />I will be at Summit in the garage.</p>\n\n\n\n<p>Jeff:<br />So, for those of you who aren&#8217;t aware, GraphQL Summit is coming in October, October 10 through 12 in San Diego. So if you, if you like GraphQL, it&#8217;s a great place to be. I&#8217;m going to link it in both chats as well. So come say hey to a bunch of folks around the GraphQL ecosystem there. It&#8217;s going to be a great time. I&#8217;m on GitHub&nbsp;<code>@bigNimbus</code>&nbsp;and on Discord&nbsp;<code>@jeff.auriemma</code>&nbsp;and Twitter&nbsp;<code>@JeffAuriemma</code>&nbsp;without the dot. So if you ever want to talk clients or anything like that, let&#8217;s just let&#8217;s chat. Anything else? I think we&#8217;re popping to the end here.</p>",
    "pub_date": "2023-09-07T18:00:48Z",
    "upd_date": "2023-09-07T18:00:48Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:15.269Z",
    "updated": "2023-10-09T09:35:15.269Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 130,
  "fields": {
    "feed": 3,
    "title": "Anthony's Roads to Open Source - The Set Theory",
    "author": "hi@antfu.me (Anthony Fu)",
    "url": "https://antfu.me/posts/roads-to-oss-set-theory-viteconf-2023",
    "image_url": "https://antfu.me/og/roads-to-oss-set-theory-viteconf-2023.png",
    "description": "Anthony's Roads to Open Source - The Set Theory - ViteConf 2023",
    "summary": "Anthony's Roads to Open Source - The Set Theory - ViteConf 2023",
    "content": "<blockquote>\n<p>Slides: <a href=\"https://antfu.me/talks/2023-10-05\">PDF</a> | <a href=\"https://talks.antfu.me/2023/viteconf\">SPA</a></p>\n<p>Made with   <a href=\"https://github.com/slidevjs/slidev\"><strong>Slidev</strong></a> - presentation slides for developers.</p>\n</blockquote>",
    "pub_date": "2023-10-05T08:00:00Z",
    "upd_date": "2023-10-05T08:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:16.260Z",
    "updated": "2023-10-09T09:35:16.260Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 131,
  "fields": {
    "feed": 3,
    "title": "Animated SVG Logo",
    "author": "hi@antfu.me (Anthony Fu)",
    "url": "https://antfu.me/posts/animated-svg-logo",
    "image_url": "https://antfu.me/og/animated-svg-logo.png",
    "description": "<p>I recently replaced the logo on the top left corner with an animated SVG:</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<h2>Inspiration</h2>\n<p>The first time I saw such stroke animations in SVG is the <a href=\"https://icones.js.org/collection/line-md\">Material Line Icons</a> by <a href=\"https://github.com/cyberalien\">Vjacheslav Trushkin</a>. It was cool, but I never thought about making one my own until I saw <a href=\"https://muan.co/\">Mu-An Chiou</a>'s <a href=\"https://muan.co/pages/banners\">banner</a> on her website. I suddenly feel like I want to be the cool guy too!</p>\n<h2>Breakdown</h2>\n<p>I downloaded Mu-An's SVG to read the code, cross-referencing the Material Line Icons. I found the trick is quite interesting, they animated <code>stroke-dasharray</code> to achieve the effect. This feels quite unintuitive as when you check the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\">MDN documentation</a>, it looks like a pretty boring attribute.</p>\n<p>I searched a bit more and found these two interesting articles:</p>\n<ul>\n<li><a href=\"https://jakearchibald.com/2013/animated-line-drawing-svg/\">Animated line drawing in SVG</a> by Jake Archibald</li>\n<li><a href=\"https://css-tricks.com/svg-line-animation-works/\">How SVG Line Animation Works</a> by Chris Coyier</li>\n</ul>\n<p>They covered this technique very well, highly recommend reading them if you are interested. Basically, the animation is done by a <strong>very long</strong> dash moving, in which you will see the dash as the drawing line and the gap as empty space. The length and position of the dash are controlled by <code>stroke-dasharray</code> and <code>stroke-dashoffset</code>, which are both animatable.</p>\n<h2>The Original Logo</h2>\n<p>My original logo <a href=\"/logo.svg\" target=\"_blank\"><img alt=\"My Logo in SVG\" src=\"https://antfu.me/logo.svg\" /></a> comes from around 8 years ago, I draw it with a pressure-sensitive pen on my Surface Pro 4. It was used as a temporary placeholder for the portfolio I was trying to build at that time. I later image-traced it with Adobe Illustrator to get the SVG version. Surprising to recall, it has been so long since then.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-vector.png\" />\n</div>\n<h2>Rework the Logo</h2>\n<p>As we see, the animation is done by moving the dash on strokes, while my Logo is a vector outline with multiple control points. So I need to redraw it with a single stroke. It took a bit of practice to get used to the <a href=\"https://blog.openreplay.com/using-the-pen-tool-in-figma/\">pen tool</a>, I managed to make it with Figma.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-redraw.png\" />\n</div>\n<p>Manually adding the styles in the exported SVG,</p>\n<pre><code class=\"language-css\">@media (prefers-reduced-motion) {\n  path {\n    animation: none !important;\n    stroke-dasharray: unset !important;\n  }\n}\n@keyframes grow {\n  0% {\n    stroke-dashoffset: 1px;\n    stroke-dasharray: 0 350px;\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  40% {\n    stroke-dasharray: 350px 0;\n  }\n  /* Moving back */\n  85% {\n    stroke-dasharray: 350px 0;\n  }\n  95%, to {\n    stroke-dasharray: 0 350px;\n  }\n}\npath {\n  stroke-dashoffset: 1px;\n  stroke-dasharray: 350px 0;\n  animation: grow 10s ease forwards infinite;\n  transform-origin: center;\n  stroke: #303030;\n  animation-delay: 0s;\n}\n</code></pre>\n<p>now we have a decent animated logo:</p>\n<p>\n  <a href=\"/favicon-animated-stroke.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>The only downside is that the stroke is evenly thick everywhere, making it looks less like a signature. I tried to look for solutions and end up with the <a href=\"https://www.w3.org/Graphics/SVG/WG/wiki/Proposals/Variable_width_stroke\">Variable width stroke proposal</a>, however, it does not seem to be going anywhere. Well, it's stroke anyway, it's supposed to be even. Giving the animation is super cool already, what else can I ask for?</p>\n<h2>Variable Stroke Width</h2>\n<p>When I almost gave up, I was playing around with Figma to do some final cleanup with the drafts, I suddenly realized that SVG does have mask support. So what if I have the original SVG shape as the mask, and let the stroke animate inside the mask? So I gave it a try and surprisingly it works!</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-mask.png\" />\n</div>\n<p>Basically we are using the mask to limit the stroke's visibility, a trick to workaround the limitation of the stroke width. Note it's not 100% pixel-perfect, as in the interaction we can't control the stroke width, so the stroke will be a bit off the mask. We can try to adjust the mask to make it look a bit better, but you will still see a big glitch when zooming in a lot. I guess it might be possible to solve this with multiple strokes and masks, but this one is already quite good to me.</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>Hope you enjoy the article, and I'd love to see your animated SVG logo too!</p>",
    "summary": "<p>I recently replaced the logo on the top left corner with an animated SVG:</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<h2>Inspiration</h2>\n<p>The first time I saw such stroke animations in SVG is the <a href=\"https://icones.js.org/collection/line-md\">Material Line Icons</a> by <a href=\"https://github.com/cyberalien\">Vjacheslav Trushkin</a>. It was cool, but I never thought about making one my own until I saw <a href=\"https://muan.co/\">Mu-An Chiou</a>'s <a href=\"https://muan.co/pages/banners\">banner</a> on her website. I suddenly feel like I want to be the cool guy too!</p>\n<h2>Breakdown</h2>\n<p>I downloaded Mu-An's SVG to read the code, cross-referencing the Material Line Icons. I found the trick is quite interesting, they animated <code>stroke-dasharray</code> to achieve the effect. This feels quite unintuitive as when you check the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\">MDN documentation</a>, it looks like a pretty boring attribute.</p>\n<p>I searched a bit more and found these two interesting articles:</p>\n<ul>\n<li><a href=\"https://jakearchibald.com/2013/animated-line-drawing-svg/\">Animated line drawing in SVG</a> by Jake Archibald</li>\n<li><a href=\"https://css-tricks.com/svg-line-animation-works/\">How SVG Line Animation Works</a> by Chris Coyier</li>\n</ul>\n<p>They covered this technique very well, highly recommend reading them if you are interested. Basically, the animation is done by a <strong>very long</strong> dash moving, in which you will see the dash as the drawing line and the gap as empty space. The length and position of the dash are controlled by <code>stroke-dasharray</code> and <code>stroke-dashoffset</code>, which are both animatable.</p>\n<h2>The Original Logo</h2>\n<p>My original logo <a href=\"/logo.svg\" target=\"_blank\"><img alt=\"My Logo in SVG\" src=\"https://antfu.me/logo.svg\" /></a> comes from around 8 years ago, I draw it with a pressure-sensitive pen on my Surface Pro 4. It was used as a temporary placeholder for the portfolio I was trying to build at that time. I later image-traced it with Adobe Illustrator to get the SVG version. Surprising to recall, it has been so long since then.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-vector.png\" />\n</div>\n<h2>Rework the Logo</h2>\n<p>As we see, the animation is done by moving the dash on strokes, while my Logo is a vector outline with multiple control points. So I need to redraw it with a single stroke. It took a bit of practice to get used to the <a href=\"https://blog.openreplay.com/using-the-pen-tool-in-figma/\">pen tool</a>, I managed to make it with Figma.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-redraw.png\" />\n</div>\n<p>Manually adding the styles in the exported SVG,</p>\n<pre><code class=\"language-css\">@media (prefers-reduced-motion) {\n  path {\n    animation: none !important;\n    stroke-dasharray: unset !important;\n  }\n}\n@keyframes grow {\n  0% {\n    stroke-dashoffset: 1px;\n    stroke-dasharray: 0 350px;\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  40% {\n    stroke-dasharray: 350px 0;\n  }\n  /* Moving back */\n  85% {\n    stroke-dasharray: 350px 0;\n  }\n  95%, to {\n    stroke-dasharray: 0 350px;\n  }\n}\npath {\n  stroke-dashoffset: 1px;\n  stroke-dasharray: 350px 0;\n  animation: grow 10s ease forwards infinite;\n  transform-origin: center;\n  stroke: #303030;\n  animation-delay: 0s;\n}\n</code></pre>\n<p>now we have a decent animated logo:</p>\n<p>\n  <a href=\"/favicon-animated-stroke.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>The only downside is that the stroke is evenly thick everywhere, making it looks less like a signature. I tried to look for solutions and end up with the <a href=\"https://www.w3.org/Graphics/SVG/WG/wiki/Proposals/Variable_width_stroke\">Variable width stroke proposal</a>, however, it does not seem to be going anywhere. Well, it's stroke anyway, it's supposed to be even. Giving the animation is super cool already, what else can I ask for?</p>\n<h2>Variable Stroke Width</h2>\n<p>When I almost gave up, I was playing around with Figma to do some final cleanup with the drafts, I suddenly realized that SVG does have mask support. So what if I have the original SVG shape as the mask, and let the stroke animate inside the mask? So I gave it a try and surprisingly it works!</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-mask.png\" />\n</div>\n<p>Basically we are using the mask to limit the stroke's visibility, a trick to workaround the limitation of the stroke width. Note it's not 100% pixel-perfect, as in the interaction we can't control the stroke width, so the stroke will be a bit off the mask. We can try to adjust the mask to make it look a bit better, but you will still see a big glitch when zooming in a lot. I guess it might be possible to solve this with multiple strokes and masks, but this one is already quite good to me.</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>Hope you enjoy the article, and I'd love to see your animated SVG logo too!</p>",
    "content": "<p>I recently replaced the logo on the top left corner with an animated SVG:</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<h2>Inspiration</h2>\n<p>The first time I saw such stroke animations in SVG is the <a href=\"https://icones.js.org/collection/line-md\">Material Line Icons</a> by <a href=\"https://github.com/cyberalien\">Vjacheslav Trushkin</a>. It was cool, but I never thought about making one my own until I saw <a href=\"https://muan.co/\">Mu-An Chiou</a>'s <a href=\"https://muan.co/pages/banners\">banner</a> on her website. I suddenly feel like I want to be the cool guy too!</p>\n<h2>Breakdown</h2>\n<p>I downloaded Mu-An's SVG to read the code, cross-referencing the Material Line Icons. I found the trick is quite interesting, they animated <code>stroke-dasharray</code> to achieve the effect. This feels quite unintuitive as when you check the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\">MDN documentation</a>, it looks like a pretty boring attribute.</p>\n<p>I searched a bit more and found these two interesting articles:</p>\n<ul>\n<li><a href=\"https://jakearchibald.com/2013/animated-line-drawing-svg/\">Animated line drawing in SVG</a> by Jake Archibald</li>\n<li><a href=\"https://css-tricks.com/svg-line-animation-works/\">How SVG Line Animation Works</a> by Chris Coyier</li>\n</ul>\n<p>They covered this technique very well, highly recommend reading them if you are interested. Basically, the animation is done by a <strong>very long</strong> dash moving, in which you will see the dash as the drawing line and the gap as empty space. The length and position of the dash are controlled by <code>stroke-dasharray</code> and <code>stroke-dashoffset</code>, which are both animatable.</p>\n<h2>The Original Logo</h2>\n<p>My original logo <a href=\"/logo.svg\" target=\"_blank\"><img alt=\"My Logo in SVG\" src=\"https://antfu.me/logo.svg\" /></a> comes from around 8 years ago, I draw it with a pressure-sensitive pen on my Surface Pro 4. It was used as a temporary placeholder for the portfolio I was trying to build at that time. I later image-traced it with Adobe Illustrator to get the SVG version. Surprising to recall, it has been so long since then.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-vector.png\" />\n</div>\n<h2>Rework the Logo</h2>\n<p>As we see, the animation is done by moving the dash on strokes, while my Logo is a vector outline with multiple control points. So I need to redraw it with a single stroke. It took a bit of practice to get used to the <a href=\"https://blog.openreplay.com/using-the-pen-tool-in-figma/\">pen tool</a>, I managed to make it with Figma.</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-redraw.png\" />\n</div>\n<p>Manually adding the styles in the exported SVG,</p>\n<pre><code class=\"language-css\">@media (prefers-reduced-motion) {\n  path {\n    animation: none !important;\n    stroke-dasharray: unset !important;\n  }\n}\n@keyframes grow {\n  0% {\n    stroke-dashoffset: 1px;\n    stroke-dasharray: 0 350px;\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  40% {\n    stroke-dasharray: 350px 0;\n  }\n  /* Moving back */\n  85% {\n    stroke-dasharray: 350px 0;\n  }\n  95%, to {\n    stroke-dasharray: 0 350px;\n  }\n}\npath {\n  stroke-dashoffset: 1px;\n  stroke-dasharray: 350px 0;\n  animation: grow 10s ease forwards infinite;\n  transform-origin: center;\n  stroke: #303030;\n  animation-delay: 0s;\n}\n</code></pre>\n<p>now we have a decent animated logo:</p>\n<p>\n  <a href=\"/favicon-animated-stroke.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>The only downside is that the stroke is evenly thick everywhere, making it looks less like a signature. I tried to look for solutions and end up with the <a href=\"https://www.w3.org/Graphics/SVG/WG/wiki/Proposals/Variable_width_stroke\">Variable width stroke proposal</a>, however, it does not seem to be going anywhere. Well, it's stroke anyway, it's supposed to be even. Giving the animation is super cool already, what else can I ask for?</p>\n<h2>Variable Stroke Width</h2>\n<p>When I almost gave up, I was playing around with Figma to do some final cleanup with the drafts, I suddenly realized that SVG does have mask support. So what if I have the original SVG shape as the mask, and let the stroke animate inside the mask? So I gave it a try and surprisingly it works!</p>\n<div border=\"~ base op20\">\n<img src=\"/images/animated-svg-logo-mask.png\" />\n</div>\n<p>Basically we are using the mask to limit the stroke's visibility, a trick to workaround the limitation of the stroke width. Note it's not 100% pixel-perfect, as in the interaction we can't control the stroke width, so the stroke will be a bit off the mask. We can try to adjust the mask to make it look a bit better, but you will still see a big glitch when zooming in a lot. I guess it might be possible to solve this with multiple strokes and masks, but this one is already quite good to me.</p>\n<p>\n  <a href=\"/favicon-animated.svg\" target=\"_blank\">\n    \n  </a>\n</p>\n<p>Hope you enjoy the article, and I'd love to see your animated SVG logo too!</p>",
    "pub_date": "2023-07-19T00:00:00Z",
    "upd_date": "2023-07-19T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:16.604Z",
    "updated": "2023-10-09T09:35:16.604Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 132,
  "fields": {
    "feed": 3,
    "title": "pnpm on External disk",
    "author": "hi@antfu.me (Anthony Fu)",
    "url": "https://antfu.me/posts/pnpm-external-disk",
    "image_url": "https://antfu.me/og/pnpm-external-disk.png",
    "description": "<p>If you tried to use <a href=\"https://pnpm.io/\">pnpm</a> to install a project on an external disk, it may not work right away because pnpm is heavily relying on symlinks, which doesn't work cross mount points. To workaround this, you can add the following config to your <code>.npmrc</code>:</p>\n<pre><code class=\"language-ini\">package-import-method=copy\nprefer-symlinked-executables=false\n</code></pre>\n<p>This will make pnpm copy the files instead of symlinking them. And expose the executables in <code>node_modules/.bin</code> correctly.</p>",
    "summary": "<p>If you tried to use <a href=\"https://pnpm.io/\">pnpm</a> to install a project on an external disk, it may not work right away because pnpm is heavily relying on symlinks, which doesn't work cross mount points. To workaround this, you can add the following config to your <code>.npmrc</code>:</p>\n<pre><code class=\"language-ini\">package-import-method=copy\nprefer-symlinked-executables=false\n</code></pre>\n<p>This will make pnpm copy the files instead of symlinking them. And expose the executables in <code>node_modules/.bin</code> correctly.</p>",
    "content": "<p>If you tried to use <a href=\"https://pnpm.io/\">pnpm</a> to install a project on an external disk, it may not work right away because pnpm is heavily relying on symlinks, which doesn't work cross mount points. To workaround this, you can add the following config to your <code>.npmrc</code>:</p>\n<pre><code class=\"language-ini\">package-import-method=copy\nprefer-symlinked-executables=false\n</code></pre>\n<p>This will make pnpm copy the files instead of symlinking them. And expose the executables in <code>node_modules/.bin</code> correctly.</p>",
    "pub_date": "2023-07-13T12:00:00Z",
    "upd_date": "2023-07-13T12:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:16.951Z",
    "updated": "2023-10-09T09:35:16.951Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 133,
  "fields": {
    "feed": 2,
    "title": "“Boost Your Git DX” out now",
    "author": "Adam Johnson",
    "url": "https://adamj.eu/tech/2023/10/04/boost-your-git-dx-out-now/",
    "image_url": "https://adamj.eu/tech/assets/2023-10-04-boost-your-git-dx.jpeg",
    "description": "<p>My new book, <strong>Boost Your Git DX</strong> is out now, on my birthday 🥳.\nIt’s taken nearly a year of work with four months in early access.</p>\n<p>This book is 353 pages across 18 chapters on improving your Git command line development experience.\nIt covers the best tools, techniques, tips …</p>",
    "summary": "<p>My new book, <strong>Boost Your Git DX</strong> is out now, on my birthday 🥳.\nIt’s taken nearly a year of work with four months in early access.</p>\n<p>This book is 353 pages across 18 chapters on improving your Git command line development experience.\nIt covers the best tools, techniques, tips …</p>",
    "content": "<p>My new book, <strong>Boost Your Git DX</strong> is out now, on my birthday 🥳.\nIt’s taken nearly a year of work with four months in early access.</p>\n<p>This book is 353 pages across 18 chapters on improving your Git command line development experience.\nIt covers the best tools, techniques, tips, tricks, and tactical tidbits that I’ve encountered in 11 years of using Git.</p>\n<p><a class=\"reference external\" href=\"https://adamchainz.gumroad.com/l/bygdx\"><strong>Buy it now on Gumroad</strong></a></p>\n<p>Team licenses are available and there’s an automatic regional discount for those in lower-income countries.\nIt comes in DRM-free PDF, ePub, and AZW3.</p>\n<div class=\"section\" id=\"praise\">\n<h2>Praise<a class=\"headerlink\" href=\"#praise\" title=\"Permalink to this headline\"></a></h2>\n<p>Response from beta and early access readers has been encouraging.\nThere’s a list of public posts about the book at the bottom of <a class=\"reference external\" href=\"https://adamchainz.gumroad.com/l/bygdx\">the Gumroad page</a>.\nHere’s a selection:</p>\n<!--  -->\n<blockquote>\n<p>whether you're new to git or an experienced veteran -- &#64;AdamChainz's new book &quot;Boost Your Git DX&quot; has something for everyone!\n(even I learned a cool new thing: <code class=\"docutils literal\">git config <span class=\"pre\">--show-origin</span></code>)</p>\n<p class=\"attribution\">&mdash;<a class=\"reference external\" href=\"https://twitter.com/codewithanthony/status/1669403893061566466\">Anthony Sottile on Twitter</a></p>\n</blockquote>\n<!--  -->\n<blockquote>\n<p>Adam's written two books before (Boost Your Django DX; Speed Up Your Django Tests) — both paid for themselves within the first hour of my purchase.</p>\n<p>This one's a no-brainer, too.</p>\n<p class=\"attribution\">&mdash;<a class=\"reference external\" href=\"https://twitter.com/jmduke/status/1670825930548281344\">Justin Duke on Twitter</a></p>\n</blockquote>\n<!--  -->\n<blockquote>\n<p>This book transformed my day-to-day operations. As a self-taught engineer, I have found myself starved for mentorship, and Boost Your Git DX has been my most influential mentor in 2023.</p>\n<p class=\"attribution\">&mdash;<a class=\"reference external\" href=\"https://startcodingnow.com/git-config-tips\">Lance Goyke on his blog</a></p>\n</blockquote>\n</div>\n<div class=\"section\" id=\"free-samples\">\n<h2>Free samples<a class=\"headerlink\" href=\"#free-samples\" title=\"Permalink to this headline\"></a></h2>\n<p>Some of the book’s content is adapted from previous posts, including:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"/tech/2022/11/06/git-set-up-a-global-ignore-file/\">Set up a global ignore file</a></li>\n<li><a class=\"reference external\" href=\"/tech/2022/10/26/git-how-to-enable-autocorrect/\">Enable autocorrect</a></li>\n<li><a class=\"reference external\" href=\"/tech/2022/10/31/git-how-to-automatically-create-upstream-branches/\">Automatically create upstream branches</a></li>\n</ul>\n</div>\n<div class=\"section\" id=\"full-table-of-contents\">\n<h2>Full table of contents<a class=\"headerlink\" href=\"#full-table-of-contents\" title=\"Permalink to this headline\"></a></h2>\n<p>Here’s what you’ll learn within:</p>\n<ol class=\"arabic simple\">\n<li>Introduction<ol class=\"arabic\">\n<li>About this book<ul>\n<li>Read in any order</li>\n<li>Example commands and resources</li>\n<li>End-of-chapter feedback links</li>\n</ul>\n</li>\n<li>Acknowledgements</li>\n<li>Changelog</li>\n</ol>\n</li>\n<li>Global configuration<ol class=\"arabic\">\n<li>Git’s configuration files<ul>\n<li>Store global configuration in <code class=\"docutils literal\"><span class=\"pre\">~/.config/git</span></code></li>\n<li>Migrate from legacy <code class=\"docutils literal\"><span class=\"pre\">~/.gitconfig</span></code> to <code class=\"docutils literal\"><span class=\"pre\">~/.config/git/config</span></code></li>\n<li>Read and change options with <code class=\"docutils literal\">git config</code></li>\n<li>Trace options with <code class=\"docutils literal\">git config <span class=\"pre\">--show-scope</span></code> and <code class=\"docutils literal\"><span class=\"pre\">--show-origin</span></code></li>\n</ul>\n</li>\n<li>Basic configuration<ul>\n<li>Set your name and email address</li>\n<li>Use a different email address based on the working directory</li>\n<li>Use your favourite editor</li>\n<li>Set up a global ignore file</li>\n<li>Improve the default colourization with <code class=\"docutils literal\">color.*</code> options</li>\n<li>Enable <code class=\"docutils literal\">help.autoCorrect</code> to fix mistyped commands</li>\n</ul>\n</li>\n<li>Back up your configuration<ul>\n<li>Set up your dotfiles repository</li>\n<li>Save ongoing configuration changes</li>\n<li>Track other configuration files</li>\n<li>Restore your backup</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Aliases<ol class=\"arabic\">\n<li>Shell aliases<ul>\n<li>Create shell aliases with <code class=\"docutils literal\">alias <span class=\"pre\">&lt;name&gt;=&lt;command&gt;</span></code></li>\n<li>List aliases with <code class=\"docutils literal\">alias</code></li>\n<li>Bypass aliases with <code class=\"docutils literal\">\\</code></li>\n</ul>\n</li>\n<li>Git aliases<ul>\n<li>Create an alias that runs a single Git command</li>\n<li>Create an alias that runs shell commands</li>\n<li>Add a <code class=\"docutils literal\">git git</code> alias to help when you lose attention</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Shell configuration<ol class=\"arabic\">\n<li>oh-my-zsh: instant enhancements and aliases<ul>\n<li>Install oh-my-zsh</li>\n<li>Some handy Git aliases</li>\n<li>Learn your aliases on the go with zsh-you-should-use</li>\n</ul>\n</li>\n<li>Starship: a powerful, performant prompt<ul>\n<li>Install Starship</li>\n<li>Personalize your prompt</li>\n<li>Read Git state at a glance with Starship’s prompt</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Shell tools<ol class=\"arabic\">\n<li>Less: the power pager<ul>\n<li>Activate lesser-known features with the <code class=\"docutils literal\">LESS</code> environment variable</li>\n<li>Scroll and search with keyboard shortcuts</li>\n<li>Search forwards with <code class=\"docutils literal\">/</code> and backwards with <code class=\"docutils literal\">?</code></li>\n<li>Use Less with more Git commands</li>\n</ul>\n</li>\n<li>delta: dapper diff display<ul>\n<li>Set up Git to use delta</li>\n<li>How delta enhances Git’s output</li>\n<li>Run delta directly as a diff tool</li>\n</ul>\n</li>\n<li>ripgrep: rip-roaringly rapid grep<ul>\n<li>Install ripgrep</li>\n<li>Search basics</li>\n<li>Change case sensitivity with <code class=\"docutils literal\"><span class=\"pre\">-i</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-S</span></code></li>\n<li>Unrestrict searches with specific options or <code class=\"docutils literal\"><span class=\"pre\">-u</span></code></li>\n<li>Filter by file extensions with <code class=\"docutils literal\"><span class=\"pre\">-g</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-t</span></code></li>\n<li>Configure ripgrep in <code class=\"docutils literal\"><span class=\"pre\">~/.config/ripgreprc</span></code></li>\n<li>Combine with delta for lovely formatting</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Repository configuration<ol class=\"arabic\">\n<li>Default branch naming<ul>\n<li>Use <code class=\"docutils literal\">main</code> for your default branches</li>\n<li>Alias <code class=\"docutils literal\">master</code> as <code class=\"docutils literal\">main</code> in legacy repositories</li>\n</ul>\n</li>\n<li>Ignore files<ul>\n<li>The basics of ignore files</li>\n<li>Ignore file tips</li>\n<li>Commands for debugging ignore files</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Hooks and the pre-commit framework<ol class=\"arabic\">\n<li>Git hooks</li>\n<li>pre-commit: Universal Hook Manager<ul>\n<li>Install pre-commit</li>\n<li>Configure pre-commit</li>\n<li>Update hooks with <code class=\"docutils literal\"><span class=\"pre\">pre-commit</span> autoupdate</code></li>\n<li>Extra protection from pre-commit-hooks</li>\n<li>ripsecrets: Protect your secrets</li>\n<li>Find more hooks</li>\n<li>Skip hooks temporarily with <code class=\"docutils literal\"><span class=\"pre\">--no-verify</span></code> or <code class=\"docutils literal\">SKIP</code></li>\n<li>oh-my-zsh plugin</li>\n<li>pre-commit ci: continuous integration for your hooks</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Command commonalities<ol class=\"arabic\">\n<li>Common options<ul>\n<li>Get short or long help with <code class=\"docutils literal\"><span class=\"pre\">-h</span></code> or <code class=\"docutils literal\"><span class=\"pre\">--help</span></code></li>\n<li>Override configuration with <code class=\"docutils literal\"><span class=\"pre\">-c</span></code></li>\n<li>Use repositories in other directories with <code class=\"docutils literal\"><span class=\"pre\">-C</span></code></li>\n</ul>\n</li>\n<li>Commit SHAs<ul>\n<li>SHA abbreviation</li>\n<li>Show and copy the current commit SHA</li>\n<li>SHA-1 versus SHA-256</li>\n</ul>\n</li>\n<li>Commit references<ul>\n<li>Single commit references</li>\n<li>Commit range references</li>\n</ul>\n</li>\n<li>Date specifications<ul>\n<li>Top formats</li>\n</ul>\n</li>\n<li>Pathspecs<ul>\n<li>Top pathspec syntaxes</li>\n<li>Using pathspecs</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Branches and <code class=\"docutils literal\">worktree</code><ol class=\"arabic\">\n<li>Switching branches<ul>\n<li>Use <code class=\"docutils literal\">git switch</code> instead of <code class=\"docutils literal\">git checkout</code></li>\n<li>Top <code class=\"docutils literal\">git switch</code> commands</li>\n</ul>\n</li>\n<li>Listing branches<ul>\n<li>Basic branch listing commands</li>\n<li>Sort by recency and switch with fzf (fuzzy finder)</li>\n<li>Find branches missing a given commit</li>\n</ul>\n</li>\n<li>Deleting old branches<ul>\n<li>Configure your Git host to delete merged branches</li>\n<li>Enable automatic pruning of remote branches</li>\n<li>Add an alias to delete local branches</li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">worktree</code><ul>\n<li><code class=\"docutils literal\">worktree</code> basics</li>\n<li>Using a worktree to write a hotfix</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">status</code> and <code class=\"docutils literal\">diff</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">status</code><ul>\n<li>Use short format for denser output</li>\n<li>Shorten long format by disabling advice with <code class=\"docutils literal\">advice.statusHints</code></li>\n<li>Hide untracked files with <code class=\"docutils literal\"><span class=\"pre\">-uno</span></code></li>\n<li>List changed files with <code class=\"docutils literal\">git diff <span class=\"pre\">--name-only</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">diff</code><ul>\n<li>Improve diff generation with the “histogram” algorithm</li>\n<li>Enable inter-hunk context for more… context</li>\n<li>Enable language-specific hunk headings</li>\n<li>Use ExifTool to diff media files</li>\n<li>Use Pandoc to diff document files</li>\n<li>Disable file path prefixes to make them copyable</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">add</code> and <code class=\"docutils literal\">restore</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">add</code> (and <code class=\"docutils literal\">mv</code> and <code class=\"docutils literal\">rm</code>)<ul>\n<li>The three commands: <code class=\"docutils literal\">add</code>, <code class=\"docutils literal\">mv</code>, and <code class=\"docutils literal\">rm</code></li>\n<li>Add interactively with <code class=\"docutils literal\">git add <span class=\"pre\">-p</span></code></li>\n<li>Add all changes with <code class=\"docutils literal\">git add <span class=\"pre\">-u</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-A</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">restore</code><ul>\n<li>Use <code class=\"docutils literal\">git restore</code> instead of <code class=\"docutils literal\">checkout</code> and <code class=\"docutils literal\">reset</code></li>\n<li>Top <code class=\"docutils literal\">git restore</code> commands</li>\n<li>Restore interactively with <code class=\"docutils literal\"><span class=\"pre\">-p</span></code></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">commit</code> and <code class=\"docutils literal\">reset</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">commit</code><ul>\n<li>Improve commit message editing with verbose mode and “scissors” cleanup</li>\n<li>Use <code class=\"docutils literal\"><span class=\"pre\">-m</span></code> to set the message without your editor</li>\n<li>Use <code class=\"docutils literal\"><span class=\"pre\">-a</span></code> or an alias to add all files and commit</li>\n<li>Declare coauthors in <code class=\"docutils literal\"><span class=\"pre\">co-authored-by</span></code> trailers</li>\n<li>Update the previous commit with <code class=\"docutils literal\"><span class=\"pre\">--amend</span></code></li>\n<li>Create empty commits with <code class=\"docutils literal\"><span class=\"pre\">--allow-empty</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">reset</code><ul>\n<li>Undo commits and keep their changes with <code class=\"docutils literal\"><span class=\"pre\">--mixed</span></code> or <code class=\"docutils literal\"><span class=\"pre\">--soft</span></code></li>\n<li>Undo commits and discard their changes with <code class=\"docutils literal\"><span class=\"pre\">--keep</span></code> (not <code class=\"docutils literal\"><span class=\"pre\">--hard</span></code>)</li>\n<li>Useful commit references for resetting</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">stash</code> and <code class=\"docutils literal\">apply</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">stash</code><ul>\n<li><code class=\"docutils literal\">stash</code> basics</li>\n<li>Push stash entries with a description with <code class=\"docutils literal\"><span class=\"pre\">-m</span></code></li>\n<li>Stash selected files by pathspec</li>\n<li>Stash only unstaged changes with <code class=\"docutils literal\"><span class=\"pre\">-k</span></code> or staged changes with <code class=\"docutils literal\"><span class=\"pre\">-S</span></code></li>\n<li>Stash selected hunks interactively with <code class=\"docutils literal\"><span class=\"pre\">-p</span></code></li>\n<li>Automatically stash during merge and rebase with the autostash options</li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">apply</code><ul>\n<li><code class=\"docutils literal\">apply</code> basics</li>\n<li>Send and receive patches by copy and paste</li>\n<li><code class=\"docutils literal\">apply</code> outside of a Git repository</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">push</code> and <code class=\"docutils literal\">pull</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">push</code><ul>\n<li>Automatically create upstream branches with <code class=\"docutils literal\">push.autoSetupRemote</code></li>\n<li>Force push with safety features</li>\n<li>Push a commit and its annotated tags with <code class=\"docutils literal\"><span class=\"pre\">--follow-tags</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">pull</code><ul>\n<li>Rebase divergent branches when you pull with <code class=\"docutils literal\">pull.rebase</code></li>\n<li>Make a branch pull from and push to different remotes</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">merge</code> and <code class=\"docutils literal\">rebase</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">merge</code><ul>\n<li>Improve conflict display with the <code class=\"docutils literal\">zdiff3</code> style</li>\n<li>Open all conflicted files with the <code class=\"docutils literal\"><span class=\"pre\">edit-unmerged</span></code> alias</li>\n<li>Enable rerere to reuse recorded (conflict) resolutions</li>\n<li>Pick one side of conflicts with <code class=\"docutils literal\">git restore</code> or <code class=\"docutils literal\">git merge <span class=\"pre\">-X</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">rebase</code><ul>\n<li>Control rebasing with interactive mode (<code class=\"docutils literal\"><span class=\"pre\">-i</span></code>)</li>\n<li>Top interactive mode actions</li>\n<li>Squash and rebase a branch with <code class=\"docutils literal\"><span class=\"pre\">--keep-base</span></code></li>\n<li>Rebase stacked branches with <code class=\"docutils literal\"><span class=\"pre\">--update-refs</span></code></li>\n<li>Run a command at each step with <code class=\"docutils literal\"><span class=\"pre\">-x</span></code></li>\n<li>Automatically fix up commits with <code class=\"docutils literal\">rebase.autoSquash</code></li>\n<li>Drop already-merged commits with <code class=\"docutils literal\"><span class=\"pre\">--empty</span> drop</code></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">log</code> and <code class=\"docutils literal\">reflog</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">log</code><ul>\n<li>Three levels of detail: <code class=\"docutils literal\"><span class=\"pre\">--oneline</span></code>, <code class=\"docutils literal\"><span class=\"pre\">--stat</span></code>, and <code class=\"docutils literal\"><span class=\"pre\">--patch</span></code></li>\n<li>Reveal branching structure with <code class=\"docutils literal\"><span class=\"pre\">--graph</span></code></li>\n<li>Filter by changes with the pickaxe options <code class=\"docutils literal\"><span class=\"pre\">-S</span></code> and <code class=\"docutils literal\"><span class=\"pre\">-G</span></code></li>\n<li>Filter by commit message content with <code class=\"docutils literal\"><span class=\"pre\">--grep</span></code></li>\n<li>Restrict time with <code class=\"docutils literal\"><span class=\"pre\">--since</span></code> and <code class=\"docutils literal\"><span class=\"pre\">--until</span></code></li>\n<li>Sort oldest first with <code class=\"docutils literal\"><span class=\"pre\">--reverse</span></code></li>\n<li>Follow changes to a single file with <code class=\"docutils literal\"><span class=\"pre\">--follow</span></code></li>\n<li>Follow changes to a code block with <code class=\"docutils literal\"><span class=\"pre\">-L</span></code></li>\n<li>Reveal hidden changes in merge commits with <code class=\"docutils literal\"><span class=\"pre\">--cc</span></code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">reflog</code><ul>\n<li><code class=\"docutils literal\">reflog</code> basics</li>\n<li>Restore a deleted branch</li>\n<li>Undo a commit amendment</li>\n<li>Undo a bad rebase</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><code class=\"docutils literal\">blame</code> and <code class=\"docutils literal\">bisect</code><ol class=\"arabic\">\n<li><code class=\"docutils literal\">blame</code><ul>\n<li><code class=\"docutils literal\">blame</code> basics</li>\n<li>Blame a code block with <code class=\"docutils literal\"><span class=\"pre\">-L</span></code></li>\n<li>Ignore mass-change commits with <code class=\"docutils literal\">blame.ignoreRevsFile</code></li>\n</ul>\n</li>\n<li><code class=\"docutils literal\">bisect</code><ul>\n<li><code class=\"docutils literal\">bisect</code> basics</li>\n<li>Mark a commit as untestable with <code class=\"docutils literal\">git bisect skip</code></li>\n<li>Automate testing with <code class=\"docutils literal\">git bisect run</code></li>\n<li>Automate testing of performance regressions</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>Outroduction<ol class=\"arabic\">\n<li>Honourable mentions<ul>\n<li>Git features</li>\n<li>Extra tools</li>\n<li>Just for fun</li>\n</ul>\n</li>\n<li>Further reading<ul>\n<li>Git updates</li>\n<li>Git under the hood</li>\n</ul>\n</li>\n<li>Thank you</li>\n</ol>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"acknowledgements\">\n<h2>Acknowledgements<a class=\"headerlink\" href=\"#acknowledgements\" title=\"Permalink to this headline\"></a></h2>\n<p>Many thanks to everyone who has helped me assemble this book.</p>\n<p>My gratitude to Linus Torvalds for creating Git, Junio Hamano for maintaining it since 2005, and everyone who has contributed to it.\nThe project is consistently managed and thoroughly documented, so as a stable platform, it’s a joy to use and write about.</p>\n<p>Thank you to everyone who has ever written a blog post about Git.\nI probably read every such post during the research phase and learned a hell of a lot.</p>\n<p>Also thanks to the hosts and guests on the two past Git podcasts: Git Minutes and All Things Git.\nI learned a lot of history trawling the archives.</p>\n<p>I’d like to particularly thank all beta and early access readers who gave me feedback:\nAdrien Cossa,\nAlex McLarty,\nAngus Johnson (thanks Dad!),\nAnthony Sottile,\nCarles Pina i Estany,\nCarlton Gibson,\nDan O’Leary,\nDaniel Andrlik,\nGlenn Dufke,\nHugo van Kemenade,\nJames Cooke,\nJeroen Janssens,\nJonathan Evans,\nJulius Šėporaitis,\nLance Goyke,\nNgazetungue Muheue,\nPascal Fouque,\nRodrigo Girão Serrão,\nSage Abdullah,\nSpark Perreras,\nThibaud Colas,\nand William Berg.</p>\n<p>I would also like to thank my dear wife, Mafalda, for helping me find the time to write and prodding me towards the end.\nAnd similarly, I am grateful for the support of my parents, brother, sister-in-law, mother-in-law, and extended family.</p>\n<p>I thank my baby boy Gerry for looking lovely, especially while sleeping strapped to my chest during the initial authoring process.</p>\n<p>And finally, thank you, dear reader, for purchasing this book.\nI hope you learn some valuable things.</p>\n</div>\n<div class=\"section\" id=\"fin\">\n<h2>Fin<a class=\"headerlink\" href=\"#fin\" title=\"Permalink to this headline\"></a></h2>\n<p>May your development experience ever improve,</p>\n<p>—Adam</p>\n</div>",
    "pub_date": "2023-10-03T23:00:00Z",
    "upd_date": "2023-10-03T23:00:00Z",
    "is_read": true,
    "is_favorite": true,
    "created": "2023-10-09T09:35:17.233Z",
    "updated": "2023-10-09T09:36:43.452Z",
    "tags": [
      98,
      118
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 134,
  "fields": {
    "feed": 2,
    "title": "Git: Show the initial (root) commit",
    "author": "Adam Johnson",
    "url": "https://adamj.eu/tech/2023/09/30/git-show-initial-root-commit/",
    "image_url": "https://adamj.eu/tech/assets/2023-09-30-thistle.jpeg",
    "description": "<p>To show the initial, or <strong>root</strong>, commit* of your repository, use:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n</pre></div>\n<p>(*There may be multiple, as we’ll see.)</p>\n<p>For example, on the <a class=\"reference external\" href=\"https://github.com/django/django\">Django repository</a>:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"gu\">commit</span><span class=\"go\"> </span><span class=\"mh\">d6ded0e91bcdd2a8f7a221f6a5552a33fe545359</span>\n<span class=\"kd\">Author:</span><span class=\"go\"> </span><span class=\"ss\">Jacob Kaplan-Moss &lt;...&gt;</span>\n<span class=\"kd\">Date:</span><span class=\"go\">   </span><span class=\"ss\">Wed Jul 13 16:56:05 2005 +0000</span>\n\n<span class=\"go\">    Created basic repository …</span></pre></div>",
    "summary": "<p>To show the initial, or <strong>root</strong>, commit* of your repository, use:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n</pre></div>\n<p>(*There may be multiple, as we’ll see.)</p>\n<p>For example, on the <a class=\"reference external\" href=\"https://github.com/django/django\">Django repository</a>:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"gu\">commit</span><span class=\"go\"> </span><span class=\"mh\">d6ded0e91bcdd2a8f7a221f6a5552a33fe545359</span>\n<span class=\"kd\">Author:</span><span class=\"go\"> </span><span class=\"ss\">Jacob Kaplan-Moss &lt;...&gt;</span>\n<span class=\"kd\">Date:</span><span class=\"go\">   </span><span class=\"ss\">Wed Jul 13 16:56:05 2005 +0000</span>\n\n<span class=\"go\">    Created basic repository …</span></pre></div>",
    "content": "<p>To show the initial, or <strong>root</strong>, commit* of your repository, use:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n</pre></div>\n<p>(*There may be multiple, as we’ll see.)</p>\n<p>For example, on the <a class=\"reference external\" href=\"https://github.com/django/django\">Django repository</a>:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"gu\">commit</span><span class=\"go\"> </span><span class=\"mh\">d6ded0e91bcdd2a8f7a221f6a5552a33fe545359</span>\n<span class=\"kd\">Author:</span><span class=\"go\"> </span><span class=\"ss\">Jacob Kaplan-Moss &lt;...&gt;</span>\n<span class=\"kd\">Date:</span><span class=\"go\">   </span><span class=\"ss\">Wed Jul 13 16:56:05 2005 +0000</span>\n\n<span class=\"go\">    Created basic repository structure</span>\n\n<span class=\"go\">    git-svn-id: http://code.djangoproject.com/svn/django/trunk@1 bcc190cf-cafb-0310-a4f2-bffc1f526a37</span>\n</pre></div>\n<p>Add other <code class=\"docutils literal\">git log</code> formatting options as necessary, such as <a class=\"reference external\" href=\"https://git-scm.com/docs/git-log#Documentation/git-log.txt--p\"><code class=\"docutils literal\"><span class=\"pre\">-p</span></code> (<code class=\"docutils literal\"><span class=\"pre\">--patch</span></code>)</a> to show the diff.\n<code class=\"docutils literal\"><span class=\"pre\">--format='%H'</span></code> will output only commit SHAs, useful for scripting.</p>\n<p><a class=\"reference external\" href=\"https://git-scm.com/docs/git-log#Documentation/git-log.txt---min-parentsltnumbergt\"><code class=\"docutils literal\"><span class=\"pre\">--max-parents=0</span></code></a> restricts the log to root commits which have no previous history.\n“Vanilla” commits have one parent, the previous commit.\nMerge commits have two or more, from the branches they merge in.</p>\n<p>A repository may actually have multiple root commits.\nRoot commits can be created at any time by starting a new disconnected branch with <a class=\"reference external\" href=\"https://git-scm.com/docs/git-switch#Documentation/git-switch.txt---orphanltnew-branchgt\"><code class=\"docutils literal\">git switch <span class=\"pre\">--orphan</span></code></a>.\nThose commits will appear on the log if their branches are ever merged into the main branch.</p>\n<p><a class=\"reference external\" href=\"https://github.com/git/git\">Git’s own repository</a> has <em>seven</em> root commits:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span><span class=\"w\"> </span>--oneline\n<span class=\"go\">0ca71b3737 basic options parsing and whatnot.</span>\n<span class=\"go\">16d6b8ab6f Initial import of a python script to import changesets from Perforce into git.</span>\n<span class=\"go\">cb07fc2a29 git-gui: Initial revision.</span>\n<span class=\"go\">161332a521 first working version</span>\n<span class=\"go\">1db95b00a2 Add initial version of gitk to the CVS repository</span>\n<span class=\"go\">2744b2344d Start of early patch applicator tools for git.</span>\n<span class=\"go\">e83c516331 Initial revision of &quot;git&quot;, the information manager from hell</span>\n</pre></div>\n<p>The last one listed is Linus Torvalds creating Git in 2005.\nThe others are root commits for tools like git-gui or git-subtree, which started in separate repositories but were merged in whilst preserving their histories.</p>\n<p>If you have multpile root commits, restrict the log to the one from the current branch by adding <a class=\"reference external\" href=\"https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent\"><code class=\"docutils literal\"><span class=\"pre\">--first-parent</span></code></a>:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--max-parents<span class=\"o\">=</span><span class=\"m\">0</span><span class=\"w\"> </span>--first-parent\n<span class=\"gu\">commit</span><span class=\"go\"> </span><span class=\"mh\">e83c5163316f89bfbde7d9ab23ca2e25604af290</span>\n<span class=\"kd\">Author:</span><span class=\"go\"> </span><span class=\"ss\">Linus Torvalds &lt;...&gt;</span>\n<span class=\"kd\">Date:</span><span class=\"go\">   </span><span class=\"ss\">Thu Apr 7 15:13:13 2005 -0700</span>\n\n<span class=\"go\">    Initial revision of &quot;git&quot;, the information manager from hell</span>\n</pre></div>\n<div class=\"section\" id=\"fin\">\n<h2>Fin<a class=\"headerlink\" href=\"#fin\" title=\"Permalink to this headline\"></a></h2>\n<p>I hope you get to the root of your investigation,</p>\n<p>—Adam</p>\n</div>",
    "pub_date": "2023-09-29T23:00:00Z",
    "upd_date": "2023-09-29T23:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:17.291Z",
    "updated": "2023-10-09T09:35:17.291Z",
    "tags": [
      98,
      118
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 135,
  "fields": {
    "feed": 2,
    "title": "My fourth appearance on Django Chat",
    "author": "Adam Johnson",
    "url": "https://adamj.eu/tech/2023/09/21/django-chat-boost-your-git-dx/",
    "image_url": "https://adamj.eu/tech/assets/2023-09-21-telephone.jpeg",
    "description": "<p>I’ve once more had the pleasure of joining Carlton and Will on the Django Chat podcast, in <a class=\"reference external\" href=\"https://djangochat.com/episodes/git-and-django-50-adam-johnson\">Episode #146</a>.\nWe spoke on Tuesday, just hours after Django 5.0 alpha 1 was released, on several topics:</p>\n<ul class=\"simple\">\n<li>Favourite features coming in Django 5.0</li>\n<li>My new book, <a class=\"reference external\" href=\"/tech/2023/06/03/boost-your-git-dx-early-access/\">Boost Your Git …</a></li></ul>",
    "summary": "<p>I’ve once more had the pleasure of joining Carlton and Will on the Django Chat podcast, in <a class=\"reference external\" href=\"https://djangochat.com/episodes/git-and-django-50-adam-johnson\">Episode #146</a>.\nWe spoke on Tuesday, just hours after Django 5.0 alpha 1 was released, on several topics:</p>\n<ul class=\"simple\">\n<li>Favourite features coming in Django 5.0</li>\n<li>My new book, <a class=\"reference external\" href=\"/tech/2023/06/03/boost-your-git-dx-early-access/\">Boost Your Git …</a></li></ul>",
    "content": "<p>I’ve once more had the pleasure of joining Carlton and Will on the Django Chat podcast, in <a class=\"reference external\" href=\"https://djangochat.com/episodes/git-and-django-50-adam-johnson\">Episode #146</a>.\nWe spoke on Tuesday, just hours after Django 5.0 alpha 1 was released, on several topics:</p>\n<ul class=\"simple\">\n<li>Favourite features coming in Django 5.0</li>\n<li>My new book, <a class=\"reference external\" href=\"/tech/2023/06/03/boost-your-git-dx-early-access/\">Boost Your Git DX</a>, available now in early access.</li>\n<li>Some Git tips: <a class=\"reference external\" href=\"https://adamj.eu/tech/2022/10/26/git-how-to-enable-autocorrect/\">autocorrect</a>, <a class=\"reference external\" href=\"https://adamj.eu/tech/2022/11/06/git-set-up-a-global-ignore-file/\">global ignore files</a>, and <a class=\"reference external\" href=\"/tech/2023/09/18/git-dont-create-gitkeep/\">tracking a directory with <code class=\"docutils literal\">.gitignore</code></a>.</li>\n<li>The future of Git.</li>\n<li>Making an AI version of myself.</li>\n<li>My “magic wand” feature for the future of Django.</li>\n</ul>\n<p>Also, there’s a little easter egg: at 43:35 you can hear my baby boy pushing his “twinkle twinkle little star” walker in the background 😂</p>\n<p>Listen on <a class=\"reference external\" href=\"https://djangochat.com/episodes/boost-your-django-dx-adam-johnon\">the episode page</a> or your favourite podcast consumption channel.</p>\n<p>Enjoy!</p>\n<p>—Adam</p>",
    "pub_date": "2023-09-20T23:00:00Z",
    "upd_date": "2023-09-20T23:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:17.357Z",
    "updated": "2023-10-09T09:35:17.357Z",
    "tags": [
      113,
      98,
      118
    ]
  }
},
{
  "model": "feeds.entry",
  "pk": 136,
  "fields": {
    "feed": 1,
    "title": "Запущен сайт Трололо",
    "author": null,
    "url": "https://hazadus.ru/blog/nuxt-board-deploy",
    "image_url": "https://hazadus.ru/images/blog/nuxt-board-deploy.png",
    "description": "Приложение представляет собой упрощенный аналог Trello (отсюда и название – Трололо!) и позволяет создавать канбан-доски.",
    "summary": "Приложение представляет собой упрощенный аналог Trello (отсюда и название – Трололо!) и позволяет создавать канбан-доски.",
    "content": null,
    "pub_date": "2023-08-31T00:00:00Z",
    "upd_date": "2023-08-31T00:00:00Z",
    "is_read": true,
    "is_favorite": true,
    "created": "2023-10-09T09:35:17.548Z",
    "updated": "2023-10-09T09:36:36.782Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 137,
  "fields": {
    "feed": 1,
    "title": "Счетчик просмотров страниц в Nuxt 3 с использованием Redis",
    "author": null,
    "url": "https://hazadus.ru/blog/redis-nuxt-view-counter",
    "image_url": "https://hazadus.ru/images/blog/redis-nuxt-view-counter.jpg",
    "description": "Пример использования Redis для создания простого счётчика просмотров страниц в Nuxt 3.",
    "summary": "Пример использования Redis для создания простого счётчика просмотров страниц в Nuxt 3.",
    "content": null,
    "pub_date": "2023-06-30T00:00:00Z",
    "upd_date": "2023-06-30T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:17.778Z",
    "updated": "2023-10-09T09:35:17.778Z",
    "tags": []
  }
},
{
  "model": "feeds.entry",
  "pk": 138,
  "fields": {
    "feed": 1,
    "title": "Использование Front-matter в Nuxt Content",
    "author": null,
    "url": "https://hazadus.ru/blog/nuxt-content-front-matter",
    "image_url": "https://hazadus.ru/images/blog/nuxt-content-front-matter.jpg",
    "description": "Краткий пример того, как можно использовать метаданные в формате \"Front matter\" в Markdown-файлах в Nuxt Content.",
    "summary": "Краткий пример того, как можно использовать метаданные в формате \"Front matter\" в Markdown-файлах в Nuxt Content.",
    "content": null,
    "pub_date": "2023-06-26T00:00:00Z",
    "upd_date": "2023-06-26T00:00:00Z",
    "is_read": false,
    "is_favorite": false,
    "created": "2023-10-09T09:35:17.992Z",
    "updated": "2023-10-09T09:35:17.992Z",
    "tags": []
  }
}
]
