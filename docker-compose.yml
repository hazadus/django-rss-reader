version: "3.9"
services:
  web:
    container_name: "web"
    restart: unless-stopped
    build: .
    command: gunicorn django_project.wsgi -b 0.0.0.0:8000
    volumes:
      - .:/code
    environment:
      - "DEBUG=False"
      - "DB_NAME=postgres"
      - "DB_USER=postgres"
      - "DB_PASSWORD=postgres"
      - "DB_HOST=db"
      - "DB_PORT=5432"
      - "CELERY_BROKER_URL=amqp://rmuser:rmpassword@rabbitmq:5672//"
    depends_on:
      - db
  db:
    container_name: "db"
    image: postgres:13
    restart: unless-stopped
    command: postgres -c 'max_connections=200'
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
#    ports:
#      - "5432:5432"
  worker:
    container_name: "worker"
    restart: unless-stopped
    build: .
    volumes:
      - .:/code
    command: ['celery', '--workdir=/code', '-A', 'django_project', 'worker']
    environment:
      - "DEBUG=False"
      - "DB_NAME=postgres"
      - "DB_USER=postgres"
      - "DB_PASSWORD=postgres"
      - "DB_HOST=db"
      - "DB_PORT=5432"
      - "CELERY_BROKER_URL=amqp://rmuser:rmpassword@rabbitmq:5672//"
  rabbitmq:
    container_name: "mq"
    image: rabbitmq:3.10.7-management
    restart: unless-stopped
    hostname: rabbitmq
    volumes:
      - ./docker/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
#    ports:
#      - "15672:15672"
#      - "5672:5672"
  nginx:
    container_name: "nginx"
    image: nginx:1.23-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/archive/rss.hazadus.ru/:/certs
      - ./uploads:/uploads
